
Allocation des symboles communs
Symbole commun      taille            fichier

UART2rpointer       0x4               C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
heap_ptr            0x4               C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
UART2wpointer       0x4               C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
UART2SerialBuffer   0x80              C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
UART1rpointer       0x4               C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
UART1SerialBuffer   0x80              C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
UART1wpointer       0x4               C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o

Sections d'entrée éliminées

 .reginfo       0x0000000000000000       0x18 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .reginfo       0x0000000000000000       0x18 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 .reginfo       0x0000000000000000       0x18 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o
 .reginfo       0x0000000000000000       0x18 C:\Users\jpm\Desktop\x.2\p32\obj\non-free\processor.o
 .reginfo       0x0000000000000000       0x18 C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
 .reginfo       0x0000000000000000       0x18 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
 .reginfo       0x0000000000000000       0x18 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

Configuration mémoire

Nom              Origine            Longueur           Attributs
kseg0_program_mem 0x000000009d006a00 0x000000000007a600 xr
kseg0_boot_mem   0x000000009d006490 0x0000000000000970
exception_mem    0x000000009d005000 0x0000000000001000
kseg1_boot_mem   0x000000009d006000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
boot_software_key 0x00000000a0000000 0x0000000000000004
kseg1_data_mem   0x00000000a0000004 0x0000000000007ffc w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Script de l'éditeurs de liens and table de projection mémoire

LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
                0x0000000000002000                _min_heap_size = 0x2000
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/../../../../mips-elf/lib/soft-float/el\libm.a
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el\libgcc.a
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/../../../../mips-elf/lib/soft-float/el\libc.a
LOAD C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
LOAD C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o
LOAD C:\Users\jpm\Desktop\x.2\p32\obj\non-free\processor.o
LOAD C:\Users\jpm\Desktop\x.2\p32\obj\non-free\usb\libcdc.a
LOAD C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el\libgcc.a
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el\libgcc.a
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
LOAD c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o
                0x00000000bf882030                BMXDUPBA = 0xbf882030
                0x00000000bf882010                BMXDKPBA = 0xbf882010
                0x00000000bf882020                BMXDUDBA = 0xbf882020
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d005000                _ebase_address = 0x9d005000
                0x000000009d006000                _RESET_ADDR = 0x9d006000
                0x000000009d006380                _BEV_EXCPT_ADDR = 0x9d006380
                0x000000009d006480                _DBG_EXCPT_ADDR = 0x9d006480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d005180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.boot_software_key_sec
 *(.boot_software_key_sec)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)

.reset          0x000000009d006000       0x10
 *(.reset)
 .reset         0x000000009d006000       0x10 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o
                0x000000009d006000                _reset

.bev_excpt      0x000000009d006380        0x4
 *(.bev_handler)
 .bev_handler   0x000000009d006380        0x4 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o

.dbg_excpt      0x000000009d006480        0x0
                0x000000009d006480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d005180        0x4
 *(.gen_handler)
 .gen_handler   0x000000009d005180        0x4 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o

.vector_0       0x000000009d005200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d005220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d005240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d005260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d005280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0052a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0052c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0052e0        0x0
 *(.vector_7)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d005300        0xc
 *(.vector_8)
 .vector_8      0x000000009d005300        0xc C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d005320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d005340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d005360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d005380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0053a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0053c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0053e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d005400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d005420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d005440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d005460        0x0
 *(.vector_19)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d005480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0054a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0054c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0054e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d005500        0xc
 *(.vector_24)
 .vector_24     0x000000009d005500        0xc C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d005520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d005540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d005560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d005580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0055a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0055c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0055e0        0xc
 *(.vector_31)
 .vector_31     0x000000009d0055e0        0xc C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d005600        0xc
 *(.vector_32)
 .vector_32     0x000000009d005600        0xc C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d005620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d005640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d005660        0xc
 *(.vector_35)
 .vector_35     0x000000009d005660        0xc C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d005680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0056a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0056c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0056e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d005700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d005720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d005740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d005760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d005780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0057a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0057c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0057e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d005800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d005820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d005840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d005860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d005880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0058a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0058c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0058e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d005900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d005920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d005940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d005960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d005980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0059a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0059c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0059e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.startup        0x000000009d006490      0x1bc
 *(.startup)
 .startup       0x000000009d006490      0x1bc C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o

.text           0x000000009d006a00     0x2884
                0x000000009d006a00                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d006a00        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .text          0x000000009d006a00      0x12c c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .text          0x000000009d006b2c     0x21b4 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
                0x000000009d007138                SerialUART1WriteChar
                0x000000009d00715c                SerialUART2WriteChar
                0x000000009d007180                SystemUnlock
                0x000000009d0071a8                SystemLock
                0x000000009d0071c0                Reset
                0x000000009d0071fc                GetSystemClock
                0x000000009d007290                GetPeripheralClock
                0x000000009d0072bc                SetFlashWaitStates
                0x000000009d00732c                SetSystemClock
                0x000000009d00756c                SetPeripheralClock
                0x000000009d007584                SystemConfig
                0x000000009d0075bc                GetCP0Count
                0x000000009d0075c4                SetCP0Count
                0x000000009d0075d4                Delayus
                0x000000009d007668                Delayms
                0x000000009d0076a0                pinmode
                0x000000009d007860                digitalwrite
                0x000000009d007a20                digitalread
                0x000000009d007b3c                toggle
                0x000000009d007b70                pprintf
                0x000000009d007b7c                psprintf
                0x000000009d007b9c                IntSetVectorPriority
                0x000000009d007cf4                IntGetVectorPriority
                0x000000009d007d48                IntGetVectorSubPriority
                0x000000009d007d9c                IntClearFlag
                0x000000009d007df0                IntGetFlag
                0x000000009d007e3c                IntEnable
                0x000000009d007e88                IntDisable
                0x000000009d007edc                IntGetInterruptVectorNumber
                0x000000009d007eec                IntGetInterruptVectorPriority
                0x000000009d007efc                IntDisableInterrupts
                0x000000009d007f08                IntEnableInterrupts
                0x000000009d007f14                IntRestoreInterrupts
                0x000000009d007f24                IntSetEBASE
                0x000000009d007f34                IntConfigureSystem
                0x000000009d007fd0                SerialSetDataRate
                0x000000009d008094                SerialGetDataRate
                0x000000009d008174                SerialEnable
                0x000000009d0081b0                SerialSetLineControl
                0x000000009d0081ec                SerialFlush
                0x000000009d008220                SerialPinConfigure
                0x000000009d008284                SerialIntConfigure
                0x000000009d00830c                SerialConfigure
                0x000000009d00849c                SerialPrintf
                0x000000009d0084fc                SerialAvailable
                0x000000009d008540                SerialRead
                0x000000009d0085dc                SerialGetKey
                0x000000009d008650                SerialGetString
                0x000000009d0086e8                SerialGetDataBuffer
                0x000000009d0087b4                Serial1Interrupt
                0x000000009d008808                Serial2Interrupt
                0x000000009d00885c                strcmp
                0x000000009d008898                strcat
                0x000000009d0088dc                strchr
                0x000000009d008918                strcpy
                0x000000009d00893c                memcmp
                0x000000009d008984                sbrk
                0x000000009d0089a0                open
                0x000000009d008a94                close
                0x000000009d008a9c                fstat
                0x000000009d008aa4                isatty
                0x000000009d008aac                lseek
                0x000000009d008ab4                read
                0x000000009d008b3c                write
                0x000000009d008c08                setup
                0x000000009d008c14                loop
                0x000000009d008c4c                main
                0x000000009d008cb0                Tmr2Interrupt
                0x000000009d008cbc                SPI1Interrupt
                0x000000009d008cc8                SPI2Interrupt
                0x000000009d008cd4                RTCCInterrupt
 .text          0x000000009d008ce0       0x14 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o
 .text          0x000000009d008cf4        0x0 C:\Users\jpm\Desktop\x.2\p32\obj\non-free\processor.o
 .text          0x000000009d008cf4      0x53c C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
                0x000000009d008cf4                vector_8_ISR_wrapper
                0x000000009d008e00                vector_24_ISR_wrapper
                0x000000009d008f0c                vector_31_ISR_wrapper
                0x000000009d009018                vector_32_ISR_wrapper
                0x000000009d009124                vector_35_ISR_wrapper
 .text          0x000000009d009230       0x54 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
 .text          0x000000009d009284        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d009284                _text_end = .

.init           0x000000009d009284       0x38
 .init          0x000000009d009284        0x8 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
                0x000000009d009284                _init
 .init          0x000000009d00928c       0x10 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .init          0x000000009d00929c       0x10 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
 .init          0x000000009d0092ac       0x10 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

.fini           0x000000009d0092bc       0x28
 .fini          0x000000009d0092bc        0x8 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
                0x000000009d0092bc                _fini
 .fini          0x000000009d0092c4       0x10 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .fini          0x000000009d0092d4       0x10 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

.rodata         0x000000009d0092e4      0x188
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x000000009d0092e4       0x1c C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 .rodata        0x000000009d009300      0x16c C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
                0x000000009d00936c                portmask
                0x000000009d0093ec                pinmask
 *(.rodata1)
                0x000000009d00946c                . = ALIGN (0x4)

.sdata2         0x000000009d00946c        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d00946c                . = ALIGN (0x4)

.sbss2          0x000000009d00946c        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d00946c                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame       0x000000009d00946c        0x4
 *(.eh_frame)
 .eh_frame      0x000000009d00946c        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .eh_frame      0x000000009d00946c        0x4 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o

.dbg_data       0x00000000a0000004        0x0
                0x00000000a0000004                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000004        0x0 address de chargement 0x000000009d009470
                0x00000000a0000004                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000004        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .data          0x00000000a0000004        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .data          0x00000000a0000004        0x0 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 .data          0x00000000a0000004        0x0 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o
 .data          0x00000000a0000004        0x0 C:\Users\jpm\Desktop\x.2\p32\obj\non-free\processor.o
 .data          0x00000000a0000004        0x0 C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
 .data          0x00000000a0000004        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
 .data          0x00000000a0000004        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d009470                _data_image_begin = LOADADDR (.data)

.ctors          0x00000000a0000004        0x8 address de chargement 0x000000009d009470
 .ctors         0x00000000a0000004        0x4 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .ctors         0x00000000a0000008        0x4 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o

.dtors          0x00000000a000000c        0x8 address de chargement 0x000000009d009478
 .dtors         0x00000000a000000c        0x4 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .dtors         0x00000000a0000010        0x4 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
                0x00000000a0000010                __DTOR_END__

.jcr            0x00000000a0000014        0x4 address de chargement 0x000000009d009480
 .jcr           0x00000000a0000014        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .jcr           0x00000000a0000014        0x4 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o

.eh_frame
 *(.eh_frame)
                0x00000000a0008010                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a0000018        0x4 address de chargement 0x000000009d009484
                0x00000000a0000018                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a0000018        0x4 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
                0x00000000a0000018                __dso_handle
                0x00000000a000001c                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a000001c                . = ALIGN (0x4)
                0x00000000a000001c                _data_end = .
                0x00000000a000001c                _bss_begin = .

.sbss           0x00000000a000001c       0x18 address de chargement 0x000000009d009488
                0x00000000a000001c                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a000001c        0x4 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 *(.scommon)
 .scommon       0x00000000a0000020       0x14 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
                0x00000000a0000020                UART2rpointer
                0x00000000a0000024                heap_ptr
                0x00000000a0000028                UART2wpointer
                0x00000000a000002c                UART1rpointer
                0x00000000a0000030                UART1wpointer
                0x00000000a0000034                _sbss_end = .

.bss            0x00000000a0000034      0x170 address de chargement 0x000000009d009488
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a0000034        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .bss           0x00000000a0000034       0x20 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .bss           0x00000000a0000054       0x50 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 .bss           0x00000000a00000a4        0x0 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o
 .bss           0x00000000a00000a4        0x0 C:\Users\jpm\Desktop\x.2\p32\obj\non-free\processor.o
 .bss           0x00000000a00000a4        0x0 C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
 .bss           0x00000000a00000a4        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
 .bss           0x00000000a00000a4        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o
 *(COMMON)
 COMMON         0x00000000a00000a4      0x100 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
                0x00000000a00000a4                UART2SerialBuffer
                0x00000000a0000124                UART1SerialBuffer
                0x00000000a00001a4                . = ALIGN (0x4)
                0x00000000a00001a4                . = ALIGN (0x4)
                0x00000000a00001a4                _end = .
                0x00000000a00001a4                _bss_end = .

.heap           0x00000000a00001a4     0x2000 address de chargement 0x000000009d009488
                0x00000000a00001a4                _heap = .
                0x00000000a00021a4                . = (. + _min_heap_size)
 *fill*         0x00000000a00001a4     0x2000 00

.stack          0x00000000a00021a4      0x400 address de chargement 0x000000009d009488
                0x00000000a00021a4                _splim = .
                0x00000000a00021a4                _SPLIM = .
                0x00000000a00025a4                . = (. + _min_stack_size)
 *fill*         0x00000000a00021a4      0x400 00

.ramfunc        0x00000000a0002800        0x0 address de chargement 0x000000009d009488
                0x00000000a0002800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0002800                . = ALIGN (0x4)
                0x00000000a0002800                _ramfunc_end = .
                0x000000009d009488                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x00000000000027fc                _bmxdkpba_address = (_ramfunc_begin - ORIGIN (kseg1_data_mem))
                0x0000000000007ffc                _bmxdudba_address = 0x7ffc
                0x0000000000007ffc                _bmxdupba_address = 0x7ffc
                0x00000000a0008000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):(ORIGIN (kseg1_data_mem) + 0x7ffc)
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0xa80
 *(.pdr)
 .pdr           0x0000000000000000        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .pdr           0x0000000000000000        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .pdr           0x0000000000000000      0x940 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 .pdr           0x0000000000000940       0xa0 C:\Users\jpm\AppData\Local\Temp\cctZtxNt.o
 .pdr           0x00000000000009e0        0x0 C:\Users\jpm\Desktop\x.2\p32\obj\non-free\processor.o
 .pdr           0x00000000000009e0       0xa0 C:\Users\jpm\AppData\Local\Temp\ccNEbPDB.o
 .pdr           0x0000000000000a80        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o
 .pdr           0x0000000000000a80        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.mdebug.abi32   0x0000000000000000        0x0
 .mdebug.abi32  0x0000000000000000        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .mdebug.abi32  0x0000000000000000        0x0 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 .mdebug.abi32  0x0000000000000000        0x0 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o

.gnu.attributes
                0x0000000000000000       0x10
 .gnu.attributes
                0x0000000000000000       0x10 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .gnu.attributes
                0x0000000000000010       0x10 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
 .gnu.attributes
                0x0000000000000020       0x10 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o

.comment        0x0000000000000000       0x54
 *(.comment)
 .comment       0x0000000000000000       0x12 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtbegin.o
 .comment       0x0000000000000012       0x30 C:\Users\jpm\AppData\Local\Temp\ccJYb9jB.o
                                         0x31 (taille avant relaxe)
 .comment       0x0000000000000042       0x12 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtend.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x50
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .debug_aranges
                0x0000000000000028       0x28 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x104
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x82 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .debug_info    0x0000000000000082       0x82 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

.debug_abbrev   0x0000000000000000       0x24
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x12 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .debug_abbrev  0x0000000000000012       0x12 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

.debug_line     0x0000000000000000       0xd6
 *(.debug_line)
 .debug_line    0x0000000000000000       0x6a c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .debug_line    0x000000000000006a       0x6c c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(C:\Users\jpm\Desktop\x.2\source\main32.elf elf32-littlemips)

.debug_ranges   0x0000000000000000       0x40
 .debug_ranges  0x0000000000000000       0x20 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crti.o
 .debug_ranges  0x0000000000000020       0x20 c:/users/jpm/desktop/x.2/win32/p32/bin/../lib/gcc/mips-elf/4.5.2/soft-float/el/crtn.o
