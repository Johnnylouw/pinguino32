gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
               00004 ; This file was generated Sun Feb 20 17:09:35 2011
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f2550
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _preloadL
               00016         global _preloadH
               00017         global _intCountLimit
               00018         global _intCount
               00019         global _intUsed
               00020         global __millis
               00021         global _rx
               00022         global _wpointer
               00023         global _rpointer
               00024         global _Delayms
               00025         global _Delayus
               00026         global _detachInterrupt
               00027         global _int_init
               00028         global _int_start
               00029         global _int_stop
               00030         global _userhighinterrupt
               00031         global _userinterrupt
               00032         global _millis_init
               00033         global _Millis
               00034         global _printf
               00035         global _sprintf
               00036         global _serial_begin
               00037         global _serial_available
               00038         global _serial_putchar
               00039         global _serial_interrupt
               00040         global _serial_read
               00041         global _serial_flush
               00042         global _serial_getkey
               00043         global _serial_printf
               00044         global _serial_write
               00045         global _epap_in
               00046         global _epap_out
               00047         global _epapin_init
               00048         global _epapout_init
               00049         global _setup
               00050         global _loop
Error [113] : Symbol not previously defined (_micros).
               00051         global _micros
               00052         global _pinguino_main
               00053         global _high_priority_isr
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00054         global _low_priority_isr
               00055 
               00056 ;--------------------------------------------------------
               00057 ; extern variables in this module
               00058 ;--------------------------------------------------------
               00059         extern __gptrget3
               00060         extern __gptrput1
               00061         extern __gptrput3
               00062         extern __gptrget1
               00063         extern __gptrget2
               00064         extern _SPPDATAbits
               00065         extern _SPPCFGbits
               00066         extern _SPPEPSbits
               00067         extern _SPPCONbits
               00068         extern _UFRMLbits
               00069         extern _UFRMHbits
               00070         extern _UIRbits
               00071         extern _UIEbits
               00072         extern _UEIRbits
               00073         extern _UEIEbits
               00074         extern _USTATbits
               00075         extern _UCONbits
               00076         extern _UADDRbits
               00077         extern _UCFGbits
               00078         extern _UEP0bits
               00079         extern _UEP1bits
               00080         extern _UEP2bits
               00081         extern _UEP3bits
               00082         extern _UEP4bits
               00083         extern _UEP5bits
               00084         extern _UEP6bits
               00085         extern _UEP7bits
               00086         extern _UEP8bits
               00087         extern _UEP9bits
               00088         extern _UEP10bits
               00089         extern _UEP11bits
               00090         extern _UEP12bits
               00091         extern _UEP13bits
               00092         extern _UEP14bits
               00093         extern _UEP15bits
               00094         extern _PORTAbits
               00095         extern _PORTBbits
               00096         extern _PORTCbits
               00097         extern _PORTDbits
               00098         extern _PORTEbits
               00099         extern _LATAbits
               00100         extern _LATBbits
               00101         extern _LATCbits
               00102         extern _LATDbits
               00103         extern _LATEbits
               00104         extern _TRISAbits
               00105         extern _TRISBbits
               00106         extern _TRISCbits
               00107         extern _TRISDbits
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00108         extern _TRISEbits
               00109         extern _OSCTUNEbits
               00110         extern _PIE1bits
               00111         extern _PIR1bits
               00112         extern _IPR1bits
               00113         extern _PIE2bits
               00114         extern _PIR2bits
               00115         extern _IPR2bits
               00116         extern _EECON1bits
               00117         extern _RCSTAbits
               00118         extern _TXSTAbits
               00119         extern _T3CONbits
               00120         extern _CMCONbits
               00121         extern _CVRCONbits
               00122         extern _ECCP1ASbits
               00123         extern _ECCP1DELbits
               00124         extern _BAUDCONbits
               00125         extern _CCP2CONbits
               00126         extern _CCP1CONbits
               00127         extern _ADCON2bits
               00128         extern _ADCON1bits
               00129         extern _ADCON0bits
               00130         extern _SSPCON2bits
               00131         extern _SSPCON1bits
               00132         extern _SSPSTATbits
               00133         extern _T2CONbits
               00134         extern _T1CONbits
               00135         extern _RCONbits
               00136         extern _WDTCONbits
               00137         extern _HLVDCONbits
               00138         extern _OSCCONbits
               00139         extern _T0CONbits
               00140         extern _STATUSbits
               00141         extern _FSR2Hbits
               00142         extern _BSRbits
               00143         extern _FSR1Hbits
               00144         extern _FSR0Hbits
               00145         extern _INTCON3bits
               00146         extern _INTCON2bits
               00147         extern _INTCONbits
               00148         extern _TBLPTRUbits
               00149         extern _PCLATHbits
               00150         extern _PCLATUbits
               00151         extern _STKPTRbits
               00152         extern _TOSUbits
               00153         extern _usb_device_state
               00154         extern _usb_active_cfg
               00155         extern _usb_active_alt_setting
               00156         extern _SPPDATA
               00157         extern _SPPCFG
               00158         extern _SPPEPS
               00159         extern _SPPCON
               00160         extern _UFRML
               00161         extern _UFRMH
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00162         extern _UIR
               00163         extern _UIE
               00164         extern _UEIR
               00165         extern _UEIE
               00166         extern _USTAT
               00167         extern _UCON
               00168         extern _UADDR
               00169         extern _UCFG
               00170         extern _UEP0
               00171         extern _UEP1
               00172         extern _UEP2
               00173         extern _UEP3
               00174         extern _UEP4
               00175         extern _UEP5
               00176         extern _UEP6
               00177         extern _UEP7
               00178         extern _UEP8
               00179         extern _UEP9
               00180         extern _UEP10
               00181         extern _UEP11
               00182         extern _UEP12
               00183         extern _UEP13
               00184         extern _UEP14
               00185         extern _UEP15
               00186         extern _PORTA
               00187         extern _PORTB
               00188         extern _PORTC
               00189         extern _PORTD
               00190         extern _PORTE
               00191         extern _LATA
               00192         extern _LATB
               00193         extern _LATC
               00194         extern _LATD
               00195         extern _LATE
               00196         extern _TRISA
               00197         extern _TRISB
               00198         extern _TRISC
               00199         extern _TRISD
               00200         extern _TRISE
               00201         extern _OSCTUNE
               00202         extern _PIE1
               00203         extern _PIR1
               00204         extern _IPR1
               00205         extern _PIE2
               00206         extern _PIR2
               00207         extern _IPR2
               00208         extern _EECON1
               00209         extern _EECON2
               00210         extern _EEDATA
               00211         extern _EEADR
               00212         extern _RCSTA
               00213         extern _TXSTA
               00214         extern _TXREG
               00215         extern _RCREG
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00216         extern _SPBRG
               00217         extern _SPBRGH
               00218         extern _T3CON
               00219         extern _TMR3L
               00220         extern _TMR3H
               00221         extern _CMCON
               00222         extern _CVRCON
               00223         extern _ECCP1AS
               00224         extern _ECCP1DEL
               00225         extern _BAUDCON
               00226         extern _CCP2CON
               00227         extern _CCPR2L
               00228         extern _CCPR2H
               00229         extern _CCP1CON
               00230         extern _CCPR1L
               00231         extern _CCPR1H
               00232         extern _ADCON2
               00233         extern _ADCON1
               00234         extern _ADCON0
               00235         extern _ADRESL
               00236         extern _ADRESH
               00237         extern _SSPCON2
               00238         extern _SSPCON1
               00239         extern _SSPSTAT
               00240         extern _SSPADD
               00241         extern _SSPBUF
               00242         extern _T2CON
               00243         extern _PR2
               00244         extern _TMR2
               00245         extern _T1CON
               00246         extern _TMR1L
               00247         extern _TMR1H
               00248         extern _RCON
               00249         extern _WDTCON
               00250         extern _HLVDCON
               00251         extern _OSCCON
               00252         extern _T0CON
               00253         extern _TMR0L
               00254         extern _TMR0H
               00255         extern _STATUS
               00256         extern _FSR2L
               00257         extern _FSR2H
               00258         extern _PLUSW2
               00259         extern _PREINC2
               00260         extern _POSTDEC2
               00261         extern _POSTINC2
               00262         extern _INDF2
               00263         extern _BSR
               00264         extern _FSR1L
               00265         extern _FSR1H
               00266         extern _PLUSW1
               00267         extern _PREINC1
               00268         extern _POSTDEC1
               00269         extern _POSTINC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00270         extern _INDF1
               00271         extern _WREG
               00272         extern _FSR0L
               00273         extern _FSR0H
               00274         extern _PLUSW0
               00275         extern _PREINC0
               00276         extern _POSTDEC0
               00277         extern _POSTINC0
               00278         extern _INDF0
               00279         extern _INTCON3
               00280         extern _INTCON2
               00281         extern _INTCON
               00282         extern _PRODL
               00283         extern _PRODH
               00284         extern _TABLAT
               00285         extern _TBLPTRL
               00286         extern _TBLPTRH
               00287         extern _TBLPTRU
               00288         extern _PCL
               00289         extern _PCLATH
               00290         extern _PCLATU
               00291         extern _STKPTR
               00292         extern _TOSL
               00293         extern _TOSH
               00294         extern _TOSU
               00295         extern _delay10ktcy
               00296         extern __moduint
               00297         extern __divuint
               00298         extern __mulint
               00299         extern __mullong
               00300         extern __divulong
               00301 ;--------------------------------------------------------
               00302 ;       Equates to used internal registers
               00303 ;--------------------------------------------------------
  00000FD8     00304 STATUS  equ     0xfd8
  00000FF9     00305 PCL     equ     0xff9
  00000FFA     00306 PCLATH  equ     0xffa
  00000FFB     00307 PCLATU  equ     0xffb
  00000FF2     00308 INTCON  equ     0xff2
  00000FE8     00309 WREG    equ     0xfe8
  00000FE0     00310 BSR     equ     0xfe0
  00000FFD     00311 TOSL    equ     0xffd
  00000FFE     00312 TOSH    equ     0xffe
  00000FFF     00313 TOSU    equ     0xfff
  00000FF6     00314 TBLPTRL equ     0xff6
  00000FE9     00315 FSR0L   equ     0xfe9
  00000FEA     00316 FSR0H   equ     0xfea
  00000FE1     00317 FSR1L   equ     0xfe1
  00000FE2     00318 FSR1H   equ     0xfe2
  00000FD9     00319 FSR2L   equ     0xfd9
  00000FDA     00320 FSR2H   equ     0xfda
  00000FEF     00321 INDF0   equ     0xfef
  00000FE6     00322 POSTINC1        equ     0xfe6
  00000FE5     00323 POSTDEC1        equ     0xfe5
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
  00000FE4     00324 PREINC1 equ     0xfe4
  00000FE3     00325 PLUSW1  equ     0xfe3
  00000FDB     00326 PLUSW2  equ     0xfdb
  00000FF3     00327 PRODL   equ     0xff3
  00000FF4     00328 PRODH   equ     0xff4
               00329 
               00330 
               00331 ; Internal registers
               00332 .registers      udata_ovr       0x0000
               00333 r0x00   res     1
               00334 r0x01   res     1
               00335 r0x02   res     1
               00336 r0x03   res     1
               00337 r0x04   res     1
               00338 r0x05   res     1
               00339 r0x06   res     1
               00340 r0x07   res     1
               00341 r0x08   res     1
               00342 r0x09   res     1
               00343 r0x0a   res     1
               00344 r0x0b   res     1
               00345 r0x0c   res     1
               00346 r0x0d   res     1
               00347 r0x0e   res     1
               00348 r0x0f   res     1
               00349 r0x10   res     1
               00350 r0x11   res     1
               00351 r0x12   res     1
               00352 r0x13   res     1
               00353 r0x14   res     1
               00354 r0x15   res     1
               00355 r0x16   res     1
               00356 r0x17   res     1
               00357 r0x18   res     1
               00358 r0x19   res     1
               00359 r0x1a   res     1
               00360 
               00361 udata_main_0    udata
               00362 _intFunction    res     60
               00363 
               00364 udata_main_1    udata
               00365 _intCount       res     8
               00366 
               00367 udata_main_2    udata
               00368 _intCountLimit  res     8
               00369 
               00370 udata_main_3    udata
               00371 _preloadH       res     4
               00372 
               00373 udata_main_4    udata
               00374 _preloadL       res     4
               00375 
               00376 udata_main_5    udata
               00377 _putchar        res     3
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00378 
               00379 udata_main_6    udata
               00380 _intUsed        res     20
               00381 
               00382 udata_main_7    udata
               00383 __millis        res     4
               00384 
               00385 udata_main_8    udata
               00386 _printi_print_buf_1_1   res     12
               00387 
               00388 udata_main_9    udata
               00389 _print_scr_1_1  res     2
               00390 
               00391 udata_main_10   udata
               00392 _sprintf_out_1_1        res     3
               00393 
               00394 udata_main_11   udata
               00395 _wpointer       res     1
               00396 
               00397 udata_main_12   udata
               00398 _rpointer       res     1
               00399 
               00400 udata_main_13   udata
               00401 _rx     res     128
               00402 
               00403 ;--------------------------------------------------------
               00404 ; global & static initialisations
               00405 ;--------------------------------------------------------
               00406 ; ; Starting pCode block
               00407 S_main__high_priority_isr       code    0X002020
2020 00408 _high_priority_isr:
               00409 ;       .line   121; /home/mandon/c32 linux/source/main.c       void high_priority_isr(void) interrupt
2020 CFE8 FFE5 00410         MOVFF   WREG, POSTDEC1
2024 CFD8 FFE5 00411         MOVFF   STATUS, POSTDEC1
2028 CFE0 FFE5 00412         MOVFF   BSR, POSTDEC1
202C CFF3 FFE5 00413         MOVFF   PRODL, POSTDEC1
2030 CFF4 FFE5 00414         MOVFF   PRODH, POSTDEC1
2034 CFE9 FFE5 00415         MOVFF   FSR0L, POSTDEC1
2038 CFEA FFE5 00416         MOVFF   FSR0H, POSTDEC1
203C CFFA FFE5 00417         MOVFF   PCLATH, POSTDEC1
               00418 ;       .line   157; /home/mandon/c32 linux/source/main.c       if (PIR1bits.RCIF) 
2040 CFFB FFE5 00419         MOVFF   PCLATU, POSTDEC1
               00420 ; #     MOVFF   FSR1L, FSR2L
               00421 ; #     BTFSS   _PIR1bits, 5
               00422 ; #     GOTO    _00582_DS_
               00423 ; #     CALL    _serial_interrupt
               00424 ; #     BTFSS   _INTCONbits, 2
               00425 ;       .line   158; /home/mandon/c32 linux/source/main.c       serial_interrupt();
2044 BA00      00426         BTFSC   _PIR1bits, 5
               00427 ;       .line   162; /home/mandon/c32 linux/source/main.c       if (INTCONbits.TMR0IF)
2046 EC00 F000 00428         CALL    _serial_interrupt
204A A400      00429         BTFSS   _INTCONbits, 2
204C D000      00430         BRA     _00585_DS_
               00431 ;       .line   164; /home/mandon/c32 linux/source/main.c       INTCONbits.TMR0IF=0;
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
204E 9400      00432         BCF     _INTCONbits, 2
               00433 ;       .line   165; /home/mandon/c32 linux/source/main.c       TMR0H=0xE8;
2050 0EE8      00434         MOVLW   0xe8
2052 6E00      00435         MOVWF   _TMR0H
               00436 ;       .line   166; /home/mandon/c32 linux/source/main.c       TMR0L=0x50;
2054 0E50      00437         MOVLW   0x50
2056 6E00      00438         MOVWF   _TMR0L
2058 0000      00439         BANKSEL __millis
               00440 ;       .line   167; /home/mandon/c32 linux/source/main.c       _millis++;
205A 2B00      00441         INCF    __millis, F, B
205C E300      00442         BNC     _10590_DS_
               00443 ; removed redundant BANKSEL
205E 2B00      00444         INCF    (__millis + 1), F, B
2060 00445 _10590_DS_:
2060 E300      00446         BNC     _20591_DS_
2062 0000      00447         BANKSEL (__millis + 2)
2064 2B00      00448         INCF    (__millis + 2), F, B
2066 00449 _20591_DS_:
2066 E300      00450         BNC     _30592_DS_
2068 0000      00451         BANKSEL (__millis + 3)
206A 2B00      00452         INCF    (__millis + 3), F, B
206C 00453 _30592_DS_:
206C 00454 _00585_DS_:
206C CFE4 FFFB 00455         MOVFF   PREINC1, PCLATU
2070 CFE4 FFFA 00456         MOVFF   PREINC1, PCLATH
2074 CFE4 FFEA 00457         MOVFF   PREINC1, FSR0H
2078 CFE4 FFE9 00458         MOVFF   PREINC1, FSR0L
207C CFE4 FFF4 00459         MOVFF   PREINC1, PRODH
2080 CFE4 FFF3 00460         MOVFF   PREINC1, PRODL
2084 CFE4 FFE0 00461         MOVFF   PREINC1, BSR
2088 CFE4 FFD8 00462         MOVFF   PREINC1, STATUS
208C CFE4 FFE8 00463         MOVFF   PREINC1, WREG
2090 0010      00464         RETFIE  
               00465 
               00466 ; ; Starting pCode block
               00467 S_main__low_priority_isr        code    0X004000
4000 00468 _low_priority_isr:
               00469 ;       .line   181; /home/mandon/c32 linux/source/main.c       void low_priority_isr(void) interrupt
4000 CFE8 FFE5 00470         MOVFF   WREG, POSTDEC1
4004 CFD8 FFE5 00471         MOVFF   STATUS, POSTDEC1
4008 CFE0 FFE5 00472         MOVFF   BSR, POSTDEC1
400C CFF3 FFE5 00473         MOVFF   PRODL, POSTDEC1
4010 CFF4 FFE5 00474         MOVFF   PRODH, POSTDEC1
4014 CFE9 FFE5 00475         MOVFF   FSR0L, POSTDEC1
4018 CFEA FFE5 00476         MOVFF   FSR0H, POSTDEC1
401C CFFA FFE5 00477         MOVFF   PCLATH, POSTDEC1
4020 CFFB FFE5 00478         MOVFF   PCLATU, POSTDEC1
               00479 ;       .line   184; /home/mandon/c32 linux/source/main.c       userinterrupt();
4024 EC00 F000 00480         CALL    _userinterrupt
4028 CFE4 FFFB 00481         MOVFF   PREINC1, PCLATU
402C CFE4 FFFA 00482         MOVFF   PREINC1, PCLATH
4030 CFE4 FFEA 00483         MOVFF   PREINC1, FSR0H
4034 CFE4 FFE9 00484         MOVFF   PREINC1, FSR0L
4038 CFE4 FFF4 00485         MOVFF   PREINC1, PRODH
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
403C CFE4 FFF3 00486         MOVFF   PREINC1, PRODL
4040 CFE4 FFE0 00487         MOVFF   PREINC1, BSR
4044 CFE4 FFD8 00488         MOVFF   PREINC1, STATUS
4048 CFE4 FFE8 00489         MOVFF   PREINC1, WREG
404C 0010      00490         RETFIE  
               00491 
               00492 ; I code from now on!
               00493 ; ; Starting pCode block
               00494 S_main__pinguino_main   code
0000 00495 _pinguino_main:
               00496 ;       .line   54; /home/mandon/c32 linux/source/main.c        PIE1 = 0;
0000 6A00      00497         CLRF    _PIE1
               00498 ;       .line   55; /home/mandon/c32 linux/source/main.c        PIE2 = 0;
0002 6A00      00499         CLRF    _PIE2
               00500 ;       .line   56; /home/mandon/c32 linux/source/main.c        ADCON1 = 0b00001111;                            // AN0 to AN12 Digital I/O
0004 0E0F      00501         MOVLW   0x0f
0006 6E00      00502         MOVWF   _ADCON1
               00503 ;       .line   59; /home/mandon/c32 linux/source/main.c        int_init();                                                     // Disable all interrupts
0008 EC00 F000 00504         CALL    _int_init
               00505 ;       .line   60; /home/mandon/c32 linux/source/main.c        RCONbits.IPEN = 1;                                      // Enable HP/LP interrupts
000C 8E00      00506         BSF     _RCONbits, 7
               00507 ;       .line   61; /home/mandon/c32 linux/source/main.c        INTCONbits.GIEH = 1;                            // Enable HP interrupts
000E 8E00      00508         BSF     _INTCONbits, 7
               00509 ;       .line   62; /home/mandon/c32 linux/source/main.c        INTCONbits.GIEL = 1;                            // Enable LP interrupts
0010 8C00      00510         BSF     _INTCONbits, 6
               00511 ;       .line   71; /home/mandon/c32 linux/source/main.c        setup();
0012 EC00 F000 00512         CALL    _setup
               00513 ;       .line   78; /home/mandon/c32 linux/source/main.c        millis_init();
0016 EC00 F000 00514         CALL    _millis_init
               00515 ;       .line   100; /home/mandon/c32 linux/source/main.c       INTCONbits.PEIE = 1;
001A 8C00      00516         BSF     _INTCONbits, 6
               00517 ;       .line   101; /home/mandon/c32 linux/source/main.c       INTCONbits.GIE  = 1;
001C 8E00      00518         BSF     _INTCONbits, 7
               00519 ;       .line   105; /home/mandon/c32 linux/source/main.c       INTCONbits.TMR0IE= 1;
001E 8A00      00520         BSF     _INTCONbits, 5
               00521 ;       .line   106; /home/mandon/c32 linux/source/main.c       INTCONbits.GIE  = 1;
0020 8E00      00522         BSF     _INTCONbits, 7
0022 00523 _00574_DS_:
               00524 ;       .line   115; /home/mandon/c32 linux/source/main.c       loop();
0022 EC00 F000 00525         CALL    _loop
0026 D000      00526         BRA     _00574_DS_
0028 0012      00527         RETURN  
               00528 
               00529 ; ; Starting pCode block
               00530 S_main__loop    code
0000 00531 _loop:
               00532 ;       .line   11; /home/mandon/c32 linux/source/user.c        void loop()
0000 C000 FFE5 00533         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 00534         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 00535         MOVFF   r0x02, POSTDEC1
000C C000 FFE5 00536         MOVFF   r0x03, POSTDEC1
               00537 ;       .line   13; /home/mandon/c32 linux/source/user.c        serial_printf("micros= %d/n/r",micros());
Error [113] : Symbol not previously defined (_micros).
Error [113] : Symbol not previously defined (_micros).
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0010 EC00 F000 00538         CALL    _micros
0014 6E00      00539         MOVWF   r0x00
0016 CFF3 F000 00540         MOVFF   PRODL, r0x01
001A 5000      00541         MOVF    r0x01, W
001C 6EE5      00542         MOVWF   POSTDEC1
001E 5000      00543         MOVF    r0x00, W
0020 6EE5      00544         MOVWF   POSTDEC1
0022 0E00      00545         MOVLW   UPPER(__str_4)
0024 6EE5      00546         MOVWF   POSTDEC1
0026 0E00      00547         MOVLW   HIGH(__str_4)
0028 6EE5      00548         MOVWF   POSTDEC1
002A 0E00      00549         MOVLW   LOW(__str_4)
002C 6EE5      00550         MOVWF   POSTDEC1
002E EC00 F000 00551         CALL    _serial_printf
0032 0E05      00552         MOVLW   0x05
0034 26E1      00553         ADDWF   FSR1L, F
               00554 ;       .line   14; /home/mandon/c32 linux/source/user.c        serial_printf("Millis= %d\n\r",Millis());
0036 EC00 F000 00555         CALL    _Millis
003A 6E00      00556         MOVWF   r0x00
003C CFF3 F000 00557         MOVFF   PRODL, r0x01
0040 CFF4 F000 00558         MOVFF   PRODH, r0x02
0044 CFE9 F000 00559         MOVFF   FSR0L, r0x03
0048 5000      00560         MOVF    r0x03, W
004A 6EE5      00561         MOVWF   POSTDEC1
004C 5000      00562         MOVF    r0x02, W
004E 6EE5      00563         MOVWF   POSTDEC1
0050 5000      00564         MOVF    r0x01, W
0052 6EE5      00565         MOVWF   POSTDEC1
0054 5000      00566         MOVF    r0x00, W
0056 6EE5      00567         MOVWF   POSTDEC1
0058 0E00      00568         MOVLW   UPPER(__str_5)
005A 6EE5      00569         MOVWF   POSTDEC1
005C 0E00      00570         MOVLW   HIGH(__str_5)
005E 6EE5      00571         MOVWF   POSTDEC1
0060 0E00      00572         MOVLW   LOW(__str_5)
0062 6EE5      00573         MOVWF   POSTDEC1
0064 EC00 F000 00574         CALL    _serial_printf
0068 0E07      00575         MOVLW   0x07
006A 26E1      00576         ADDWF   FSR1L, F
               00577 ;       .line   15; /home/mandon/c32 linux/source/user.c        Delayms(5);
006C 6AE5      00578         CLRF    POSTDEC1
006E 6AE5      00579         CLRF    POSTDEC1
0070 6AE5      00580         CLRF    POSTDEC1
0072 0E05      00581         MOVLW   0x05
0074 6EE5      00582         MOVWF   POSTDEC1
0076 EC00 F000 00583         CALL    _Delayms
007A 0E04      00584         MOVLW   0x04
007C 26E1      00585         ADDWF   FSR1L, F
007E CFE4 F000 00586         MOVFF   PREINC1, r0x03
0082 CFE4 F000 00587         MOVFF   PREINC1, r0x02
0086 CFE4 F000 00588         MOVFF   PREINC1, r0x01
008A CFE4 F000 00589         MOVFF   PREINC1, r0x00
008E 0012      00590         RETURN  
               00591 
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00592 ; ; Starting pCode block
               00593 S_main__setup   code
0000 00594 _setup:
               00595 ;       .line   8; /home/mandon/c32 linux/source/user.c serial_begin(9600);
0000 6AE5      00596         CLRF    POSTDEC1
0002 6AE5      00597         CLRF    POSTDEC1
0004 0E25      00598         MOVLW   0x25
0006 6EE5      00599         MOVWF   POSTDEC1
0008 0E80      00600         MOVLW   0x80
000A 6EE5      00601         MOVWF   POSTDEC1
000C EC00 F000 00602         CALL    _serial_begin
0010 0E04      00603         MOVLW   0x04
0012 26E1      00604         ADDWF   FSR1L, F
0014 0012      00605         RETURN  
               00606 
               00607 ; ; Starting pCode block
               00608 S_main__epapout_init    code
0000 00609 _epapout_init:
               00610 ;       .line   42; /home/mandon/c32 linux/source/main.c        void epapout_init() { return; }
0000 0012      00611         RETURN  
               00612 
               00613 ; ; Starting pCode block
               00614 S_main__epapin_init     code
0000 00615 _epapin_init:
               00616 ;       .line   41; /home/mandon/c32 linux/source/main.c        void epapin_init() { return; }
0000 0012      00617         RETURN  
               00618 
               00619 ; ; Starting pCode block
               00620 S_main__epap_out        code
0000 00621 _epap_out:
               00622 ;       .line   40; /home/mandon/c32 linux/source/main.c        void epap_out() { return; }
0000 0012      00623         RETURN  
               00624 
               00625 ; ; Starting pCode block
               00626 S_main__epap_in code
0000 00627 _epap_in:
               00628 ;       .line   39; /home/mandon/c32 linux/source/main.c        void epap_in() { return; }
0000 0012      00629         RETURN  
               00630 
               00631 ; ; Starting pCode block
               00632 S_main__serial_write    code
0000 00633 _serial_write:
               00634 ;       .line   150; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c void serial_write(char *fmt,...)
0000 CFD9 FFE5 00635         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00636         MOVFF   FSR1L, FSR2L
0008 0E08      00637         MOVLW   0x08
000A 5EE1      00638         SUBWF   FSR1L, F
000C A0D8      00639         BTFSS   STATUS, 0
000E 06E2      00640         DECF    FSR1H, F
0010 C000 FFE5 00641         MOVFF   r0x00, POSTDEC1
0014 C000 FFE5 00642         MOVFF   r0x01, POSTDEC1
0018 C000 FFE5 00643         MOVFF   r0x02, POSTDEC1
001C C000 FFE5 00644         MOVFF   r0x03, POSTDEC1
0020 C000 FFE5 00645         MOVFF   r0x04, POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0024 C000 FFE5 00646         MOVFF   r0x05, POSTDEC1
               00647 ;       .line   156; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c va_start(ap,fmt);
0028 0E02      00648         MOVLW   0x02
002A 24D9      00649         ADDWF   FSR2L, W
002C 6E00      00650         MOVWF   r0x00
002E 0E00      00651         MOVLW   0x00
0030 20DA      00652         ADDWFC  FSR2H, W
0032 6E00      00653         MOVWF   r0x01
0034 0E03      00654         MOVLW   0x03
0036 2600      00655         ADDWF   r0x00, F
0038 B0D8      00656         BTFSC   STATUS, 0
003A 2A00      00657         INCF    r0x01, F
               00658 ; #     MOVF    r0x01, W
               00659 ; #     MOVWF   r0x01
               00660 ; #     MOVF    r0x01, W
               00661 ; #     MOVF    r0x00, W
               00662 ; #     MOVF    r0x00, W
               00663 ; #     MOVWF   r0x00
               00664 ;       .line   157; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c s=va_start(ap,fmt);
003C 0E80      00665         MOVLW   0x80
               00666 ;       .line   158; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c switch (*s)
003E C000 FFE9 00667         MOVFF   r0x00, FSR0L
0042 C000 FFF3 00668         MOVFF   r0x01, PRODL
0046 EC00 F000 00669         CALL    __gptrget1
004A 6E00      00670         MOVWF   r0x00
004C 0E01      00671         MOVLW   0x01
004E 5C00      00672         SUBWF   r0x00, W
0050 A0D8      00673         BTFSS   STATUS, 0
0052 D000      00674         BRA     _00530_DS_
0054 0E06      00675         MOVLW   0x06
0056 5C00      00676         SUBWF   r0x00, W
0058 B0D8      00677         BTFSC   STATUS, 0
005A D000      00678         BRA     _00530_DS_
005C 0600      00679         DECF    r0x00, F
005E C000 FFE5 00680         MOVFF   r0x07, POSTDEC1
0062 C000 FFE5 00681         MOVFF   r0x08, POSTDEC1
0066 6A00      00682         CLRF    r0x08
0068 3400      00683         RLCF    r0x00, W
006A 3600      00684         RLCF    r0x08, F
006C 34E8      00685         RLCF    WREG, W
006E 3600      00686         RLCF    r0x08, F
0070 0BFC      00687         ANDLW   0xfc
0072 6E00      00688         MOVWF   r0x07
0074 0E00      00689         MOVLW   UPPER(_00538_DS_)
0076 6EFB      00690         MOVWF   PCLATU
0078 0E00      00691         MOVLW   HIGH(_00538_DS_)
007A 6EFA      00692         MOVWF   PCLATH
007C 0E00      00693         MOVLW   LOW(_00538_DS_)
007E 2600      00694         ADDWF   r0x07, F
0080 5000      00695         MOVF    r0x08, W
0082 22FA      00696         ADDWFC  PCLATH, F
0084 B0D8      00697         BTFSC   STATUS, 0
0086 2AFB      00698         INCF    PCLATU, F
0088 5000      00699         MOVF    r0x07, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A CFE4 F000 00700         MOVFF   PREINC1, r0x08
008E CFE4 F000 00701         MOVFF   PREINC1, r0x07
0092 6EF9      00702         MOVWF   PCL
0094 00703 _00538_DS_:
0094 EF00 F000 00704         GOTO    _00525_DS_
0098 EF00 F000 00705         GOTO    _00527_DS_
009C EF00 F000 00706         GOTO    _00526_DS_
00A0 EF00 F000 00707         GOTO    _00528_DS_
00A4 EF00 F000 00708         GOTO    _00529_DS_
00A8 00709 _00525_DS_:
               00710 ;       .line   160; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c case DEC:       serial_printf("%d",(int)fmt);
00A8 C000 FFE5 00711         MOVFF   r0x07, POSTDEC1
00AC C000 FFE5 00712         MOVFF   r0x08, POSTDEC1
00B0 C000 FFE5 00713         MOVFF   r0x09, POSTDEC1
00B4 0E02      00714         MOVLW   0x02
00B6 CFDB F000 00715         MOVFF   PLUSW2, r0x07
00BA 0E03      00716         MOVLW   0x03
00BC CFDB F000 00717         MOVFF   PLUSW2, r0x08
00C0 0E04      00718         MOVLW   0x04
00C2 CFDB F000 00719         MOVFF   PLUSW2, r0x09
00C6 5000      00720         MOVF    r0x07, W
00C8 6E00      00721         MOVWF   r0x00
00CA 5000      00722         MOVF    r0x08, W
00CC CFE4 F000 00723         MOVFF   PREINC1, r0x09
00D0 CFE4 F000 00724         MOVFF   PREINC1, r0x08
00D4 CFE4 F000 00725         MOVFF   PREINC1, r0x07
00D8 6EE5      00726         MOVWF   POSTDEC1
00DA 5000      00727         MOVF    r0x00, W
00DC 6EE5      00728         MOVWF   POSTDEC1
00DE 0E00      00729         MOVLW   UPPER(__str_2)
00E0 6EE5      00730         MOVWF   POSTDEC1
00E2 0E00      00731         MOVLW   HIGH(__str_2)
00E4 6EE5      00732         MOVWF   POSTDEC1
00E6 0E00      00733         MOVLW   LOW(__str_2)
00E8 6EE5      00734         MOVWF   POSTDEC1
00EA EC00 F000 00735         CALL    _serial_printf
00EE 0E05      00736         MOVLW   0x05
00F0 26E1      00737         ADDWF   FSR1L, F
               00738 ;       .line   161; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c break;
00F2 D000      00739         BRA     _00532_DS_
00F4 00740 _00526_DS_:
               00741 ;       .line   162; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c case HEX:               serial_printf("%x",(int)fmt);
00F4 C000 FFE5 00742         MOVFF   r0x07, POSTDEC1
00F8 C000 FFE5 00743         MOVFF   r0x08, POSTDEC1
00FC C000 FFE5 00744         MOVFF   r0x09, POSTDEC1
0100 0E02      00745         MOVLW   0x02
0102 CFDB F000 00746         MOVFF   PLUSW2, r0x07
0106 0E03      00747         MOVLW   0x03
0108 CFDB F000 00748         MOVFF   PLUSW2, r0x08
010C 0E04      00749         MOVLW   0x04
010E CFDB F000 00750         MOVFF   PLUSW2, r0x09
0112 5000      00751         MOVF    r0x07, W
0114 6E00      00752         MOVWF   r0x00
0116 5000      00753         MOVF    r0x08, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0118 CFE4 F000 00754         MOVFF   PREINC1, r0x09
011C CFE4 F000 00755         MOVFF   PREINC1, r0x08
0120 CFE4 F000 00756         MOVFF   PREINC1, r0x07
0124 6EE5      00757         MOVWF   POSTDEC1
0126 5000      00758         MOVF    r0x00, W
0128 6EE5      00759         MOVWF   POSTDEC1
012A 0E00      00760         MOVLW   UPPER(__str_3)
012C 6EE5      00761         MOVWF   POSTDEC1
012E 0E00      00762         MOVLW   HIGH(__str_3)
0130 6EE5      00763         MOVWF   POSTDEC1
0132 0E00      00764         MOVLW   LOW(__str_3)
0134 6EE5      00765         MOVWF   POSTDEC1
0136 EC00 F000 00766         CALL    _serial_printf
013A 0E05      00767         MOVLW   0x05
013C 26E1      00768         ADDWF   FSR1L, F
               00769 ;       .line   163; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c break;
013E D000      00770         BRA     _00532_DS_
0140 00771 _00527_DS_:
               00772 ;       .line   164; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c case BYTE:              serial_printf("%d",(unsigned char)fmt);
0140 C000 FFE5 00773         MOVFF   r0x07, POSTDEC1
0144 C000 FFE5 00774         MOVFF   r0x08, POSTDEC1
0148 C000 FFE5 00775         MOVFF   r0x09, POSTDEC1
014C 0E02      00776         MOVLW   0x02
014E CFDB F000 00777         MOVFF   PLUSW2, r0x07
0152 0E03      00778         MOVLW   0x03
0154 CFDB F000 00779         MOVFF   PLUSW2, r0x08
0158 0E04      00780         MOVLW   0x04
015A CFDB F000 00781         MOVFF   PLUSW2, r0x09
015E 5000      00782         MOVF    r0x07, W
0160 CFE4 F000 00783         MOVFF   PREINC1, r0x09
0164 CFE4 F000 00784         MOVFF   PREINC1, r0x08
0168 CFE4 F000 00785         MOVFF   PREINC1, r0x07
016C 6EE5      00786         MOVWF   POSTDEC1
016E 0E00      00787         MOVLW   UPPER(__str_2)
0170 6EE5      00788         MOVWF   POSTDEC1
0172 0E00      00789         MOVLW   HIGH(__str_2)
0174 6EE5      00790         MOVWF   POSTDEC1
0176 0E00      00791         MOVLW   LOW(__str_2)
0178 6EE5      00792         MOVWF   POSTDEC1
017A EC00 F000 00793         CALL    _serial_printf
017E 0E04      00794         MOVLW   0x04
0180 26E1      00795         ADDWF   FSR1L, F
               00796 ;       .line   165; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c break;
0182 D000      00797         BRA     _00532_DS_
0184 00798 _00528_DS_:
               00799 ;       .line   166; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c case OCTAL:     uitoa((int)fmt,chaine,8);
0184 C000 FFE5 00800         MOVFF   r0x07, POSTDEC1
0188 C000 FFE5 00801         MOVFF   r0x08, POSTDEC1
018C C000 FFE5 00802         MOVFF   r0x09, POSTDEC1
0190 0E02      00803         MOVLW   0x02
0192 CFDB F000 00804         MOVFF   PLUSW2, r0x07
0196 0E03      00805         MOVLW   0x03
0198 CFDB F000 00806         MOVFF   PLUSW2, r0x08
019C 0E04      00807         MOVLW   0x04
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
019E CFDB F000 00808         MOVFF   PLUSW2, r0x09
01A2 5000      00809         MOVF    r0x07, W
01A4 6E00      00810         MOVWF   r0x00
01A6 5000      00811         MOVF    r0x08, W
01A8 6E00      00812         MOVWF   r0x01
01AA CFE4 F000 00813         MOVFF   PREINC1, r0x09
01AE CFE4 F000 00814         MOVFF   PREINC1, r0x08
01B2 CFE4 F000 00815         MOVFF   PREINC1, r0x07
01B6 0EF9      00816         MOVLW   0xf9
01B8 24D9      00817         ADDWF   FSR2L, W
01BA 6E00      00818         MOVWF   r0x02
01BC 0EFF      00819         MOVLW   0xff
01BE 20DA      00820         ADDWFC  FSR2H, W
               00821 ; #     MOVWF   r0x03
               00822 ; #     MOVF    r0x03, W
01C0 6E00      00823         MOVWF   r0x03
01C2 6E00      00824         MOVWF   r0x05
01C4 5000      00825         MOVF    r0x02, W
01C6 6E00      00826         MOVWF   r0x04
01C8 6AE5      00827         CLRF    POSTDEC1
01CA 0E08      00828         MOVLW   0x08
01CC 6EE5      00829         MOVWF   POSTDEC1
01CE 0E80      00830         MOVLW   0x80
01D0 6EE5      00831         MOVWF   POSTDEC1
01D2 5000      00832         MOVF    r0x05, W
01D4 6EE5      00833         MOVWF   POSTDEC1
01D6 5000      00834         MOVF    r0x04, W
01D8 6EE5      00835         MOVWF   POSTDEC1
01DA 5000      00836         MOVF    r0x01, W
01DC 6EE5      00837         MOVWF   POSTDEC1
01DE 5000      00838         MOVF    r0x00, W
01E0 6EE5      00839         MOVWF   POSTDEC1
01E2 EC00 F000 00840         CALL    _uitoa
01E6 0E07      00841         MOVLW   0x07
01E8 26E1      00842         ADDWF   FSR1L, F
               00843 ; #     MOVF    r0x03, W
               00844 ; #     MOVWF   r0x03
               00845 ; #     MOVF    r0x03, W
               00846 ; #     MOVF    r0x02, W
               00847 ; #     MOVF    r0x02, W
               00848 ; #     MOVWF   r0x02
               00849 ;       .line   167; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c serial_printf(chaine);
01EA 0E80      00850         MOVLW   0x80
               00851 ; #     MOVWF   r0x00
               00852 ; #     MOVF    r0x00, W
01EC 6EE5      00853         MOVWF   POSTDEC1
01EE 5000      00854         MOVF    r0x03, W
01F0 6EE5      00855         MOVWF   POSTDEC1
01F2 5000      00856         MOVF    r0x02, W
01F4 6EE5      00857         MOVWF   POSTDEC1
01F6 EC00 F000 00858         CALL    _serial_printf
01FA 0E03      00859         MOVLW   0x03
01FC 26E1      00860         ADDWF   FSR1L, F
               00861 ;       .line   168; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c break;
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01FE D000      00862         BRA     _00532_DS_
0200 00863 _00529_DS_:
               00864 ;       .line   169; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c case BIN:       uitoa((int)fmt,chaine,2);
0200 C000 FFE5 00865         MOVFF   r0x07, POSTDEC1
0204 C000 FFE5 00866         MOVFF   r0x08, POSTDEC1
0208 C000 FFE5 00867         MOVFF   r0x09, POSTDEC1
020C 0E02      00868         MOVLW   0x02
020E CFDB F000 00869         MOVFF   PLUSW2, r0x07
0212 0E03      00870         MOVLW   0x03
0214 CFDB F000 00871         MOVFF   PLUSW2, r0x08
0218 0E04      00872         MOVLW   0x04
021A CFDB F000 00873         MOVFF   PLUSW2, r0x09
021E 5000      00874         MOVF    r0x07, W
0220 6E00      00875         MOVWF   r0x00
0222 5000      00876         MOVF    r0x08, W
0224 6E00      00877         MOVWF   r0x01
0226 CFE4 F000 00878         MOVFF   PREINC1, r0x09
022A CFE4 F000 00879         MOVFF   PREINC1, r0x08
022E CFE4 F000 00880         MOVFF   PREINC1, r0x07
0232 0EF9      00881         MOVLW   0xf9
0234 24D9      00882         ADDWF   FSR2L, W
0236 6E00      00883         MOVWF   r0x02
0238 0EFF      00884         MOVLW   0xff
023A 20DA      00885         ADDWFC  FSR2H, W
               00886 ; #     MOVWF   r0x03
               00887 ; #     MOVF    r0x03, W
023C 6E00      00888         MOVWF   r0x03
023E 6E00      00889         MOVWF   r0x05
0240 5000      00890         MOVF    r0x02, W
0242 6E00      00891         MOVWF   r0x04
0244 6AE5      00892         CLRF    POSTDEC1
0246 0E02      00893         MOVLW   0x02
0248 6EE5      00894         MOVWF   POSTDEC1
024A 0E80      00895         MOVLW   0x80
024C 6EE5      00896         MOVWF   POSTDEC1
024E 5000      00897         MOVF    r0x05, W
0250 6EE5      00898         MOVWF   POSTDEC1
0252 5000      00899         MOVF    r0x04, W
0254 6EE5      00900         MOVWF   POSTDEC1
0256 5000      00901         MOVF    r0x01, W
0258 6EE5      00902         MOVWF   POSTDEC1
025A 5000      00903         MOVF    r0x00, W
025C 6EE5      00904         MOVWF   POSTDEC1
025E EC00 F000 00905         CALL    _uitoa
0262 0E07      00906         MOVLW   0x07
0264 26E1      00907         ADDWF   FSR1L, F
               00908 ; #     MOVF    r0x03, W
               00909 ; #     MOVWF   r0x03
               00910 ; #     MOVF    r0x03, W
               00911 ; #     MOVF    r0x02, W
               00912 ; #     MOVF    r0x02, W
               00913 ; #     MOVWF   r0x02
               00914 ;       .line   170; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c serial_printf(chaine);
0266 0E80      00915         MOVLW   0x80
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00916 ; #     MOVWF   r0x00
               00917 ; #     MOVF    r0x00, W
0268 6EE5      00918         MOVWF   POSTDEC1
026A 5000      00919         MOVF    r0x03, W
026C 6EE5      00920         MOVWF   POSTDEC1
026E 5000      00921         MOVF    r0x02, W
0270 6EE5      00922         MOVWF   POSTDEC1
0272 EC00 F000 00923         CALL    _serial_printf
0276 0E03      00924         MOVLW   0x03
0278 26E1      00925         ADDWF   FSR1L, F
               00926 ;       .line   171; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c break;           
027A D000      00927         BRA     _00532_DS_
027C 00928 _00530_DS_:
               00929 ;       .line   172; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c default:        serial_printf(fmt);
027C C000 FFE5 00930         MOVFF   r0x07, POSTDEC1
0280 C000 FFE5 00931         MOVFF   r0x08, POSTDEC1
0284 C000 FFE5 00932         MOVFF   r0x09, POSTDEC1
0288 0E02      00933         MOVLW   0x02
028A CFDB F000 00934         MOVFF   PLUSW2, r0x07
028E 0E03      00935         MOVLW   0x03
0290 CFDB F000 00936         MOVFF   PLUSW2, r0x08
0294 0E04      00937         MOVLW   0x04
0296 CFDB F000 00938         MOVFF   PLUSW2, r0x09
029A CFE4 F000 00939         MOVFF   PREINC1, r0x09
029E CFE4 F000 00940         MOVFF   PREINC1, r0x08
02A2 CFE4 F000 00941         MOVFF   PREINC1, r0x07
02A6 C000 FFE5 00942         MOVFF   r0x07, POSTDEC1
02AA C000 FFE5 00943         MOVFF   r0x08, POSTDEC1
02AE C000 FFE5 00944         MOVFF   r0x09, POSTDEC1
02B2 0E02      00945         MOVLW   0x02
02B4 CFDB F000 00946         MOVFF   PLUSW2, r0x07
02B8 0E03      00947         MOVLW   0x03
02BA CFDB F000 00948         MOVFF   PLUSW2, r0x08
02BE 0E04      00949         MOVLW   0x04
02C0 CFDB F000 00950         MOVFF   PLUSW2, r0x09
02C4 5000      00951         MOVF    r0x09, W
02C6 6EE5      00952         MOVWF   POSTDEC1
02C8 5000      00953         MOVF    r0x08, W
02CA 6EE5      00954         MOVWF   POSTDEC1
02CC 5000      00955         MOVF    r0x07, W
02CE 6EE5      00956         MOVWF   POSTDEC1
02D0 CFE4 F000 00957         MOVFF   PREINC1, r0x09
02D4 CFE4 F000 00958         MOVFF   PREINC1, r0x08
02D8 CFE4 F000 00959         MOVFF   PREINC1, r0x07
02DC EC00 F000 00960         CALL    _serial_printf
02E0 0E03      00961         MOVLW   0x03
02E2 26E1      00962         ADDWF   FSR1L, F
02E4 00963 _00532_DS_:
               00964 ;       .line   175; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c va_end(ap);
02E4 CFE4 F000 00965         MOVFF   PREINC1, r0x05
02E8 CFE4 F000 00966         MOVFF   PREINC1, r0x04
02EC CFE4 F000 00967         MOVFF   PREINC1, r0x03
02F0 CFE4 F000 00968         MOVFF   PREINC1, r0x02
02F4 CFE4 F000 00969         MOVFF   PREINC1, r0x01
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02F8 CFE4 F000 00970         MOVFF   PREINC1, r0x00
02FC 6EE6      00971         MOVWF   POSTINC1
02FE 0E07      00972         MOVLW   0x07
0300 26E1      00973         ADDWF   FSR1L, F
0302 B0D8      00974         BTFSC   STATUS, 0
0304 2AE2      00975         INCF    FSR1H, F
0306 1EE8      00976         COMF    WREG, F
0308 50E3      00977         MOVF    PLUSW1, W
030A CFE4 FFD9 00978         MOVFF   PREINC1, FSR2L
030E 0012      00979         RETURN  
               00980 
               00981 ; ; Starting pCode block
               00982 S_main__serial_printf   code
0000 00983 _serial_printf:
               00984 ;       .line   136; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c void serial_printf(char *fmt, ...)
0000 CFD9 FFE5 00985         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00986         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00987         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00988         MOVFF   r0x01, POSTDEC1
               00989 ;       .line   140; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c va_start(args, fmt);
0010 0E02      00990         MOVLW   0x02
0012 24D9      00991         ADDWF   FSR2L, W
0014 6E00      00992         MOVWF   r0x00
0016 0E00      00993         MOVLW   0x00
0018 20DA      00994         ADDWFC  FSR2H, W
001A 6E00      00995         MOVWF   r0x01
001C 0E03      00996         MOVLW   0x03
001E 2600      00997         ADDWF   r0x00, F
0020 B0D8      00998         BTFSC   STATUS, 0
0022 2A00      00999         INCF    r0x01, F
               01000 ; #     MOVF    r0x01, W
               01001 ; #     MOVWF   r0x01
               01002 ; #     MOVF    r0x01, W
               01003 ; #     MOVF    r0x00, W
               01004 ; #     MOVF    r0x00, W
               01005 ; #     MOVWF   r0x00
0024 0E80      01006         MOVLW   0x80
               01007 ; #     MOVWF   r0x02
               01008 ; #     MOVF    r0x02, W
               01009 ;       .line   141; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c printf(serial_putchar, fmt, args);
0026 6EE5      01010         MOVWF   POSTDEC1
0028 5000      01011         MOVF    r0x01, W
002A 6EE5      01012         MOVWF   POSTDEC1
002C 5000      01013         MOVF    r0x00, W
002E 6EE5      01014         MOVWF   POSTDEC1
0030 0E04      01015         MOVLW   0x04
0032 CFDB FFE5 01016         MOVFF   PLUSW2, POSTDEC1
0036 0E03      01017         MOVLW   0x03
0038 CFDB FFE5 01018         MOVFF   PLUSW2, POSTDEC1
003C 0E02      01019         MOVLW   0x02
003E CFDB FFE5 01020         MOVFF   PLUSW2, POSTDEC1
0042 0E00      01021         MOVLW   UPPER(_serial_putchar)
0044 6EE5      01022         MOVWF   POSTDEC1
0046 0E00      01023         MOVLW   HIGH(_serial_putchar)
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0048 6EE5      01024         MOVWF   POSTDEC1
004A 0E00      01025         MOVLW   LOW(_serial_putchar)
004C 6EE5      01026         MOVWF   POSTDEC1
004E EC00 F000 01027         CALL    _printf
0052 0E09      01028         MOVLW   0x09
0054 26E1      01029         ADDWF   FSR1L, F
               01030 ;       .line   142; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c va_end(args);
0056 CFE4 F000 01031         MOVFF   PREINC1, r0x01
005A CFE4 F000 01032         MOVFF   PREINC1, r0x00
005E CFE4 FFD9 01033         MOVFF   PREINC1, FSR2L
0062 0012      01034         RETURN  
               01035 
               01036 ; ; Starting pCode block
               01037 S_main__serial_getkey   code
0000 01038 _serial_getkey:
               01039 ;       .line   126; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c unsigned char serial_getkey()
0000 C000 FFE5 01040         MOVFF   r0x00, POSTDEC1
0004 01041 _00512_DS_:
               01042 ;       .line   129; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c while (!(serial_available()));
0004 EC00 F000 01043         CALL    _serial_available
0008 6E00      01044         MOVWF   r0x00
000A 5000      01045         MOVF    r0x00, W
000C E000      01046         BZ      _00512_DS_
               01047 ;       .line   130; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c c = serial_read();
000E EC00 F000 01048         CALL    _serial_read
0012 6E00      01049         MOVWF   r0x00
               01050 ;       .line   131; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c serial_flush();
0014 EC00 F000 01051         CALL    _serial_flush
               01052 ;       .line   132; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c return (c);
0018 5000      01053         MOVF    r0x00, W
001A CFE4 F000 01054         MOVFF   PREINC1, r0x00
001E 0012      01055         RETURN  
               01056 
               01057 ; ; Starting pCode block
               01058 S_main__serial_flush    code
0000 01059 _serial_flush:
               01060 ; #     MOVLW   0x01
               01061 ; #     MOVWF   _wpointer, B
               01062 ; #     MOVLW   0x01
               01063 ;       .line   120; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c wpointer=1;
0000 0E01      01064         MOVLW   0x01
0002 0000      01065         BANKSEL _wpointer
               01066 ;       .line   121; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c rpointer=1;
0004 6F00      01067         MOVWF   _wpointer, B
0006 0000      01068         BANKSEL _rpointer
0008 6F00      01069         MOVWF   _rpointer, B
000A 0012      01070         RETURN  
               01071 
               01072 ; ; Starting pCode block
               01073 S_main__serial_read     code
0000 01074 _serial_read:
               01075 ;       .line   104; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c unsigned char serial_read()
0000 C000 FFE5 01076         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01077         MOVFF   r0x01, POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008 C000 FFE5 01078         MOVFF   r0x02, POSTDEC1
               01079 ;       .line   106; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c unsigned char caractere=0;
000C 6A00      01080         CLRF    r0x00
               01081 ;       .line   108; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c if (serial_available())
000E EC00 F000 01082         CALL    _serial_available
0012 6E00      01083         MOVWF   r0x01
0014 5000      01084         MOVF    r0x01, W
0016 E000      01085         BZ      _00496_DS_
               01086 ;       .line   110; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c caractere=rx[rpointer++];
0018 C000 F000 01087         MOVFF   _rpointer, r0x01
001C 0000      01088         BANKSEL _rpointer
001E 2B00      01089         INCF    _rpointer, F, B
0020 6A00      01090         CLRF    r0x02
0022 0E00      01091         MOVLW   LOW(_rx)
0024 2600      01092         ADDWF   r0x01, F
0026 0E00      01093         MOVLW   HIGH(_rx)
0028 2200      01094         ADDWFC  r0x02, F
002A C000 FFE9 01095         MOVFF   r0x01, FSR0L
002E C000 FFEA 01096         MOVFF   r0x02, FSR0H
0032 CFEF F000 01097         MOVFF   INDF0, r0x00
               01098 ; removed redundant BANKSEL
               01099 ;       .line   111; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c if (rpointer==RXBUFFERLENGTH)
0036 5100      01100         MOVF    _rpointer, W, B
0038 0A80      01101         XORLW   0x80
003A E100      01102         BNZ     _00496_DS_
               01103 ;       .line   112; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c rpointer=1;
003C 0E01      01104         MOVLW   0x01
003E 0000      01105         BANKSEL _rpointer
0040 6F00      01106         MOVWF   _rpointer, B
0042 01107 _00496_DS_:
               01108 ;       .line   114; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c return(caractere);
0042 5000      01109         MOVF    r0x00, W
0044 CFE4 F000 01110         MOVFF   PREINC1, r0x02
0048 CFE4 F000 01111         MOVFF   PREINC1, r0x01
004C CFE4 F000 01112         MOVFF   PREINC1, r0x00
0050 0012      01113         RETURN  
               01114 
               01115 ; ; Starting pCode block
               01116 S_main__serial_interrupt        code
0000 01117 _serial_interrupt:
               01118 ;       .line   84; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  void serial_interrupt(void)
0000 C000 FFE5 01119         MOVFF   r0x00, POSTDEC1
0004 C000 FFE5 01120         MOVFF   r0x01, POSTDEC1
0008 C000 FFE5 01121         MOVFF   r0x02, POSTDEC1
               01122 ;       .line   89; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  PIR1bits.RCIF=0;                                // clear RX interrupt flag
000C 9A00      01123         BCF     _PIR1bits, 5
               01124 ;       .line   90; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  caractere=RCREG;                                // take received char
000E C000 F000 01125         MOVFF   _RCREG, r0x00
0012 0000      01126         BANKSEL _wpointer
               01127 ;       .line   91; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  if (wpointer!=RXBUFFERLENGTH-1) // if not last place in buffer
0014 5100      01128         MOVF    _wpointer, W, B
0016 0A7F      01129         XORLW   0x7f
0018 E000      01130         BZ      _00472_DS_
001A 01131 _00484_DS_:
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001A 0000      01132         BANKSEL _wpointer
               01133 ;       .line   92; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  newwp=wpointer+1;                       // place=place+1
001C 2900      01134         INCF    _wpointer, W, B
001E 6E00      01135         MOVWF   r0x01
0020 D000      01136         BRA     _00473_DS_
0022 01137 _00472_DS_:
               01138 ;       .line   94; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  newwp=1;                                        // else place=1
0022 0E01      01139         MOVLW   0x01
0024 6E00      01140         MOVWF   r0x01
0026 01141 _00473_DS_:
0026 0000      01142         BANKSEL _rpointer
               01143 ;       .line   96; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  if (rpointer!=newwp)                    // if read pointer!=write pointer
0028 5100      01144         MOVF    _rpointer, W, B
002A 1800      01145         XORWF   r0x01, W
002C E000      01146         BZ      _00475_DS_
               01147 ;       .line   97; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  rx[wpointer++]=caractere;       // store received char
002E C000 F000 01148         MOVFF   _wpointer, r0x01
0032 0000      01149         BANKSEL _wpointer
0034 2B00      01150         INCF    _wpointer, F, B
0036 6A00      01151         CLRF    r0x02
0038 0E00      01152         MOVLW   LOW(_rx)
003A 2600      01153         ADDWF   r0x01, F
003C 0E00      01154         MOVLW   HIGH(_rx)
003E 2200      01155         ADDWFC  r0x02, F
0040 C000 FFE9 01156         MOVFF   r0x01, FSR0L
0044 C000 FFEA 01157         MOVFF   r0x02, FSR0H
0048 C000 FFEF 01158         MOVFF   r0x00, INDF0
004C 01159 _00475_DS_:
004C 0000      01160         BANKSEL _wpointer
               01161 ;       .line   99; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  if (wpointer==RXBUFFERLENGTH)   // if write pointer=length buffer
004E 5100      01162         MOVF    _wpointer, W, B
0050 0A80      01163         XORLW   0x80
0052 E100      01164         BNZ     _00478_DS_
               01165 ;       .line   100; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c wpointer=1;                                     // write pointer = 1
0054 0E01      01166         MOVLW   0x01
0056 0000      01167         BANKSEL _wpointer
0058 6F00      01168         MOVWF   _wpointer, B
005A 01169 _00478_DS_:
005A CFE4 F000 01170         MOVFF   PREINC1, r0x02
005E CFE4 F000 01171         MOVFF   PREINC1, r0x01
0062 CFE4 F000 01172         MOVFF   PREINC1, r0x00
0066 0012      01173         RETURN  
               01174 
               01175 ; ; Starting pCode block
               01176 S_main__serial_putchar  code
0000 01177 _serial_putchar:
               01178 ;       .line   77; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  void serial_putchar(unsigned char caractere)
0000 CFD9 FFE5 01179         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01180         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01181         MOVFF   r0x00, POSTDEC1
000C 0E02      01182         MOVLW   0x02
000E CFDB F000 01183         MOVFF   PLUSW2, r0x00
0012 01184 _00463_DS_:
               01185 ;       .line   79; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  while (!TXSTAbits.TRMT);
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0012 A200      01186         BTFSS   _TXSTAbits, 1
0014 D000      01187         BRA     _00463_DS_
               01188 ;       .line   80; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  TXREG=caractere;                        // yes, send char
0016 C000 F000 01189         MOVFF   r0x00, _TXREG
001A CFE4 F000 01190         MOVFF   PREINC1, r0x00
001E CFE4 FFD9 01191         MOVFF   PREINC1, FSR2L
0022 0012      01192         RETURN  
               01193 
               01194 ; ; Starting pCode block
               01195 S_main__serial_available        code
0000 01196 _serial_available:
               01197 ;       .line   71; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  unsigned char serial_available()
0000 C000 FFE5 01198         MOVFF   r0x00, POSTDEC1
               01199 ;       .line   73; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  return(wpointer!=rpointer);
0004 6A00      01200         CLRF    r0x00
0006 0000      01201         BANKSEL _wpointer
0008 5100      01202         MOVF    _wpointer, W, B
000A 0000      01203         BANKSEL _rpointer
000C 1900      01204         XORWF   _rpointer, W, B
000E E100      01205         BNZ     _00458_DS_
0010 2A00      01206         INCF    r0x00, F
0012 01207 _00458_DS_:
0012 5000      01208         MOVF    r0x00, W
0014 80D8      01209         BSF     STATUS, 0
0016 66E8      01210         TSTFSZ  WREG
0018 90D8      01211         BCF     STATUS, 0
001A 6A00      01212         CLRF    r0x00
001C 3600      01213         RLCF    r0x00, F
001E 5000      01214         MOVF    r0x00, W
0020 CFE4 F000 01215         MOVFF   PREINC1, r0x00
0024 0012      01216         RETURN  
               01217 
               01218 ; ; Starting pCode block
               01219 S_main__serial_begin    code
0000 01220 _serial_begin:
               01221 ;       .line   47; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  void serial_begin(unsigned long baudrate)
0000 CFD9 FFE5 01222         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01223         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01224         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01225         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01226         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01227         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01228         MOVFF   r0x04, POSTDEC1
001C 0E02      01229         MOVLW   0x02
001E CFDB F000 01230         MOVFF   PLUSW2, r0x00
0022 0E03      01231         MOVLW   0x03
0024 CFDB F000 01232         MOVFF   PLUSW2, r0x01
0028 0E04      01233         MOVLW   0x04
002A CFDB F000 01234         MOVFF   PLUSW2, r0x02
002E 0E05      01235         MOVLW   0x05
0030 CFDB F000 01236         MOVFF   PLUSW2, r0x03
               01237 ;       .line   52; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  spbrg=(48000000/(4*baudrate))-1;
0034 5000      01238         MOVF    r0x03, W
0036 6EE5      01239         MOVWF   POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 5000      01240         MOVF    r0x02, W
003A 6EE5      01241         MOVWF   POSTDEC1
003C 5000      01242         MOVF    r0x01, W
003E 6EE5      01243         MOVWF   POSTDEC1
0040 5000      01244         MOVF    r0x00, W
0042 6EE5      01245         MOVWF   POSTDEC1
0044 6AE5      01246         CLRF    POSTDEC1
0046 6AE5      01247         CLRF    POSTDEC1
0048 6AE5      01248         CLRF    POSTDEC1
004A 0E04      01249         MOVLW   0x04
004C 6EE5      01250         MOVWF   POSTDEC1
004E EC00 F000 01251         CALL    __mullong
0052 6E00      01252         MOVWF   r0x00
0054 CFF3 F000 01253         MOVFF   PRODL, r0x01
0058 CFF4 F000 01254         MOVFF   PRODH, r0x02
005C CFE9 F000 01255         MOVFF   FSR0L, r0x03
0060 0E08      01256         MOVLW   0x08
0062 26E1      01257         ADDWF   FSR1L, F
0064 5000      01258         MOVF    r0x03, W
0066 6EE5      01259         MOVWF   POSTDEC1
0068 5000      01260         MOVF    r0x02, W
006A 6EE5      01261         MOVWF   POSTDEC1
006C 5000      01262         MOVF    r0x01, W
006E 6EE5      01263         MOVWF   POSTDEC1
0070 5000      01264         MOVF    r0x00, W
0072 6EE5      01265         MOVWF   POSTDEC1
0074 0E02      01266         MOVLW   0x02
0076 6EE5      01267         MOVWF   POSTDEC1
0078 0EDC      01268         MOVLW   0xdc
007A 6EE5      01269         MOVWF   POSTDEC1
007C 0E6C      01270         MOVLW   0x6c
007E 6EE5      01271         MOVWF   POSTDEC1
0080 0E00      01272         MOVLW   0x00
0082 6AE5      01273         CLRF    POSTDEC1
0084 EC00 F000 01274         CALL    __divulong
0088 6E00      01275         MOVWF   r0x00
008A CFF3 F000 01276         MOVFF   PRODL, r0x01
008E 0E08      01277         MOVLW   0x08
0090 26E1      01278         ADDWF   FSR1L, F
0092 0EFF      01279         MOVLW   0xff
0094 2600      01280         ADDWF   r0x00, F
0096 2200      01281         ADDWFC  r0x01, F
               01282 ;       .line   53; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  highbyte=spbrg/256;
0098 5000      01283         MOVF    r0x01, W
               01284 ;       .line   54; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  lowbyte=spbrg%256;
009A 6E00      01285         MOVWF   r0x04
               01286 ;       .line   55; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  TXSTAbits.BRGH=1;                               // set BRGH bit
009C 8400      01287         BSF     _TXSTAbits, 2
               01288 ;       .line   56; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  BAUDCONbits.BRG16=1;                                    // set 16 bits SPBRG
009E 8600      01289         BSF     _BAUDCONbits, 3
               01290 ;       .line   57; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  SPBRGH=highbyte;                        // set UART speed SPBRGH
00A0 C000 F000 01291         MOVFF   r0x04, _SPBRGH
               01292 ;       .line   58; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  SPBRG=lowbyte;                                                  // set UART speed SPBRGL
00A4 C000 F000 01293         MOVFF   r0x00, _SPBRG
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01294 ;       .line   59; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  RCSTA=0x90;                             // set RCEN and SPEN
00A8 0E90      01295         MOVLW   0x90
00AA 6E00      01296         MOVWF   _RCSTA
               01297 ;       .line   60; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  BAUDCONbits.RCIDL=1;                    // set receive active
00AC 8C00      01298         BSF     _BAUDCONbits, 6
               01299 ;       .line   61; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  PIE1bits.RCIE=1;                        // enable interrupt on RX
00AE 8A00      01300         BSF     _PIE1bits, 5
               01301 ;       .line   62; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  INTCONbits.PEIE=1;                      // enable peripheral interrupts
00B0 8C00      01302         BSF     _INTCONbits, 6
               01303 ;       .line   63; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  IPR1bits.RCIP=1;                        // define high priority for RX interrupt
00B2 8A00      01304         BSF     _IPR1bits, 5
               01305 ; #     MOVLW   0x01
               01306 ; #     MOVWF   _wpointer, B
               01307 ; #     MOVLW   0x01
               01308 ;       .line   64; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  wpointer=1;                             // initialize write pointer
00B4 0E01      01309         MOVLW   0x01
00B6 0000      01310         BANKSEL _wpointer
               01311 ;       .line   65; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  rpointer=1;                             // initialize read pointer
00B8 6F00      01312         MOVWF   _wpointer, B
00BA 0000      01313         BANKSEL _rpointer
00BC 6F00      01314         MOVWF   _rpointer, B
               01315 ;       .line   66; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  TXSTAbits.TXEN=1;                       // enable TX
00BE 8A00      01316         BSF     _TXSTAbits, 5
               01317 ;       .line   67; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/uart18f2550.c  INTCONbits.GIE=1;
00C0 8E00      01318         BSF     _INTCONbits, 7
00C2 CFE4 F000 01319         MOVFF   PREINC1, r0x04
00C6 CFE4 F000 01320         MOVFF   PREINC1, r0x03
00CA CFE4 F000 01321         MOVFF   PREINC1, r0x02
00CE CFE4 F000 01322         MOVFF   PREINC1, r0x01
00D2 CFE4 F000 01323         MOVFF   PREINC1, r0x00
00D6 CFE4 FFD9 01324         MOVFF   PREINC1, FSR2L
00DA 0012      01325         RETURN  
               01326 
               01327 ; ; Starting pCode block
               01328 S_main__uitoa   code
0000 01329 _uitoa:
               01330 ;       .line   263; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      static void uitoa(unsigned int num, char * bf, unsigned int base)
0000 CFD9 FFE5 01331         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01332         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01333         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01334         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01335         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01336         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01337         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01338         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01339         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01340         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01341         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01342         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01343         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01344         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01345         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 01346         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 01347         MOVFF   r0x0e, POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0044 C000 FFE5 01348         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 01349         MOVFF   r0x10, POSTDEC1
004C 0E02      01350         MOVLW   0x02
004E CFDB F000 01351         MOVFF   PLUSW2, r0x00
0052 0E03      01352         MOVLW   0x03
0054 CFDB F000 01353         MOVFF   PLUSW2, r0x01
0058 0E04      01354         MOVLW   0x04
005A CFDB F000 01355         MOVFF   PLUSW2, r0x02
005E 0E05      01356         MOVLW   0x05
0060 CFDB F000 01357         MOVFF   PLUSW2, r0x03
0064 0E06      01358         MOVLW   0x06
0066 CFDB F000 01359         MOVFF   PLUSW2, r0x04
006A 0E07      01360         MOVLW   0x07
006C CFDB F000 01361         MOVFF   PLUSW2, r0x05
0070 0E08      01362         MOVLW   0x08
0072 CFDB F000 01363         MOVFF   PLUSW2, r0x06
               01364 ;       .line   266; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      unsigned int d=1;
0076 0E01      01365         MOVLW   0x01
0078 6E00      01366         MOVWF   r0x07
007A 6A00      01367         CLRF    r0x08
007C 01368 _00421_DS_:
               01369 ;       .line   268; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      while (num/d >= base)
007C 5000      01370         MOVF    r0x08, W
007E 6EE5      01371         MOVWF   POSTDEC1
0080 5000      01372         MOVF    r0x07, W
0082 6EE5      01373         MOVWF   POSTDEC1
0084 5000      01374         MOVF    r0x01, W
0086 6EE5      01375         MOVWF   POSTDEC1
0088 5000      01376         MOVF    r0x00, W
008A 6EE5      01377         MOVWF   POSTDEC1
008C EC00 F000 01378         CALL    __divuint
0090 6E00      01379         MOVWF   r0x09
0092 CFF3 F000 01380         MOVFF   PRODL, r0x0a
0096 0E04      01381         MOVLW   0x04
0098 26E1      01382         ADDWF   FSR1L, F
009A 5000      01383         MOVF    r0x06, W
009C 5C00      01384         SUBWF   r0x0a, W
009E E100      01385         BNZ     _00443_DS_
00A0 5000      01386         MOVF    r0x05, W
00A2 5C00      01387         SUBWF   r0x09, W
00A4 01388 _00443_DS_:
00A4 E300      01389         BNC     _00440_DS_
               01390 ;       .line   269; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      d*=base;                
00A6 5000      01391         MOVF    r0x06, W
00A8 6EE5      01392         MOVWF   POSTDEC1
00AA 5000      01393         MOVF    r0x05, W
00AC 6EE5      01394         MOVWF   POSTDEC1
00AE 5000      01395         MOVF    r0x08, W
00B0 6EE5      01396         MOVWF   POSTDEC1
00B2 5000      01397         MOVF    r0x07, W
00B4 6EE5      01398         MOVWF   POSTDEC1
00B6 EC00 F000 01399         CALL    __mulint
00BA 6E00      01400         MOVWF   r0x07
00BC CFF3 F000 01401         MOVFF   PRODL, r0x08
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C0 0E04      01402         MOVLW   0x04
00C2 26E1      01403         ADDWF   FSR1L, F
00C4 D000      01404         BRA     _00421_DS_
00C6 01405 _00440_DS_:
               01406 ;       .line   271; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      while (d!=0)
00C6 6A00      01407         CLRF    r0x09
00C8 6A00      01408         CLRF    r0x0a
00CA 01409 _00428_DS_:
00CA 5000      01410         MOVF    r0x07, W
00CC 1000      01411         IORWF   r0x08, W
00CE B4D8      01412         BTFSC   STATUS, 2
00D0 D000      01413         BRA     _00430_DS_
               01414 ;       .line   273; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      int dgt = num / d;
00D2 5000      01415         MOVF    r0x08, W
00D4 6EE5      01416         MOVWF   POSTDEC1
00D6 5000      01417         MOVF    r0x07, W
00D8 6EE5      01418         MOVWF   POSTDEC1
00DA 5000      01419         MOVF    r0x01, W
00DC 6EE5      01420         MOVWF   POSTDEC1
00DE 5000      01421         MOVF    r0x00, W
00E0 6EE5      01422         MOVWF   POSTDEC1
00E2 EC00 F000 01423         CALL    __divuint
00E6 6E00      01424         MOVWF   r0x0b
00E8 CFF3 F000 01425         MOVFF   PRODL, r0x0c
00EC 0E04      01426         MOVLW   0x04
00EE 26E1      01427         ADDWF   FSR1L, F
               01428 ;       .line   274; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      num%= d;
00F0 5000      01429         MOVF    r0x08, W
00F2 6EE5      01430         MOVWF   POSTDEC1
00F4 5000      01431         MOVF    r0x07, W
00F6 6EE5      01432         MOVWF   POSTDEC1
00F8 5000      01433         MOVF    r0x01, W
00FA 6EE5      01434         MOVWF   POSTDEC1
00FC 5000      01435         MOVF    r0x00, W
00FE 6EE5      01436         MOVWF   POSTDEC1
0100 EC00 F000 01437         CALL    __moduint
0104 6E00      01438         MOVWF   r0x00
0106 CFF3 F000 01439         MOVFF   PRODL, r0x01
010A 0E04      01440         MOVLW   0x04
010C 26E1      01441         ADDWF   FSR1L, F
               01442 ;       .line   275; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      d/=base;
010E 5000      01443         MOVF    r0x06, W
0110 6EE5      01444         MOVWF   POSTDEC1
0112 5000      01445         MOVF    r0x05, W
0114 6EE5      01446         MOVWF   POSTDEC1
0116 5000      01447         MOVF    r0x08, W
0118 6EE5      01448         MOVWF   POSTDEC1
011A 5000      01449         MOVF    r0x07, W
011C 6EE5      01450         MOVWF   POSTDEC1
011E EC00 F000 01451         CALL    __divuint
0122 6E00      01452         MOVWF   r0x07
0124 CFF3 F000 01453         MOVFF   PRODL, r0x08
0128 0E04      01454         MOVLW   0x04
012A 26E1      01455         ADDWF   FSR1L, F
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01456 ;       .line   276; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (n || dgt>0 || d==0)
012C 5000      01457         MOVF    r0x09, W
012E 1000      01458         IORWF   r0x0a, W
0130 E100      01459         BNZ     _00424_DS_
0132 5000      01460         MOVF    r0x0c, W
0134 0F80      01461         ADDLW   0x80
0136 0F80      01462         ADDLW   0x80
0138 E100      01463         BNZ     _00444_DS_
013A 0E01      01464         MOVLW   0x01
013C 5C00      01465         SUBWF   r0x0b, W
013E 01466 _00444_DS_:
013E E200      01467         BC      _00424_DS_
0140 5000      01468         MOVF    r0x07, W
0142 1000      01469         IORWF   r0x08, W
0144 A4D8      01470         BTFSS   STATUS, 2
0146 D000      01471         BRA     _00428_DS_
0148 01472 _00424_DS_:
               01473 ;       .line   278; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      *bf++ = dgt+(dgt<10 ? '0' : 'A'-10);
0148 C000 F000 01474         MOVFF   r0x02, r0x0d
014C C000 F000 01475         MOVFF   r0x03, r0x0e
0150 C000 F000 01476         MOVFF   r0x04, r0x0f
0154 2A00      01477         INCF    r0x02, F
0156 B0D8      01478         BTFSC   STATUS, 0
0158 2A00      01479         INCF    r0x03, F
015A B0D8      01480         BTFSC   STATUS, 0
015C 2A00      01481         INCF    r0x04, F
015E 5000      01482         MOVF    r0x0b, W
0160 6E00      01483         MOVWF   r0x10
0162 5000      01484         MOVF    r0x0c, W
0164 0F80      01485         ADDLW   0x80
0166 0F80      01486         ADDLW   0x80
0168 E100      01487         BNZ     _00445_DS_
016A 0E0A      01488         MOVLW   0x0a
016C 5C00      01489         SUBWF   r0x0b, W
016E 01490 _00445_DS_:
016E E200      01491         BC      _00433_DS_
0170 0E30      01492         MOVLW   0x30
0172 6E00      01493         MOVWF   r0x0b
0174 D000      01494         BRA     _00434_DS_
0176 01495 _00433_DS_:
0176 0E37      01496         MOVLW   0x37
0178 6E00      01497         MOVWF   r0x0b
017A 01498 _00434_DS_:
017A 5000      01499         MOVF    r0x0b, W
017C 2600      01500         ADDWF   r0x10, F
017E C000 FFE5 01501         MOVFF   r0x10, POSTDEC1
0182 C000 FFE9 01502         MOVFF   r0x0d, FSR0L
0186 C000 FFF3 01503         MOVFF   r0x0e, PRODL
018A 5000      01504         MOVF    r0x0f, W
018C EC00 F000 01505         CALL    __gptrput1
               01506 ;       .line   279; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      ++n;
0190 2A00      01507         INCF    r0x09, F
0192 B0D8      01508         BTFSC   STATUS, 0
0194 2A00      01509         INCF    r0x0a, F
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0196 D000      01510         BRA     _00428_DS_
0198 01511 _00430_DS_:
               01512 ;       .line   282; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      *bf=0;
0198 6AE5      01513         CLRF    POSTDEC1
019A C000 FFE9 01514         MOVFF   r0x02, FSR0L
019E C000 FFF3 01515         MOVFF   r0x03, PRODL
01A2 5000      01516         MOVF    r0x04, W
01A4 EC00 F000 01517         CALL    __gptrput1
01A8 CFE4 F000 01518         MOVFF   PREINC1, r0x10
01AC CFE4 F000 01519         MOVFF   PREINC1, r0x0f
01B0 CFE4 F000 01520         MOVFF   PREINC1, r0x0e
01B4 CFE4 F000 01521         MOVFF   PREINC1, r0x0d
01B8 CFE4 F000 01522         MOVFF   PREINC1, r0x0c
01BC CFE4 F000 01523         MOVFF   PREINC1, r0x0b
01C0 CFE4 F000 01524         MOVFF   PREINC1, r0x0a
01C4 CFE4 F000 01525         MOVFF   PREINC1, r0x09
01C8 CFE4 F000 01526         MOVFF   PREINC1, r0x08
01CC CFE4 F000 01527         MOVFF   PREINC1, r0x07
01D0 CFE4 F000 01528         MOVFF   PREINC1, r0x06
01D4 CFE4 F000 01529         MOVFF   PREINC1, r0x05
01D8 CFE4 F000 01530         MOVFF   PREINC1, r0x04
01DC CFE4 F000 01531         MOVFF   PREINC1, r0x03
01E0 CFE4 F000 01532         MOVFF   PREINC1, r0x02
01E4 CFE4 F000 01533         MOVFF   PREINC1, r0x01
01E8 CFE4 F000 01534         MOVFF   PREINC1, r0x00
01EC CFE4 FFD9 01535         MOVFF   PREINC1, FSR2L
01F0 0012      01536         RETURN  
               01537 
               01538 ; ; Starting pCode block
               01539 S_main__sprintf code
0000 01540 _sprintf:
               01541 ;       .line   255; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      int sprintf(char *out, const char *format, va_list args)
0000 CFD9 FFE5 01542         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01543         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01544         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01545         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01546         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01547         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01548         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01549         MOVFF   r0x05, POSTDEC1
0020 0E02      01550         MOVLW   0x02
0022 CFDB F000 01551         MOVFF   PLUSW2, _sprintf_out_1_1
0026 0E03      01552         MOVLW   0x03
0028 CFDB F000 01553         MOVFF   PLUSW2, (_sprintf_out_1_1 + 1)
002C 0E04      01554         MOVLW   0x04
002E CFDB F000 01555         MOVFF   PLUSW2, (_sprintf_out_1_1 + 2)
0032 0E05      01556         MOVLW   0x05
0034 CFDB F000 01557         MOVFF   PLUSW2, r0x00
0038 0E06      01558         MOVLW   0x06
003A CFDB F000 01559         MOVFF   PLUSW2, r0x01
003E 0E07      01560         MOVLW   0x07
0040 CFDB F000 01561         MOVFF   PLUSW2, r0x02
0044 0E08      01562         MOVLW   0x08
0046 CFDB F000 01563         MOVFF   PLUSW2, r0x03
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A 0E09      01564         MOVLW   0x09
004C CFDB F000 01565         MOVFF   PLUSW2, r0x04
0050 0E0A      01566         MOVLW   0x0a
0052 CFDB F000 01567         MOVFF   PLUSW2, r0x05
               01568 ;       .line   260; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      return print(&out, format, args);
0056 5000      01569         MOVF    r0x05, W
0058 6EE5      01570         MOVWF   POSTDEC1
005A 5000      01571         MOVF    r0x04, W
005C 6EE5      01572         MOVWF   POSTDEC1
005E 5000      01573         MOVF    r0x03, W
0060 6EE5      01574         MOVWF   POSTDEC1
0062 5000      01575         MOVF    r0x02, W
0064 6EE5      01576         MOVWF   POSTDEC1
0066 5000      01577         MOVF    r0x01, W
0068 6EE5      01578         MOVWF   POSTDEC1
006A 5000      01579         MOVF    r0x00, W
006C 6EE5      01580         MOVWF   POSTDEC1
006E 0E80      01581         MOVLW   0x80
0070 6EE5      01582         MOVWF   POSTDEC1
0072 0E00      01583         MOVLW   HIGH(_sprintf_out_1_1)
0074 6EE5      01584         MOVWF   POSTDEC1
0076 0E00      01585         MOVLW   LOW(_sprintf_out_1_1)
0078 6EE5      01586         MOVWF   POSTDEC1
007A EC00 F000 01587         CALL    _print
007E 6E00      01588         MOVWF   r0x00
0080 CFF3 F000 01589         MOVFF   PRODL, r0x01
0084 0E09      01590         MOVLW   0x09
0086 26E1      01591         ADDWF   FSR1L, F
0088 C000 FFF3 01592         MOVFF   r0x01, PRODL
008C 5000      01593         MOVF    r0x00, W
008E CFE4 F000 01594         MOVFF   PREINC1, r0x05
0092 CFE4 F000 01595         MOVFF   PREINC1, r0x04
0096 CFE4 F000 01596         MOVFF   PREINC1, r0x03
009A CFE4 F000 01597         MOVFF   PREINC1, r0x02
009E CFE4 F000 01598         MOVFF   PREINC1, r0x01
00A2 CFE4 F000 01599         MOVFF   PREINC1, r0x00
00A6 CFE4 FFD9 01600         MOVFF   PREINC1, FSR2L
00AA 0012      01601         RETURN  
               01602 
               01603 ; ; Starting pCode block
               01604 S_main__printf  code
0000 01605 _printf:
               01606 ;       .line   245; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      int printf(stdout func, const char *format, va_list args)
0000 CFD9 FFE5 01607         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01608         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01609         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01610         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01611         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01612         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01613         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01614         MOVFF   r0x05, POSTDEC1
0020 0E02      01615         MOVLW   0x02
0022 CFDB F000 01616         MOVFF   PLUSW2, _putchar
0026 0E03      01617         MOVLW   0x03
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 CFDB F000 01618         MOVFF   PLUSW2, (_putchar + 1)
002C 0E04      01619         MOVLW   0x04
002E CFDB F000 01620         MOVFF   PLUSW2, (_putchar + 2)
0032 0E05      01621         MOVLW   0x05
0034 CFDB F000 01622         MOVFF   PLUSW2, r0x00
0038 0E06      01623         MOVLW   0x06
003A CFDB F000 01624         MOVFF   PLUSW2, r0x01
003E 0E07      01625         MOVLW   0x07
0040 CFDB F000 01626         MOVFF   PLUSW2, r0x02
0044 0E08      01627         MOVLW   0x08
0046 CFDB F000 01628         MOVFF   PLUSW2, r0x03
004A 0E09      01629         MOVLW   0x09
004C CFDB F000 01630         MOVFF   PLUSW2, r0x04
0050 0E0A      01631         MOVLW   0x0a
0052 CFDB F000 01632         MOVFF   PLUSW2, r0x05
               01633 ;       .line   251; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      return print(0, format, args);
0056 5000      01634         MOVF    r0x05, W
0058 6EE5      01635         MOVWF   POSTDEC1
005A 5000      01636         MOVF    r0x04, W
005C 6EE5      01637         MOVWF   POSTDEC1
005E 5000      01638         MOVF    r0x03, W
0060 6EE5      01639         MOVWF   POSTDEC1
0062 5000      01640         MOVF    r0x02, W
0064 6EE5      01641         MOVWF   POSTDEC1
0066 5000      01642         MOVF    r0x01, W
0068 6EE5      01643         MOVWF   POSTDEC1
006A 5000      01644         MOVF    r0x00, W
006C 6EE5      01645         MOVWF   POSTDEC1
006E 0E00      01646         MOVLW   0x00
0070 6AE5      01647         CLRF    POSTDEC1
0072 6AE5      01648         CLRF    POSTDEC1
0074 6AE5      01649         CLRF    POSTDEC1
0076 EC00 F000 01650         CALL    _print
007A 6E00      01651         MOVWF   r0x00
007C CFF3 F000 01652         MOVFF   PRODL, r0x01
0080 0E09      01653         MOVLW   0x09
0082 26E1      01654         ADDWF   FSR1L, F
0084 C000 FFF3 01655         MOVFF   r0x01, PRODL
0088 5000      01656         MOVF    r0x00, W
008A CFE4 F000 01657         MOVFF   PREINC1, r0x05
008E CFE4 F000 01658         MOVFF   PREINC1, r0x04
0092 CFE4 F000 01659         MOVFF   PREINC1, r0x03
0096 CFE4 F000 01660         MOVFF   PREINC1, r0x02
009A CFE4 F000 01661         MOVFF   PREINC1, r0x01
009E CFE4 F000 01662         MOVFF   PREINC1, r0x00
00A2 CFE4 FFD9 01663         MOVFF   PREINC1, FSR2L
00A6 0012      01664         RETURN  
               01665 
               01666 ; ; Starting pCode block
               01667 S_main__print   code
0000 01668 _print:
               01669 ;       .line   141; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      static int print(char **out, const char *format, va_list args )
0000 CFD9 FFE5 01670         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01671         MOVFF   FSR1L, FSR2L
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0008 C000 FFE5 01672         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01673         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01674         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01675         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01676         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01677         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01678         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01679         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01680         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01681         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01682         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01683         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01684         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 01685         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 01686         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 01687         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 01688         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 01689         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 01690         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 01691         MOVFF   r0x13, POSTDEC1
0058 0E02      01692         MOVLW   0x02
005A CFDB F000 01693         MOVFF   PLUSW2, r0x00
005E 0E03      01694         MOVLW   0x03
0060 CFDB F000 01695         MOVFF   PLUSW2, r0x01
0064 0E04      01696         MOVLW   0x04
0066 CFDB F000 01697         MOVFF   PLUSW2, r0x02
006A 0E05      01698         MOVLW   0x05
006C CFDB F000 01699         MOVFF   PLUSW2, r0x03
0070 0E06      01700         MOVLW   0x06
0072 CFDB F000 01701         MOVFF   PLUSW2, r0x04
0076 0E07      01702         MOVLW   0x07
0078 CFDB F000 01703         MOVFF   PLUSW2, r0x05
007C 0E08      01704         MOVLW   0x08
007E CFDB F000 01705         MOVFF   PLUSW2, r0x06
0082 0E09      01706         MOVLW   0x09
0084 CFDB F000 01707         MOVFF   PLUSW2, r0x07
0088 0E0A      01708         MOVLW   0x0a
008A CFDB F000 01709         MOVFF   PLUSW2, r0x08
               01710 ;       .line   144; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      int pc = 0;
008E 6A00      01711         CLRF    r0x09
0090 6A00      01712         CLRF    r0x0a
0092 01713 _00339_DS_:
               01714 ;       .line   148; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      for (; *format != 0; ++format)
0092 C000 FFE9 01715         MOVFF   r0x03, FSR0L
0096 C000 FFF3 01716         MOVFF   r0x04, PRODL
009A 5000      01717         MOVF    r0x05, W
009C EC00 F000 01718         CALL    __gptrget1
00A0 6E00      01719         MOVWF   r0x0b
00A2 5000      01720         MOVF    r0x0b, W
00A4 B4D8      01721         BTFSC   STATUS, 2
00A6 EF00 F000 01722         GOTO    _00342_DS_
               01723 ;       .line   150; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (*format == '%')
00AA 5000      01724         MOVF    r0x0b, W
00AC 0A25      01725         XORLW   0x25
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AE E000      01726         BZ      _00379_DS_
00B0 EF00 F000 01727         GOTO    _00335_DS_
00B4 01728 _00379_DS_:
               01729 ;       .line   152; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      ++format;
00B4 2A00      01730         INCF    r0x03, F
00B6 B0D8      01731         BTFSC   STATUS, 0
00B8 2A00      01732         INCF    r0x04, F
00BA B0D8      01733         BTFSC   STATUS, 0
00BC 2A00      01734         INCF    r0x05, F
               01735 ;       .line   153; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      width = pad = 0;
00BE 6A00      01736         CLRF    r0x0b
00C0 6A00      01737         CLRF    r0x0c
00C2 6A00      01738         CLRF    r0x0d
00C4 6A00      01739         CLRF    r0x0e
               01740 ;       .line   154; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (*format == '\0') break;
00C6 C000 FFE9 01741         MOVFF   r0x03, FSR0L
00CA C000 FFF3 01742         MOVFF   r0x04, PRODL
00CE 5000      01743         MOVF    r0x05, W
00D0 EC00 F000 01744         CALL    __gptrget1
00D4 6E00      01745         MOVWF   r0x0f
00D6 5000      01746         MOVF    r0x0f, W
00D8 B4D8      01747         BTFSC   STATUS, 2
00DA EF00 F000 01748         GOTO    _00342_DS_
               01749 ;       .line   155; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (*format == '%') goto out;
00DE 5000      01750         MOVF    r0x0f, W
00E0 0A25      01751         XORLW   0x25
00E2 E100      01752         BNZ     _00381_DS_
00E4 EF00 F000 01753         GOTO    _00335_DS_
00E8 01754 _00381_DS_:
               01755 ;       .line   156; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (*format == '-')
00E8 5000      01756         MOVF    r0x0f, W
00EA 0A2D      01757         XORLW   0x2d
00EC E100      01758         BNZ     _00360_DS_
               01759 ;       .line   158; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      ++format;
00EE 2A00      01760         INCF    r0x03, F
00F0 B0D8      01761         BTFSC   STATUS, 0
00F2 2A00      01762         INCF    r0x04, F
00F4 B0D8      01763         BTFSC   STATUS, 0
00F6 2A00      01764         INCF    r0x05, F
               01765 ;       .line   159; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pad = PAD_RIGHT;
00F8 0E01      01766         MOVLW   0x01
00FA 6E00      01767         MOVWF   r0x0b
00FC 6A00      01768         CLRF    r0x0c
00FE 01769 _00360_DS_:
               01770 ;       .line   161; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      while (*format == '0')
00FE C000 F000 01771         MOVFF   r0x03, r0x0f
0102 C000 F000 01772         MOVFF   r0x04, r0x10
0106 C000 F000 01773         MOVFF   r0x05, r0x11
010A 01774 _00314_DS_:
010A C000 FFE9 01775         MOVFF   r0x0f, FSR0L
010E C000 FFF3 01776         MOVFF   r0x10, PRODL
0112 5000      01777         MOVF    r0x11, W
0114 EC00 F000 01778         CALL    __gptrget1
               01779 ; #     MOVWF   r0x12
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01780 ; #     MOVF    r0x12, W
0118 0A30      01781         XORLW   0x30
011A E100      01782         BNZ     _00346_DS_
               01783 ;       .line   163; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      ++format;
011C 2A00      01784         INCF    r0x0f, F
011E B0D8      01785         BTFSC   STATUS, 0
0120 2A00      01786         INCF    r0x10, F
0122 B0D8      01787         BTFSC   STATUS, 0
0124 2A00      01788         INCF    r0x11, F
               01789 ;       .line   164; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pad |= PAD_ZERO;
0126 8200      01790         BSF     r0x0b, 1
0128 D000      01791         BRA     _00314_DS_
012A 01792 _00346_DS_:
               01793 ;       .line   166; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      for ( ; *format >= '0' && *format <= '9'; ++format)
012A C000 FFE9 01794         MOVFF   r0x0f, FSR0L
012E C000 FFF3 01795         MOVFF   r0x10, PRODL
0132 5000      01796         MOVF    r0x11, W
0134 EC00 F000 01797         CALL    __gptrget1
               01798 ; #     MOVWF   r0x12
               01799 ; #     MOVF    r0x12, W
0138 6E00      01800         MOVWF   r0x12
013A 0F80      01801         ADDLW   0x80
013C 0F50      01802         ADDLW   0x50
013E E300      01803         BNC     _00377_DS_
0140 5000      01804         MOVF    r0x12, W
0142 0F80      01805         ADDLW   0x80
0144 0F46      01806         ADDLW   0x46
0146 E200      01807         BC      _00377_DS_
               01808 ;       .line   168; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      width *= 10;
0148 5000      01809         MOVF    r0x0e, W
014A 6EE5      01810         MOVWF   POSTDEC1
014C 5000      01811         MOVF    r0x0d, W
014E 6EE5      01812         MOVWF   POSTDEC1
0150 6AE5      01813         CLRF    POSTDEC1
0152 0E0A      01814         MOVLW   0x0a
0154 6EE5      01815         MOVWF   POSTDEC1
0156 EC00 F000 01816         CALL    __mulint
015A 6E00      01817         MOVWF   r0x0d
015C CFF3 F000 01818         MOVFF   PRODL, r0x0e
0160 0E04      01819         MOVLW   0x04
0162 26E1      01820         ADDWF   FSR1L, F
               01821 ;       .line   169; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      width += *format - '0';
0164 6A00      01822         CLRF    r0x13
0166 BE00      01823         BTFSC   r0x12, 7
0168 6800      01824         SETF    r0x13
016A 0ED0      01825         MOVLW   0xd0
016C 2600      01826         ADDWF   r0x12, F
016E A0D8      01827         BTFSS   STATUS, 0
0170 0600      01828         DECF    r0x13, F
0172 5000      01829         MOVF    r0x12, W
0174 2600      01830         ADDWF   r0x0d, F
0176 5000      01831         MOVF    r0x13, W
0178 2200      01832         ADDWFC  r0x0e, F
               01833 ;       .line   166; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      for ( ; *format >= '0' && *format <= '9'; ++format)
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
017A 2A00      01834         INCF    r0x0f, F
017C B0D8      01835         BTFSC   STATUS, 0
017E 2A00      01836         INCF    r0x10, F
0180 B0D8      01837         BTFSC   STATUS, 0
0182 2A00      01838         INCF    r0x11, F
0184 D000      01839         BRA     _00346_DS_
0186 01840 _00377_DS_:
0186 C000 F000 01841         MOVFF   r0x0f, r0x03
018A C000 F000 01842         MOVFF   r0x10, r0x04
018E C000 F000 01843         MOVFF   r0x11, r0x05
               01844 ;       .line   171; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 's' )
0192 C000 FFE9 01845         MOVFF   r0x0f, FSR0L
0196 C000 FFF3 01846         MOVFF   r0x10, PRODL
019A 5000      01847         MOVF    r0x11, W
019C EC00 F000 01848         CALL    __gptrget1
               01849 ; #     MOVWF   r0x0f
               01850 ; #     MOVF    r0x0f, W
01A0 6E00      01851         MOVWF   r0x0f
01A2 0A73      01852         XORLW   0x73
01A4 E000      01853         BZ      _00390_DS_
01A6 D000      01854         BRA     _00318_DS_
01A8 01855 _00390_DS_:
               01856 ;       .line   174; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      char *s = va_arg(args, char*);
01A8 5000      01857         MOVF    r0x06, W
01AA 0F03      01858         ADDLW   0x03
01AC 6E00      01859         MOVWF   r0x10
01AE 0E00      01860         MOVLW   0x00
01B0 2000      01861         ADDWFC  r0x07, W
01B2 6E00      01862         MOVWF   r0x11
01B4 0E00      01863         MOVLW   0x00
01B6 2000      01864         ADDWFC  r0x08, W
01B8 6E00      01865         MOVWF   r0x12
01BA C000 F000 01866         MOVFF   r0x10, r0x06
01BE C000 F000 01867         MOVFF   r0x11, r0x07
01C2 C000 F000 01868         MOVFF   r0x12, r0x08
01C6 0EFD      01869         MOVLW   0xfd
01C8 2600      01870         ADDWF   r0x10, F
01CA 0EFF      01871         MOVLW   0xff
01CC 2200      01872         ADDWFC  r0x11, F
01CE 2200      01873         ADDWFC  r0x12, F
01D0 C000 FFE9 01874         MOVFF   r0x10, FSR0L
01D4 C000 FFF3 01875         MOVFF   r0x11, PRODL
01D8 5000      01876         MOVF    r0x12, W
01DA EC00 F000 01877         CALL    __gptrget3
01DE 6E00      01878         MOVWF   r0x10
01E0 CFF3 F000 01879         MOVFF   PRODL, r0x11
01E4 CFF4 F000 01880         MOVFF   PRODH, r0x12
               01881 ;       .line   176; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += prints (out, s?s:"(null)", width, pad);
01E8 1000      01882         IORWF   r0x11, W
               01883 ; #     IORWF   r0x12, W
               01884 ; #     BTFSC   STATUS, 2
               01885 ; #     GOTO    _00352_DS_
               01886 ; #     GOTO    _00353_DS_
               01887 ; #     MOVLW   LOW(__str_0)
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01EA 1000      01888         IORWF   r0x12, W
01EC E100      01889         BNZ     _00353_DS_
01EE 0E00      01890         MOVLW   LOW(__str_0)
01F0 6E00      01891         MOVWF   r0x10
01F2 0E00      01892         MOVLW   HIGH(__str_0)
01F4 6E00      01893         MOVWF   r0x11
01F6 0E00      01894         MOVLW   UPPER(__str_0)
01F8 6E00      01895         MOVWF   r0x12
01FA 01896 _00353_DS_:
01FA 5000      01897         MOVF    r0x0c, W
01FC 6EE5      01898         MOVWF   POSTDEC1
01FE 5000      01899         MOVF    r0x0b, W
0200 6EE5      01900         MOVWF   POSTDEC1
0202 5000      01901         MOVF    r0x0e, W
0204 6EE5      01902         MOVWF   POSTDEC1
0206 5000      01903         MOVF    r0x0d, W
0208 6EE5      01904         MOVWF   POSTDEC1
020A 5000      01905         MOVF    r0x12, W
020C 6EE5      01906         MOVWF   POSTDEC1
020E 5000      01907         MOVF    r0x11, W
0210 6EE5      01908         MOVWF   POSTDEC1
0212 5000      01909         MOVF    r0x10, W
0214 6EE5      01910         MOVWF   POSTDEC1
0216 5000      01911         MOVF    r0x02, W
0218 6EE5      01912         MOVWF   POSTDEC1
021A 5000      01913         MOVF    r0x01, W
021C 6EE5      01914         MOVWF   POSTDEC1
021E 5000      01915         MOVF    r0x00, W
0220 6EE5      01916         MOVWF   POSTDEC1
0222 EC00 F000 01917         CALL    _prints
0226 6E00      01918         MOVWF   r0x10
0228 CFF3 F000 01919         MOVFF   PRODL, r0x11
022C 0E0A      01920         MOVLW   0x0a
022E 26E1      01921         ADDWF   FSR1L, F
0230 5000      01922         MOVF    r0x10, W
0232 2600      01923         ADDWF   r0x09, F
0234 5000      01924         MOVF    r0x11, W
0236 2200      01925         ADDWFC  r0x0a, F
               01926 ;       .line   177; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
0238 EF00 F000 01927         GOTO    _00341_DS_
023C 01928 _00318_DS_:
               01929 ;       .line   179; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'd' )
023C 5000      01930         MOVF    r0x0f, W
023E 0A64      01931         XORLW   0x64
0240 E000      01932         BZ      _00392_DS_
0242 D000      01933         BRA     _00320_DS_
0244 01934 _00392_DS_:
               01935 ;       .line   181; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += printi (out, va_arg(args, int), 10, 1, width, pad, 'a');
0244 5000      01936         MOVF    r0x06, W
0246 0F02      01937         ADDLW   0x02
0248 6E00      01938         MOVWF   r0x10
024A 0E00      01939         MOVLW   0x00
024C 2000      01940         ADDWFC  r0x07, W
024E 6E00      01941         MOVWF   r0x11
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0250 0E00      01942         MOVLW   0x00
0252 2000      01943         ADDWFC  r0x08, W
0254 6E00      01944         MOVWF   r0x12
0256 C000 F000 01945         MOVFF   r0x10, r0x06
025A C000 F000 01946         MOVFF   r0x11, r0x07
025E C000 F000 01947         MOVFF   r0x12, r0x08
0262 0EFE      01948         MOVLW   0xfe
0264 2600      01949         ADDWF   r0x10, F
0266 0EFF      01950         MOVLW   0xff
0268 2200      01951         ADDWFC  r0x11, F
026A 2200      01952         ADDWFC  r0x12, F
026C C000 FFE9 01953         MOVFF   r0x10, FSR0L
0270 C000 FFF3 01954         MOVFF   r0x11, PRODL
0274 5000      01955         MOVF    r0x12, W
0276 EC00 F000 01956         CALL    __gptrget2
027A 6E00      01957         MOVWF   r0x10
027C CFF3 F000 01958         MOVFF   PRODL, r0x11
0280 6AE5      01959         CLRF    POSTDEC1
0282 0E61      01960         MOVLW   0x61
0284 6EE5      01961         MOVWF   POSTDEC1
0286 5000      01962         MOVF    r0x0c, W
0288 6EE5      01963         MOVWF   POSTDEC1
028A 5000      01964         MOVF    r0x0b, W
028C 6EE5      01965         MOVWF   POSTDEC1
028E 5000      01966         MOVF    r0x0e, W
0290 6EE5      01967         MOVWF   POSTDEC1
0292 5000      01968         MOVF    r0x0d, W
0294 6EE5      01969         MOVWF   POSTDEC1
0296 6AE5      01970         CLRF    POSTDEC1
0298 0E01      01971         MOVLW   0x01
029A 6EE5      01972         MOVWF   POSTDEC1
029C 6AE5      01973         CLRF    POSTDEC1
029E 0E0A      01974         MOVLW   0x0a
02A0 6EE5      01975         MOVWF   POSTDEC1
02A2 5000      01976         MOVF    r0x11, W
02A4 6EE5      01977         MOVWF   POSTDEC1
02A6 5000      01978         MOVF    r0x10, W
02A8 6EE5      01979         MOVWF   POSTDEC1
02AA 5000      01980         MOVF    r0x02, W
02AC 6EE5      01981         MOVWF   POSTDEC1
02AE 5000      01982         MOVF    r0x01, W
02B0 6EE5      01983         MOVWF   POSTDEC1
02B2 5000      01984         MOVF    r0x00, W
02B4 6EE5      01985         MOVWF   POSTDEC1
02B6 EC00 F000 01986         CALL    _printi
02BA 6E00      01987         MOVWF   r0x10
02BC CFF3 F000 01988         MOVFF   PRODL, r0x11
02C0 0E0F      01989         MOVLW   0x0f
02C2 26E1      01990         ADDWF   FSR1L, F
02C4 5000      01991         MOVF    r0x10, W
02C6 2600      01992         ADDWF   r0x09, F
02C8 5000      01993         MOVF    r0x11, W
02CA 2200      01994         ADDWFC  r0x0a, F
               01995 ;       .line   182; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02CC D000      01996         BRA     _00341_DS_
02CE 01997 _00320_DS_:
               01998 ;       .line   184; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'x' )
02CE 5000      01999         MOVF    r0x0f, W
02D0 0A78      02000         XORLW   0x78
02D2 E000      02001         BZ      _00394_DS_
02D4 D000      02002         BRA     _00322_DS_
02D6 02003 _00394_DS_:
               02004 ;       .line   186; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += printi (out, va_arg(args, int), 16, 0, width, pad, 'a');
02D6 5000      02005         MOVF    r0x06, W
02D8 0F02      02006         ADDLW   0x02
02DA 6E00      02007         MOVWF   r0x10
02DC 0E00      02008         MOVLW   0x00
02DE 2000      02009         ADDWFC  r0x07, W
02E0 6E00      02010         MOVWF   r0x11
02E2 0E00      02011         MOVLW   0x00
02E4 2000      02012         ADDWFC  r0x08, W
02E6 6E00      02013         MOVWF   r0x12
02E8 C000 F000 02014         MOVFF   r0x10, r0x06
02EC C000 F000 02015         MOVFF   r0x11, r0x07
02F0 C000 F000 02016         MOVFF   r0x12, r0x08
02F4 0EFE      02017         MOVLW   0xfe
02F6 2600      02018         ADDWF   r0x10, F
02F8 0EFF      02019         MOVLW   0xff
02FA 2200      02020         ADDWFC  r0x11, F
02FC 2200      02021         ADDWFC  r0x12, F
02FE C000 FFE9 02022         MOVFF   r0x10, FSR0L
0302 C000 FFF3 02023         MOVFF   r0x11, PRODL
0306 5000      02024         MOVF    r0x12, W
0308 EC00 F000 02025         CALL    __gptrget2
030C 6E00      02026         MOVWF   r0x10
030E CFF3 F000 02027         MOVFF   PRODL, r0x11
0312 6AE5      02028         CLRF    POSTDEC1
0314 0E61      02029         MOVLW   0x61
0316 6EE5      02030         MOVWF   POSTDEC1
0318 5000      02031         MOVF    r0x0c, W
031A 6EE5      02032         MOVWF   POSTDEC1
031C 5000      02033         MOVF    r0x0b, W
031E 6EE5      02034         MOVWF   POSTDEC1
0320 5000      02035         MOVF    r0x0e, W
0322 6EE5      02036         MOVWF   POSTDEC1
0324 5000      02037         MOVF    r0x0d, W
0326 6EE5      02038         MOVWF   POSTDEC1
0328 6AE5      02039         CLRF    POSTDEC1
032A 6AE5      02040         CLRF    POSTDEC1
032C 6AE5      02041         CLRF    POSTDEC1
032E 0E10      02042         MOVLW   0x10
0330 6EE5      02043         MOVWF   POSTDEC1
0332 5000      02044         MOVF    r0x11, W
0334 6EE5      02045         MOVWF   POSTDEC1
0336 5000      02046         MOVF    r0x10, W
0338 6EE5      02047         MOVWF   POSTDEC1
033A 5000      02048         MOVF    r0x02, W
033C 6EE5      02049         MOVWF   POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
033E 5000      02050         MOVF    r0x01, W
0340 6EE5      02051         MOVWF   POSTDEC1
0342 5000      02052         MOVF    r0x00, W
0344 6EE5      02053         MOVWF   POSTDEC1
0346 EC00 F000 02054         CALL    _printi
034A 6E00      02055         MOVWF   r0x10
034C CFF3 F000 02056         MOVFF   PRODL, r0x11
0350 0E0F      02057         MOVLW   0x0f
0352 26E1      02058         ADDWF   FSR1L, F
0354 5000      02059         MOVF    r0x10, W
0356 2600      02060         ADDWF   r0x09, F
0358 5000      02061         MOVF    r0x11, W
035A 2200      02062         ADDWFC  r0x0a, F
               02063 ;       .line   187; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
035C D000      02064         BRA     _00341_DS_
035E 02065 _00322_DS_:
               02066 ;       .line   189; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'X' )
035E 5000      02067         MOVF    r0x0f, W
0360 0A58      02068         XORLW   0x58
0362 E000      02069         BZ      _00396_DS_
0364 D000      02070         BRA     _00324_DS_
0366 02071 _00396_DS_:
               02072 ;       .line   191; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += printi (out, va_arg(args, int), 16, 0, width, pad, 'A');
0366 5000      02073         MOVF    r0x06, W
0368 0F02      02074         ADDLW   0x02
036A 6E00      02075         MOVWF   r0x10
036C 0E00      02076         MOVLW   0x00
036E 2000      02077         ADDWFC  r0x07, W
0370 6E00      02078         MOVWF   r0x11
0372 0E00      02079         MOVLW   0x00
0374 2000      02080         ADDWFC  r0x08, W
0376 6E00      02081         MOVWF   r0x12
0378 C000 F000 02082         MOVFF   r0x10, r0x06
037C C000 F000 02083         MOVFF   r0x11, r0x07
0380 C000 F000 02084         MOVFF   r0x12, r0x08
0384 0EFE      02085         MOVLW   0xfe
0386 2600      02086         ADDWF   r0x10, F
0388 0EFF      02087         MOVLW   0xff
038A 2200      02088         ADDWFC  r0x11, F
038C 2200      02089         ADDWFC  r0x12, F
038E C000 FFE9 02090         MOVFF   r0x10, FSR0L
0392 C000 FFF3 02091         MOVFF   r0x11, PRODL
0396 5000      02092         MOVF    r0x12, W
0398 EC00 F000 02093         CALL    __gptrget2
039C 6E00      02094         MOVWF   r0x10
039E CFF3 F000 02095         MOVFF   PRODL, r0x11
03A2 6AE5      02096         CLRF    POSTDEC1
03A4 0E41      02097         MOVLW   0x41
03A6 6EE5      02098         MOVWF   POSTDEC1
03A8 5000      02099         MOVF    r0x0c, W
03AA 6EE5      02100         MOVWF   POSTDEC1
03AC 5000      02101         MOVF    r0x0b, W
03AE 6EE5      02102         MOVWF   POSTDEC1
03B0 5000      02103         MOVF    r0x0e, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
03B2 6EE5      02104         MOVWF   POSTDEC1
03B4 5000      02105         MOVF    r0x0d, W
03B6 6EE5      02106         MOVWF   POSTDEC1
03B8 6AE5      02107         CLRF    POSTDEC1
03BA 6AE5      02108         CLRF    POSTDEC1
03BC 6AE5      02109         CLRF    POSTDEC1
03BE 0E10      02110         MOVLW   0x10
03C0 6EE5      02111         MOVWF   POSTDEC1
03C2 5000      02112         MOVF    r0x11, W
03C4 6EE5      02113         MOVWF   POSTDEC1
03C6 5000      02114         MOVF    r0x10, W
03C8 6EE5      02115         MOVWF   POSTDEC1
03CA 5000      02116         MOVF    r0x02, W
03CC 6EE5      02117         MOVWF   POSTDEC1
03CE 5000      02118         MOVF    r0x01, W
03D0 6EE5      02119         MOVWF   POSTDEC1
03D2 5000      02120         MOVF    r0x00, W
03D4 6EE5      02121         MOVWF   POSTDEC1
03D6 EC00 F000 02122         CALL    _printi
03DA 6E00      02123         MOVWF   r0x10
03DC CFF3 F000 02124         MOVFF   PRODL, r0x11
03E0 0E0F      02125         MOVLW   0x0f
03E2 26E1      02126         ADDWF   FSR1L, F
03E4 5000      02127         MOVF    r0x10, W
03E6 2600      02128         ADDWF   r0x09, F
03E8 5000      02129         MOVF    r0x11, W
03EA 2200      02130         ADDWFC  r0x0a, F
               02131 ;       .line   192; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
03EC D000      02132         BRA     _00341_DS_
03EE 02133 _00324_DS_:
               02134 ;       .line   194; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'b' )
03EE 5000      02135         MOVF    r0x0f, W
03F0 0A62      02136         XORLW   0x62
03F2 E000      02137         BZ      _00398_DS_
03F4 D000      02138         BRA     _00326_DS_
03F6 02139 _00398_DS_:
               02140 ;       .line   196; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += printi (out, va_arg(args, int), 2, 0, width, pad, 'a');
03F6 5000      02141         MOVF    r0x06, W
03F8 0F02      02142         ADDLW   0x02
03FA 6E00      02143         MOVWF   r0x10
03FC 0E00      02144         MOVLW   0x00
03FE 2000      02145         ADDWFC  r0x07, W
0400 6E00      02146         MOVWF   r0x11
0402 0E00      02147         MOVLW   0x00
0404 2000      02148         ADDWFC  r0x08, W
0406 6E00      02149         MOVWF   r0x12
0408 C000 F000 02150         MOVFF   r0x10, r0x06
040C C000 F000 02151         MOVFF   r0x11, r0x07
0410 C000 F000 02152         MOVFF   r0x12, r0x08
0414 0EFE      02153         MOVLW   0xfe
0416 2600      02154         ADDWF   r0x10, F
0418 0EFF      02155         MOVLW   0xff
041A 2200      02156         ADDWFC  r0x11, F
041C 2200      02157         ADDWFC  r0x12, F
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
041E C000 FFE9 02158         MOVFF   r0x10, FSR0L
0422 C000 FFF3 02159         MOVFF   r0x11, PRODL
0426 5000      02160         MOVF    r0x12, W
0428 EC00 F000 02161         CALL    __gptrget2
042C 6E00      02162         MOVWF   r0x10
042E CFF3 F000 02163         MOVFF   PRODL, r0x11
0432 6AE5      02164         CLRF    POSTDEC1
0434 0E61      02165         MOVLW   0x61
0436 6EE5      02166         MOVWF   POSTDEC1
0438 5000      02167         MOVF    r0x0c, W
043A 6EE5      02168         MOVWF   POSTDEC1
043C 5000      02169         MOVF    r0x0b, W
043E 6EE5      02170         MOVWF   POSTDEC1
0440 5000      02171         MOVF    r0x0e, W
0442 6EE5      02172         MOVWF   POSTDEC1
0444 5000      02173         MOVF    r0x0d, W
0446 6EE5      02174         MOVWF   POSTDEC1
0448 6AE5      02175         CLRF    POSTDEC1
044A 6AE5      02176         CLRF    POSTDEC1
044C 6AE5      02177         CLRF    POSTDEC1
044E 0E02      02178         MOVLW   0x02
0450 6EE5      02179         MOVWF   POSTDEC1
0452 5000      02180         MOVF    r0x11, W
0454 6EE5      02181         MOVWF   POSTDEC1
0456 5000      02182         MOVF    r0x10, W
0458 6EE5      02183         MOVWF   POSTDEC1
045A 5000      02184         MOVF    r0x02, W
045C 6EE5      02185         MOVWF   POSTDEC1
045E 5000      02186         MOVF    r0x01, W
0460 6EE5      02187         MOVWF   POSTDEC1
0462 5000      02188         MOVF    r0x00, W
0464 6EE5      02189         MOVWF   POSTDEC1
0466 EC00 F000 02190         CALL    _printi
046A 6E00      02191         MOVWF   r0x10
046C CFF3 F000 02192         MOVFF   PRODL, r0x11
0470 0E0F      02193         MOVLW   0x0f
0472 26E1      02194         ADDWF   FSR1L, F
0474 5000      02195         MOVF    r0x10, W
0476 2600      02196         ADDWF   r0x09, F
0478 5000      02197         MOVF    r0x11, W
047A 2200      02198         ADDWFC  r0x0a, F
               02199 ;       .line   197; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
047C D000      02200         BRA     _00341_DS_
047E 02201 _00326_DS_:
               02202 ;       .line   199; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'o' )
047E 5000      02203         MOVF    r0x0f, W
0480 0A6F      02204         XORLW   0x6f
0482 E000      02205         BZ      _00400_DS_
0484 D000      02206         BRA     _00328_DS_
0486 02207 _00400_DS_:
               02208 ;       .line   201; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += printi (out, va_arg(args, int), 8, 0, width, pad, 'a');
0486 5000      02209         MOVF    r0x06, W
0488 0F02      02210         ADDLW   0x02
048A 6E00      02211         MOVWF   r0x10
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
048C 0E00      02212         MOVLW   0x00
048E 2000      02213         ADDWFC  r0x07, W
0490 6E00      02214         MOVWF   r0x11
0492 0E00      02215         MOVLW   0x00
0494 2000      02216         ADDWFC  r0x08, W
0496 6E00      02217         MOVWF   r0x12
0498 C000 F000 02218         MOVFF   r0x10, r0x06
049C C000 F000 02219         MOVFF   r0x11, r0x07
04A0 C000 F000 02220         MOVFF   r0x12, r0x08
04A4 0EFE      02221         MOVLW   0xfe
04A6 2600      02222         ADDWF   r0x10, F
04A8 0EFF      02223         MOVLW   0xff
04AA 2200      02224         ADDWFC  r0x11, F
04AC 2200      02225         ADDWFC  r0x12, F
04AE C000 FFE9 02226         MOVFF   r0x10, FSR0L
04B2 C000 FFF3 02227         MOVFF   r0x11, PRODL
04B6 5000      02228         MOVF    r0x12, W
04B8 EC00 F000 02229         CALL    __gptrget2
04BC 6E00      02230         MOVWF   r0x10
04BE CFF3 F000 02231         MOVFF   PRODL, r0x11
04C2 6AE5      02232         CLRF    POSTDEC1
04C4 0E61      02233         MOVLW   0x61
04C6 6EE5      02234         MOVWF   POSTDEC1
04C8 5000      02235         MOVF    r0x0c, W
04CA 6EE5      02236         MOVWF   POSTDEC1
04CC 5000      02237         MOVF    r0x0b, W
04CE 6EE5      02238         MOVWF   POSTDEC1
04D0 5000      02239         MOVF    r0x0e, W
04D2 6EE5      02240         MOVWF   POSTDEC1
04D4 5000      02241         MOVF    r0x0d, W
04D6 6EE5      02242         MOVWF   POSTDEC1
04D8 6AE5      02243         CLRF    POSTDEC1
04DA 6AE5      02244         CLRF    POSTDEC1
04DC 6AE5      02245         CLRF    POSTDEC1
04DE 0E08      02246         MOVLW   0x08
04E0 6EE5      02247         MOVWF   POSTDEC1
04E2 5000      02248         MOVF    r0x11, W
04E4 6EE5      02249         MOVWF   POSTDEC1
04E6 5000      02250         MOVF    r0x10, W
04E8 6EE5      02251         MOVWF   POSTDEC1
04EA 5000      02252         MOVF    r0x02, W
04EC 6EE5      02253         MOVWF   POSTDEC1
04EE 5000      02254         MOVF    r0x01, W
04F0 6EE5      02255         MOVWF   POSTDEC1
04F2 5000      02256         MOVF    r0x00, W
04F4 6EE5      02257         MOVWF   POSTDEC1
04F6 EC00 F000 02258         CALL    _printi
04FA 6E00      02259         MOVWF   r0x10
04FC CFF3 F000 02260         MOVFF   PRODL, r0x11
0500 0E0F      02261         MOVLW   0x0f
0502 26E1      02262         ADDWF   FSR1L, F
0504 5000      02263         MOVF    r0x10, W
0506 2600      02264         ADDWF   r0x09, F
0508 5000      02265         MOVF    r0x11, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
050A 2200      02266         ADDWFC  r0x0a, F
               02267 ;       .line   202; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
050C D000      02268         BRA     _00341_DS_
050E 02269 _00328_DS_:
               02270 ;       .line   204; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'u' )
050E 5000      02271         MOVF    r0x0f, W
0510 0A75      02272         XORLW   0x75
0512 E000      02273         BZ      _00402_DS_
0514 D000      02274         BRA     _00330_DS_
0516 02275 _00402_DS_:
               02276 ;       .line   206; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += printi (out, va_arg(args, int), 10, 0, width, pad, 'a');
0516 5000      02277         MOVF    r0x06, W
0518 0F02      02278         ADDLW   0x02
051A 6E00      02279         MOVWF   r0x10
051C 0E00      02280         MOVLW   0x00
051E 2000      02281         ADDWFC  r0x07, W
0520 6E00      02282         MOVWF   r0x11
0522 0E00      02283         MOVLW   0x00
0524 2000      02284         ADDWFC  r0x08, W
0526 6E00      02285         MOVWF   r0x12
0528 C000 F000 02286         MOVFF   r0x10, r0x06
052C C000 F000 02287         MOVFF   r0x11, r0x07
0530 C000 F000 02288         MOVFF   r0x12, r0x08
0534 0EFE      02289         MOVLW   0xfe
0536 2600      02290         ADDWF   r0x10, F
0538 0EFF      02291         MOVLW   0xff
053A 2200      02292         ADDWFC  r0x11, F
053C 2200      02293         ADDWFC  r0x12, F
053E C000 FFE9 02294         MOVFF   r0x10, FSR0L
0542 C000 FFF3 02295         MOVFF   r0x11, PRODL
0546 5000      02296         MOVF    r0x12, W
0548 EC00 F000 02297         CALL    __gptrget2
054C 6E00      02298         MOVWF   r0x10
054E CFF3 F000 02299         MOVFF   PRODL, r0x11
0552 6AE5      02300         CLRF    POSTDEC1
0554 0E61      02301         MOVLW   0x61
0556 6EE5      02302         MOVWF   POSTDEC1
0558 5000      02303         MOVF    r0x0c, W
055A 6EE5      02304         MOVWF   POSTDEC1
055C 5000      02305         MOVF    r0x0b, W
055E 6EE5      02306         MOVWF   POSTDEC1
0560 5000      02307         MOVF    r0x0e, W
0562 6EE5      02308         MOVWF   POSTDEC1
0564 5000      02309         MOVF    r0x0d, W
0566 6EE5      02310         MOVWF   POSTDEC1
0568 6AE5      02311         CLRF    POSTDEC1
056A 6AE5      02312         CLRF    POSTDEC1
056C 6AE5      02313         CLRF    POSTDEC1
056E 0E0A      02314         MOVLW   0x0a
0570 6EE5      02315         MOVWF   POSTDEC1
0572 5000      02316         MOVF    r0x11, W
0574 6EE5      02317         MOVWF   POSTDEC1
0576 5000      02318         MOVF    r0x10, W
0578 6EE5      02319         MOVWF   POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
057A 5000      02320         MOVF    r0x02, W
057C 6EE5      02321         MOVWF   POSTDEC1
057E 5000      02322         MOVF    r0x01, W
0580 6EE5      02323         MOVWF   POSTDEC1
0582 5000      02324         MOVF    r0x00, W
0584 6EE5      02325         MOVWF   POSTDEC1
0586 EC00 F000 02326         CALL    _printi
058A 6E00      02327         MOVWF   r0x10
058C CFF3 F000 02328         MOVFF   PRODL, r0x11
0590 0E0F      02329         MOVLW   0x0f
0592 26E1      02330         ADDWF   FSR1L, F
0594 5000      02331         MOVF    r0x10, W
0596 2600      02332         ADDWF   r0x09, F
0598 5000      02333         MOVF    r0x11, W
059A 2200      02334         ADDWFC  r0x0a, F
               02335 ;       .line   207; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
059C D000      02336         BRA     _00341_DS_
059E 02337 _00330_DS_:
               02338 ;       .line   209; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'c' )
059E 5000      02339         MOVF    r0x0f, W
05A0 0A63      02340         XORLW   0x63
05A2 E000      02341         BZ      _00404_DS_
05A4 D000      02342         BRA     _00332_DS_
05A6 02343 _00404_DS_:
               02344 ;       .line   212; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      scr[0] = (char)va_arg( args, int);
05A6 5000      02345         MOVF    r0x06, W
05A8 0F02      02346         ADDLW   0x02
05AA 6E00      02347         MOVWF   r0x10
05AC 0E00      02348         MOVLW   0x00
05AE 2000      02349         ADDWFC  r0x07, W
05B0 6E00      02350         MOVWF   r0x11
05B2 0E00      02351         MOVLW   0x00
05B4 2000      02352         ADDWFC  r0x08, W
05B6 6E00      02353         MOVWF   r0x12
05B8 C000 F000 02354         MOVFF   r0x10, r0x06
05BC C000 F000 02355         MOVFF   r0x11, r0x07
05C0 C000 F000 02356         MOVFF   r0x12, r0x08
05C4 0EFE      02357         MOVLW   0xfe
05C6 2600      02358         ADDWF   r0x10, F
05C8 0EFF      02359         MOVLW   0xff
05CA 2200      02360         ADDWFC  r0x11, F
05CC 2200      02361         ADDWFC  r0x12, F
05CE C000 FFE9 02362         MOVFF   r0x10, FSR0L
05D2 C000 FFF3 02363         MOVFF   r0x11, PRODL
05D6 5000      02364         MOVF    r0x12, W
05D8 EC00 F000 02365         CALL    __gptrget2
05DC 0000      02366         BANKSEL _print_scr_1_1
05DE 6F00      02367         MOVWF   _print_scr_1_1, B
               02368 ; removed redundant BANKSEL
               02369 ;       .line   214; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      scr[1] = '\0';
05E0 6B00      02370         CLRF    (_print_scr_1_1 + 1), B
               02371 ;       .line   215; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += prints (out, scr, width, pad);
05E2 5000      02372         MOVF    r0x0c, W
05E4 6EE5      02373         MOVWF   POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
05E6 5000      02374         MOVF    r0x0b, W
05E8 6EE5      02375         MOVWF   POSTDEC1
05EA 5000      02376         MOVF    r0x0e, W
05EC 6EE5      02377         MOVWF   POSTDEC1
05EE 5000      02378         MOVF    r0x0d, W
05F0 6EE5      02379         MOVWF   POSTDEC1
05F2 0E80      02380         MOVLW   0x80
05F4 6EE5      02381         MOVWF   POSTDEC1
05F6 0E00      02382         MOVLW   HIGH(_print_scr_1_1)
05F8 6EE5      02383         MOVWF   POSTDEC1
05FA 0E00      02384         MOVLW   LOW(_print_scr_1_1)
05FC 6EE5      02385         MOVWF   POSTDEC1
05FE 5000      02386         MOVF    r0x02, W
0600 6EE5      02387         MOVWF   POSTDEC1
0602 5000      02388         MOVF    r0x01, W
0604 6EE5      02389         MOVWF   POSTDEC1
0606 5000      02390         MOVF    r0x00, W
0608 6EE5      02391         MOVWF   POSTDEC1
060A EC00 F000 02392         CALL    _prints
060E 6E00      02393         MOVWF   r0x10
0610 CFF3 F000 02394         MOVFF   PRODL, r0x11
0614 0E0A      02395         MOVLW   0x0a
0616 26E1      02396         ADDWF   FSR1L, F
0618 5000      02397         MOVF    r0x10, W
061A 2600      02398         ADDWF   r0x09, F
061C 5000      02399         MOVF    r0x11, W
061E 2200      02400         ADDWFC  r0x0a, F
               02401 ;       .line   216; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
0620 D000      02402         BRA     _00341_DS_
0622 02403 _00332_DS_:
               02404 ;       .line   218; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( *format == 'f' )
0622 5000      02405         MOVF    r0x0f, W
0624 0A66      02406         XORLW   0x66
0626 E100      02407         BNZ     _00341_DS_
               02408 ;       .line   220; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      pc += prints (out, "not yet implemented\0", width, pad);
0628 5000      02409         MOVF    r0x0c, W
062A 6EE5      02410         MOVWF   POSTDEC1
062C 5000      02411         MOVF    r0x0b, W
062E 6EE5      02412         MOVWF   POSTDEC1
0630 5000      02413         MOVF    r0x0e, W
0632 6EE5      02414         MOVWF   POSTDEC1
0634 5000      02415         MOVF    r0x0d, W
0636 6EE5      02416         MOVWF   POSTDEC1
0638 0E00      02417         MOVLW   UPPER(__str_1)
063A 6EE5      02418         MOVWF   POSTDEC1
063C 0E00      02419         MOVLW   HIGH(__str_1)
063E 6EE5      02420         MOVWF   POSTDEC1
0640 0E00      02421         MOVLW   LOW(__str_1)
0642 6EE5      02422         MOVWF   POSTDEC1
0644 5000      02423         MOVF    r0x02, W
0646 6EE5      02424         MOVWF   POSTDEC1
0648 5000      02425         MOVF    r0x01, W
064A 6EE5      02426         MOVWF   POSTDEC1
064C 5000      02427         MOVF    r0x00, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
064E 6EE5      02428         MOVWF   POSTDEC1
0650 EC00 F000 02429         CALL    _prints
0654 6E00      02430         MOVWF   r0x0b
0656 CFF3 F000 02431         MOVFF   PRODL, r0x0c
065A 0E0A      02432         MOVLW   0x0a
065C 26E1      02433         ADDWF   FSR1L, F
065E 5000      02434         MOVF    r0x0b, W
0660 2600      02435         ADDWF   r0x09, F
0662 5000      02436         MOVF    r0x0c, W
0664 2200      02437         ADDWFC  r0x0a, F
               02438 ;       .line   221; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      continue;
0666 D000      02439         BRA     _00341_DS_
0668 02440 _00335_DS_:
               02441 ;       .line   227; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      printchar (out, *format);
0668 C000 FFE9 02442         MOVFF   r0x03, FSR0L
066C C000 FFF3 02443         MOVFF   r0x04, PRODL
0670 5000      02444         MOVF    r0x05, W
0672 EC00 F000 02445         CALL    __gptrget1
               02446 ; #     MOVWF   r0x0b
               02447 ; #     MOVF    r0x0b, W
0676 6EE5      02448         MOVWF   POSTDEC1
0678 5000      02449         MOVF    r0x02, W
067A 6EE5      02450         MOVWF   POSTDEC1
067C 5000      02451         MOVF    r0x01, W
067E 6EE5      02452         MOVWF   POSTDEC1
0680 5000      02453         MOVF    r0x00, W
0682 6EE5      02454         MOVWF   POSTDEC1
0684 EC00 F000 02455         CALL    _printchar
0688 0E04      02456         MOVLW   0x04
068A 26E1      02457         ADDWF   FSR1L, F
               02458 ;       .line   228; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      ++pc;
068C 2A00      02459         INCF    r0x09, F
068E B0D8      02460         BTFSC   STATUS, 0
0690 2A00      02461         INCF    r0x0a, F
0692 02462 _00341_DS_:
               02463 ;       .line   148; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      for (; *format != 0; ++format)
0692 2A00      02464         INCF    r0x03, F
0694 B0D8      02465         BTFSC   STATUS, 0
0696 2A00      02466         INCF    r0x04, F
0698 B0D8      02467         BTFSC   STATUS, 0
069A 2A00      02468         INCF    r0x05, F
069C EF00 F000 02469         GOTO    _00339_DS_
06A0 02470 _00342_DS_:
               02471 ;       .line   231; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (out) **out = '\0';
06A0 5000      02472         MOVF    r0x00, W
06A2 1000      02473         IORWF   r0x01, W
06A4 1000      02474         IORWF   r0x02, W
06A6 E000      02475         BZ      _00344_DS_
06A8 C000 FFE9 02476         MOVFF   r0x00, FSR0L
06AC C000 FFF3 02477         MOVFF   r0x01, PRODL
06B0 5000      02478         MOVF    r0x02, W
06B2 EC00 F000 02479         CALL    __gptrget3
06B6 6E00      02480         MOVWF   r0x00
06B8 CFF3 F000 02481         MOVFF   PRODL, r0x01
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
06BC CFF4 F000 02482         MOVFF   PRODH, r0x02
06C0 6AE5      02483         CLRF    POSTDEC1
06C2 C000 FFE9 02484         MOVFF   r0x00, FSR0L
06C6 C000 FFF3 02485         MOVFF   r0x01, PRODL
06CA 5000      02486         MOVF    r0x02, W
06CC EC00 F000 02487         CALL    __gptrput1
06D0 02488 _00344_DS_:
               02489 ;       .line   233; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      return pc;
06D0 C000 FFF3 02490         MOVFF   r0x0a, PRODL
06D4 5000      02491         MOVF    r0x09, W
06D6 CFE4 F000 02492         MOVFF   PREINC1, r0x13
06DA CFE4 F000 02493         MOVFF   PREINC1, r0x12
06DE CFE4 F000 02494         MOVFF   PREINC1, r0x11
06E2 CFE4 F000 02495         MOVFF   PREINC1, r0x10
06E6 CFE4 F000 02496         MOVFF   PREINC1, r0x0f
06EA CFE4 F000 02497         MOVFF   PREINC1, r0x0e
06EE CFE4 F000 02498         MOVFF   PREINC1, r0x0d
06F2 CFE4 F000 02499         MOVFF   PREINC1, r0x0c
06F6 CFE4 F000 02500         MOVFF   PREINC1, r0x0b
06FA CFE4 F000 02501         MOVFF   PREINC1, r0x0a
06FE CFE4 F000 02502         MOVFF   PREINC1, r0x09
0702 CFE4 F000 02503         MOVFF   PREINC1, r0x08
0706 CFE4 F000 02504         MOVFF   PREINC1, r0x07
070A CFE4 F000 02505         MOVFF   PREINC1, r0x06
070E CFE4 F000 02506         MOVFF   PREINC1, r0x05
0712 CFE4 F000 02507         MOVFF   PREINC1, r0x04
0716 CFE4 F000 02508         MOVFF   PREINC1, r0x03
071A CFE4 F000 02509         MOVFF   PREINC1, r0x02
071E CFE4 F000 02510         MOVFF   PREINC1, r0x01
0722 CFE4 F000 02511         MOVFF   PREINC1, r0x00
0726 CFE4 FFD9 02512         MOVFF   PREINC1, FSR2L
072A 0012      02513         RETURN  
               02514 
               02515 ; ; Starting pCode block
               02516 S_main__printi  code
0000 02517 _printi:
               02518 ;       .line   92; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
0000 CFD9 FFE5 02519         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02520         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02521         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02522         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02523         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02524         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02525         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02526         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02527         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02528         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 02529         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 02530         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 02531         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 02532         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 02533         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 02534         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 02535         MOVFF   r0x0e, POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0044 C000 FFE5 02536         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 02537         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 02538         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 02539         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 02540         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 02541         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 02542         MOVFF   r0x15, POSTDEC1
0060 C000 FFE5 02543         MOVFF   r0x16, POSTDEC1
0064 C000 FFE5 02544         MOVFF   r0x17, POSTDEC1
0068 C000 FFE5 02545         MOVFF   r0x18, POSTDEC1
006C C000 FFE5 02546         MOVFF   r0x19, POSTDEC1
0070 C000 FFE5 02547         MOVFF   r0x1a, POSTDEC1
0074 0E02      02548         MOVLW   0x02
0076 CFDB F000 02549         MOVFF   PLUSW2, r0x00
007A 0E03      02550         MOVLW   0x03
007C CFDB F000 02551         MOVFF   PLUSW2, r0x01
0080 0E04      02552         MOVLW   0x04
0082 CFDB F000 02553         MOVFF   PLUSW2, r0x02
0086 0E05      02554         MOVLW   0x05
0088 CFDB F000 02555         MOVFF   PLUSW2, r0x03
008C 0E06      02556         MOVLW   0x06
008E CFDB F000 02557         MOVFF   PLUSW2, r0x04
0092 0E07      02558         MOVLW   0x07
0094 CFDB F000 02559         MOVFF   PLUSW2, r0x05
0098 0E08      02560         MOVLW   0x08
009A CFDB F000 02561         MOVFF   PLUSW2, r0x06
009E 0E09      02562         MOVLW   0x09
00A0 CFDB F000 02563         MOVFF   PLUSW2, r0x07
00A4 0E0A      02564         MOVLW   0x0a
00A6 CFDB F000 02565         MOVFF   PLUSW2, r0x08
00AA 0E0B      02566         MOVLW   0x0b
00AC CFDB F000 02567         MOVFF   PLUSW2, r0x09
00B0 0E0C      02568         MOVLW   0x0c
00B2 CFDB F000 02569         MOVFF   PLUSW2, r0x0a
00B6 0E0D      02570         MOVLW   0x0d
00B8 CFDB F000 02571         MOVFF   PLUSW2, r0x0b
00BC 0E0E      02572         MOVLW   0x0e
00BE CFDB F000 02573         MOVFF   PLUSW2, r0x0c
00C2 0E0F      02574         MOVLW   0x0f
00C4 CFDB F000 02575         MOVFF   PLUSW2, r0x0d
00C8 0E10      02576         MOVLW   0x10
00CA CFDB F000 02577         MOVFF   PLUSW2, r0x0e
               02578 ;       .line   96; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       int t, neg = 0, pc = 0;
00CE 6A00      02579         CLRF    r0x0f
00D0 6A00      02580         CLRF    r0x10
00D2 6A00      02581         CLRF    r0x11
00D4 6A00      02582         CLRF    r0x12
               02583 ;       .line   97; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       unsigned int u = i;
00D6 C000 F000 02584         MOVFF   r0x03, r0x13
00DA C000 F000 02585         MOVFF   r0x04, r0x14
               02586 ;       .line   99; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       if (i == 0)
00DE 5000      02587         MOVF    r0x03, W
00E0 1000      02588         IORWF   r0x04, W
00E2 E100      02589         BNZ     _00270_DS_
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               02590 ;       .line   101; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      print_buf[0] = '0';
00E4 0E30      02591         MOVLW   0x30
00E6 0000      02592         BANKSEL _printi_print_buf_1_1
00E8 6F00      02593         MOVWF   _printi_print_buf_1_1, B
               02594 ; removed redundant BANKSEL
               02595 ;       .line   102; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      print_buf[1] = '\0';
00EA 6B00      02596         CLRF    (_printi_print_buf_1_1 + 1), B
               02597 ;       .line   103; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      return prints (out, print_buf, width, pad);
00EC 5000      02598         MOVF    r0x0c, W
00EE 6EE5      02599         MOVWF   POSTDEC1
00F0 5000      02600         MOVF    r0x0b, W
00F2 6EE5      02601         MOVWF   POSTDEC1
00F4 5000      02602         MOVF    r0x0a, W
00F6 6EE5      02603         MOVWF   POSTDEC1
00F8 5000      02604         MOVF    r0x09, W
00FA 6EE5      02605         MOVWF   POSTDEC1
00FC 0E80      02606         MOVLW   0x80
00FE 6EE5      02607         MOVWF   POSTDEC1
0100 0E00      02608         MOVLW   HIGH(_printi_print_buf_1_1)
0102 6EE5      02609         MOVWF   POSTDEC1
0104 0E00      02610         MOVLW   LOW(_printi_print_buf_1_1)
0106 6EE5      02611         MOVWF   POSTDEC1
0108 5000      02612         MOVF    r0x02, W
010A 6EE5      02613         MOVWF   POSTDEC1
010C 5000      02614         MOVF    r0x01, W
010E 6EE5      02615         MOVWF   POSTDEC1
0110 5000      02616         MOVF    r0x00, W
0112 6EE5      02617         MOVWF   POSTDEC1
0114 EC00 F000 02618         CALL    _prints
0118 6E00      02619         MOVWF   r0x15
011A CFF3 F000 02620         MOVFF   PRODL, r0x16
011E 0E0A      02621         MOVLW   0x0a
0120 26E1      02622         ADDWF   FSR1L, F
0122 C000 FFF3 02623         MOVFF   r0x16, PRODL
0126 5000      02624         MOVF    r0x15, W
0128 D000      02625         BRA     _00286_DS_
012A 02626 _00270_DS_:
               02627 ;       .line   106; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (sg && b == 10 && i < 0)
012A 5000      02628         MOVF    r0x07, W
012C 1000      02629         IORWF   r0x08, W
012E E000      02630         BZ      _00272_DS_
0130 5000      02631         MOVF    r0x05, W
0132 0A0A      02632         XORLW   0x0a
0134 E100      02633         BNZ     _00299_DS_
0136 5000      02634         MOVF    r0x06, W
0138 E000      02635         BZ      _00300_DS_
013A 02636 _00299_DS_:
013A D000      02637         BRA     _00272_DS_
013C 02638 _00300_DS_:
013C 80D8      02639         BSF     STATUS, 0
013E AE00      02640         BTFSS   r0x04, 7
0140 90D8      02641         BCF     STATUS, 0
0142 E300      02642         BNC     _00272_DS_
               02643 ;       .line   108; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      neg = 1;
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0144 0E01      02644         MOVLW   0x01
0146 6E00      02645         MOVWF   r0x0f
0148 6A00      02646         CLRF    r0x10
               02647 ;       .line   109; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      u = -i;
014A 1C00      02648         COMF    r0x04, W
014C 6E00      02649         MOVWF   r0x14
014E 1C00      02650         COMF    r0x03, W
0150 6E00      02651         MOVWF   r0x13
0152 4A00      02652         INFSNZ  r0x13, F
0154 2A00      02653         INCF    r0x14, F
0156 02654 _00272_DS_:
               02655 ;       .line   112; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      s = print_buf + PRINT_BUF_LEN-1;
0156 0E00      02656         MOVLW   HIGH(_printi_print_buf_1_1 + 11)
0158 6E00      02657         MOVWF   r0x04
015A 0E00      02658         MOVLW   LOW(_printi_print_buf_1_1 + 11)
015C 6E00      02659         MOVWF   r0x03
015E 0E80      02660         MOVLW   0x80
0160 6E00      02661         MOVWF   r0x07
               02662 ;       .line   113; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      *s = '\0';
0162 6AE5      02663         CLRF    POSTDEC1
0164 C000 FFE9 02664         MOVFF   r0x03, FSR0L
0168 C000 FFF3 02665         MOVFF   r0x04, PRODL
016C EC00 F000 02666         CALL    __gptrput1
               02667 ;       .line   115; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      while (u)
0170 5000      02668         MOVF    r0x0d, W
0172 0FC6      02669         ADDLW   0xc6
0174 6E00      02670         MOVWF   r0x0d
0176 C000 F000 02671         MOVFF   r0x05, r0x0e
017A C000 F000 02672         MOVFF   r0x06, r0x15
017E C000 F000 02673         MOVFF   r0x03, r0x16
0182 C000 F000 02674         MOVFF   r0x04, r0x17
0186 C000 F000 02675         MOVFF   r0x07, r0x18
018A 02676 _00277_DS_:
018A 5000      02677         MOVF    r0x13, W
018C 1000      02678         IORWF   r0x14, W
018E E000      02679         BZ      _00298_DS_
               02680 ;       .line   117; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      t = u % b;
0190 5000      02681         MOVF    r0x15, W
0192 6EE5      02682         MOVWF   POSTDEC1
0194 5000      02683         MOVF    r0x0e, W
0196 6EE5      02684         MOVWF   POSTDEC1
0198 5000      02685         MOVF    r0x14, W
019A 6EE5      02686         MOVWF   POSTDEC1
019C 5000      02687         MOVF    r0x13, W
019E 6EE5      02688         MOVWF   POSTDEC1
01A0 EC00 F000 02689         CALL    __moduint
01A4 6E00      02690         MOVWF   r0x19
01A6 CFF3 F000 02691         MOVFF   PRODL, r0x1a
01AA 0E04      02692         MOVLW   0x04
01AC 26E1      02693         ADDWF   FSR1L, F
               02694 ;       .line   118; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( t >= 10 )
01AE 5000      02695         MOVF    r0x1a, W
01B0 0F80      02696         ADDLW   0x80
01B2 0F80      02697         ADDLW   0x80
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01B4 E100      02698         BNZ     _00302_DS_
01B6 0E0A      02699         MOVLW   0x0a
01B8 5C00      02700         SUBWF   r0x19, W
01BA 02701 _00302_DS_:
01BA E300      02702         BNC     _00276_DS_
               02703 ;       .line   119; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      t += letbase - '0' - 10;
01BC 5000      02704         MOVF    r0x0d, W
01BE 2600      02705         ADDWF   r0x19, F
01C0 02706 _00276_DS_:
               02707 ;       .line   120; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      *--s = t + '0';
01C0 0EFF      02708         MOVLW   0xff
01C2 2600      02709         ADDWF   r0x16, F
01C4 2200      02710         ADDWFC  r0x17, F
01C6 2200      02711         ADDWFC  r0x18, F
01C8 0E30      02712         MOVLW   0x30
01CA 2600      02713         ADDWF   r0x19, F
01CC C000 FFE5 02714         MOVFF   r0x19, POSTDEC1
01D0 C000 FFE9 02715         MOVFF   r0x16, FSR0L
01D4 C000 FFF3 02716         MOVFF   r0x17, PRODL
01D8 5000      02717         MOVF    r0x18, W
01DA EC00 F000 02718         CALL    __gptrput1
               02719 ;       .line   121; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      u /= b;
01DE 5000      02720         MOVF    r0x06, W
01E0 6EE5      02721         MOVWF   POSTDEC1
01E2 5000      02722         MOVF    r0x05, W
01E4 6EE5      02723         MOVWF   POSTDEC1
01E6 5000      02724         MOVF    r0x14, W
01E8 6EE5      02725         MOVWF   POSTDEC1
01EA 5000      02726         MOVF    r0x13, W
01EC 6EE5      02727         MOVWF   POSTDEC1
01EE EC00 F000 02728         CALL    __divuint
01F2 6E00      02729         MOVWF   r0x13
01F4 CFF3 F000 02730         MOVFF   PRODL, r0x14
01F8 0E04      02731         MOVLW   0x04
01FA 26E1      02732         ADDWF   FSR1L, F
01FC D000      02733         BRA     _00277_DS_
01FE 02734 _00298_DS_:
01FE C000 F000 02735         MOVFF   r0x16, r0x03
0202 C000 F000 02736         MOVFF   r0x17, r0x04
0206 C000 F000 02737         MOVFF   r0x18, r0x07
               02738 ;       .line   124; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if (neg)
020A 5000      02739         MOVF    r0x0f, W
020C 1000      02740         IORWF   r0x10, W
020E E000      02741         BZ      _00285_DS_
               02742 ;       .line   126; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      if( width && (pad & PAD_ZERO) )
0210 5000      02743         MOVF    r0x09, W
0212 1000      02744         IORWF   r0x0a, W
0214 E000      02745         BZ      _00281_DS_
0216 A200      02746         BTFSS   r0x0b, 1
0218 D000      02747         BRA     _00281_DS_
               02748 ;       .line   128; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      printchar (out, '-');
021A 0E2D      02749         MOVLW   0x2d
021C 6EE5      02750         MOVWF   POSTDEC1
021E 5000      02751         MOVF    r0x02, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0220 6EE5      02752         MOVWF   POSTDEC1
0222 5000      02753         MOVF    r0x01, W
0224 6EE5      02754         MOVWF   POSTDEC1
0226 5000      02755         MOVF    r0x00, W
0228 6EE5      02756         MOVWF   POSTDEC1
022A EC00 F000 02757         CALL    _printchar
022E 0E04      02758         MOVLW   0x04
0230 26E1      02759         ADDWF   FSR1L, F
               02760 ;       .line   129; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      ++pc;
0232 0E01      02761         MOVLW   0x01
0234 6E00      02762         MOVWF   r0x11
0236 6A00      02763         CLRF    r0x12
               02764 ;       .line   130; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      --width;
0238 0EFF      02765         MOVLW   0xff
023A 2600      02766         ADDWF   r0x09, F
023C A0D8      02767         BTFSS   STATUS, 0
023E 0600      02768         DECF    r0x0a, F
0240 D000      02769         BRA     _00285_DS_
0242 02770 _00281_DS_:
               02771 ;       .line   134; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      *--s = '-';
0242 0EFF      02772         MOVLW   0xff
0244 2600      02773         ADDWF   r0x03, F
0246 2200      02774         ADDWFC  r0x04, F
0248 2200      02775         ADDWFC  r0x07, F
024A 0E2D      02776         MOVLW   0x2d
024C 6EE5      02777         MOVWF   POSTDEC1
024E C000 FFE9 02778         MOVFF   r0x03, FSR0L
0252 C000 FFF3 02779         MOVFF   r0x04, PRODL
0256 5000      02780         MOVF    r0x07, W
0258 EC00 F000 02781         CALL    __gptrput1
025C 02782 _00285_DS_:
               02783 ;       .line   138; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c      return pc + prints (out, s, width, pad);
025C 5000      02784         MOVF    r0x0c, W
025E 6EE5      02785         MOVWF   POSTDEC1
0260 5000      02786         MOVF    r0x0b, W
0262 6EE5      02787         MOVWF   POSTDEC1
0264 5000      02788         MOVF    r0x0a, W
0266 6EE5      02789         MOVWF   POSTDEC1
0268 5000      02790         MOVF    r0x09, W
026A 6EE5      02791         MOVWF   POSTDEC1
026C 5000      02792         MOVF    r0x07, W
026E 6EE5      02793         MOVWF   POSTDEC1
0270 5000      02794         MOVF    r0x04, W
0272 6EE5      02795         MOVWF   POSTDEC1
0274 5000      02796         MOVF    r0x03, W
0276 6EE5      02797         MOVWF   POSTDEC1
0278 5000      02798         MOVF    r0x02, W
027A 6EE5      02799         MOVWF   POSTDEC1
027C 5000      02800         MOVF    r0x01, W
027E 6EE5      02801         MOVWF   POSTDEC1
0280 5000      02802         MOVF    r0x00, W
0282 6EE5      02803         MOVWF   POSTDEC1
0284 EC00 F000 02804         CALL    _prints
0288 6E00      02805         MOVWF   r0x00
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
028A CFF3 F000 02806         MOVFF   PRODL, r0x01
028E 0E0A      02807         MOVLW   0x0a
0290 26E1      02808         ADDWF   FSR1L, F
0292 5000      02809         MOVF    r0x00, W
0294 2600      02810         ADDWF   r0x11, F
0296 5000      02811         MOVF    r0x01, W
0298 2200      02812         ADDWFC  r0x12, F
029A C000 FFF3 02813         MOVFF   r0x12, PRODL
029E 5000      02814         MOVF    r0x11, W
02A0 02815 _00286_DS_:
02A0 CFE4 F000 02816         MOVFF   PREINC1, r0x1a
02A4 CFE4 F000 02817         MOVFF   PREINC1, r0x19
02A8 CFE4 F000 02818         MOVFF   PREINC1, r0x18
02AC CFE4 F000 02819         MOVFF   PREINC1, r0x17
02B0 CFE4 F000 02820         MOVFF   PREINC1, r0x16
02B4 CFE4 F000 02821         MOVFF   PREINC1, r0x15
02B8 CFE4 F000 02822         MOVFF   PREINC1, r0x14
02BC CFE4 F000 02823         MOVFF   PREINC1, r0x13
02C0 CFE4 F000 02824         MOVFF   PREINC1, r0x12
02C4 CFE4 F000 02825         MOVFF   PREINC1, r0x11
02C8 CFE4 F000 02826         MOVFF   PREINC1, r0x10
02CC CFE4 F000 02827         MOVFF   PREINC1, r0x0f
02D0 CFE4 F000 02828         MOVFF   PREINC1, r0x0e
02D4 CFE4 F000 02829         MOVFF   PREINC1, r0x0d
02D8 CFE4 F000 02830         MOVFF   PREINC1, r0x0c
02DC CFE4 F000 02831         MOVFF   PREINC1, r0x0b
02E0 CFE4 F000 02832         MOVFF   PREINC1, r0x0a
02E4 CFE4 F000 02833         MOVFF   PREINC1, r0x09
02E8 CFE4 F000 02834         MOVFF   PREINC1, r0x08
02EC CFE4 F000 02835         MOVFF   PREINC1, r0x07
02F0 CFE4 F000 02836         MOVFF   PREINC1, r0x06
02F4 CFE4 F000 02837         MOVFF   PREINC1, r0x05
02F8 CFE4 F000 02838         MOVFF   PREINC1, r0x04
02FC CFE4 F000 02839         MOVFF   PREINC1, r0x03
0300 CFE4 F000 02840         MOVFF   PREINC1, r0x02
0304 CFE4 F000 02841         MOVFF   PREINC1, r0x01
0308 CFE4 F000 02842         MOVFF   PREINC1, r0x00
030C CFE4 FFD9 02843         MOVFF   PREINC1, FSR2L
0310 0012      02844         RETURN  
               02845 
               02846 ; ; Starting pCode block
               02847 S_main__prints  code
0000 02848 _prints:
               02849 ;       .line   53; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       static int prints(char **out, const char *string, int width, int pad)
0000 CFD9 FFE5 02850         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 02851         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 02852         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 02853         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 02854         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 02855         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 02856         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 02857         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 02858         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 02859         MOVFF   r0x07, POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0028 C000 FFE5 02860         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 02861         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 02862         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 02863         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 02864         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 02865         MOVFF   r0x0e, POSTDEC1
0040 C000 FFE5 02866         MOVFF   r0x0f, POSTDEC1
0044 C000 FFE5 02867         MOVFF   r0x10, POSTDEC1
0048 C000 FFE5 02868         MOVFF   r0x11, POSTDEC1
004C C000 FFE5 02869         MOVFF   r0x12, POSTDEC1
0050 C000 FFE5 02870         MOVFF   r0x13, POSTDEC1
0054 0E02      02871         MOVLW   0x02
0056 CFDB F000 02872         MOVFF   PLUSW2, r0x00
005A 0E03      02873         MOVLW   0x03
005C CFDB F000 02874         MOVFF   PLUSW2, r0x01
0060 0E04      02875         MOVLW   0x04
0062 CFDB F000 02876         MOVFF   PLUSW2, r0x02
0066 0E05      02877         MOVLW   0x05
0068 CFDB F000 02878         MOVFF   PLUSW2, r0x03
006C 0E06      02879         MOVLW   0x06
006E CFDB F000 02880         MOVFF   PLUSW2, r0x04
0072 0E07      02881         MOVLW   0x07
0074 CFDB F000 02882         MOVFF   PLUSW2, r0x05
0078 0E08      02883         MOVLW   0x08
007A CFDB F000 02884         MOVFF   PLUSW2, r0x06
007E 0E09      02885         MOVLW   0x09
0080 CFDB F000 02886         MOVFF   PLUSW2, r0x07
0084 0E0A      02887         MOVLW   0x0a
0086 CFDB F000 02888         MOVFF   PLUSW2, r0x08
008A 0E0B      02889         MOVLW   0x0b
008C CFDB F000 02890         MOVFF   PLUSW2, r0x09
               02891 ;       .line   55; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       int pc = 0;
0090 6A00      02892         CLRF    r0x0a
0092 6A00      02893         CLRF    r0x0b
               02894 ;       .line   56; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       int padchar = ' ';
0094 0E20      02895         MOVLW   0x20
0096 6E00      02896         MOVWF   r0x0c
               02897 ;       .line   60; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       if (width > 0)
0098 5000      02898         MOVF    r0x07, W
009A 0F80      02899         ADDLW   0x80
009C 0F80      02900         ADDLW   0x80
009E E100      02901         BNZ     _00259_DS_
00A0 0E01      02902         MOVLW   0x01
00A2 5C00      02903         SUBWF   r0x06, W
00A4 02904 _00259_DS_:
00A4 E300      02905         BNC     _00223_DS_
               02906 ;       .line   62; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       for (ptr = string; *ptr; ++ptr) ++len;
00A6 6A00      02907         CLRF    r0x0e
00A8 6A00      02908         CLRF    r0x0f
00AA C000 F000 02909         MOVFF   r0x03, r0x10
00AE C000 F000 02910         MOVFF   r0x04, r0x11
00B2 C000 F000 02911         MOVFF   r0x05, r0x12
00B6 02912 _00226_DS_:
00B6 C000 FFE9 02913         MOVFF   r0x10, FSR0L
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00BA C000 FFF3 02914         MOVFF   r0x11, PRODL
00BE 5000      02915         MOVF    r0x12, W
00C0 EC00 F000 02916         CALL    __gptrget1
00C4 6E00      02917         MOVWF   r0x13
00C6 5000      02918         MOVF    r0x13, W
00C8 E000      02919         BZ      _00229_DS_
00CA 2A00      02920         INCF    r0x0e, F
00CC B0D8      02921         BTFSC   STATUS, 0
00CE 2A00      02922         INCF    r0x0f, F
00D0 2A00      02923         INCF    r0x10, F
00D2 B0D8      02924         BTFSC   STATUS, 0
00D4 2A00      02925         INCF    r0x11, F
00D6 B0D8      02926         BTFSC   STATUS, 0
00D8 2A00      02927         INCF    r0x12, F
00DA D000      02928         BRA     _00226_DS_
00DC 02929 _00229_DS_:
               02930 ;       .line   63; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       if (len >= width) width = 0;
00DC 5000      02931         MOVF    r0x0f, W
00DE 0F80      02932         ADDLW   0x80
00E0 6EF3      02933         MOVWF   PRODL
00E2 5000      02934         MOVF    r0x07, W
00E4 0F80      02935         ADDLW   0x80
00E6 5CF3      02936         SUBWF   PRODL, W
00E8 E100      02937         BNZ     _00260_DS_
00EA 5000      02938         MOVF    r0x06, W
00EC 5C00      02939         SUBWF   r0x0e, W
00EE 02940 _00260_DS_:
00EE E300      02941         BNC     _00218_DS_
00F0 6A00      02942         CLRF    r0x06
00F2 6A00      02943         CLRF    r0x07
00F4 D000      02944         BRA     _00219_DS_
00F6 02945 _00218_DS_:
               02946 ;       .line   64; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       else width -= len;
00F6 5000      02947         MOVF    r0x0e, W
00F8 5E00      02948         SUBWF   r0x06, F
00FA 5000      02949         MOVF    r0x0f, W
00FC 5A00      02950         SUBWFB  r0x07, F
00FE 02951 _00219_DS_:
               02952 ;       .line   65; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       if (pad & PAD_ZERO) padchar = '0';
00FE A200      02953         BTFSS   r0x08, 1
0100 D000      02954         BRA     _00223_DS_
0102 0E30      02955         MOVLW   0x30
0104 6E00      02956         MOVWF   r0x0c
0106 02957 _00223_DS_:
               02958 ;       .line   67; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       if (!(pad & PAD_RIGHT))
0106 B000      02959         BTFSC   r0x08, 0
0108 D000      02960         BRA     _00252_DS_
010A 6A00      02961         CLRF    r0x08
010C 6A00      02962         CLRF    r0x09
010E C000 F000 02963         MOVFF   r0x06, r0x0e
0112 C000 F000 02964         MOVFF   r0x07, r0x0f
0116 02965 _00230_DS_:
               02966 ;       .line   69; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       for ( ; width > 0; --width)
0116 5000      02967         MOVF    r0x0f, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0118 0F80      02968         ADDLW   0x80
011A 0F80      02969         ADDLW   0x80
011C E100      02970         BNZ     _00263_DS_
011E 0E01      02971         MOVLW   0x01
0120 5C00      02972         SUBWF   r0x0e, W
0122 02973 _00263_DS_:
0122 E300      02974         BNC     _00256_DS_
               02975 ; #     MOVF    r0x0c, W
               02976 ; #     MOVWF   r0x10
               02977 ; #     MOVF    r0x10, W
               02978 ;       .line   71; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       printchar (out, padchar);
0124 5000      02979         MOVF    r0x0c, W
0126 6EE5      02980         MOVWF   POSTDEC1
0128 5000      02981         MOVF    r0x02, W
012A 6EE5      02982         MOVWF   POSTDEC1
012C 5000      02983         MOVF    r0x01, W
012E 6EE5      02984         MOVWF   POSTDEC1
0130 5000      02985         MOVF    r0x00, W
0132 6EE5      02986         MOVWF   POSTDEC1
0134 EC00 F000 02987         CALL    _printchar
0138 0E04      02988         MOVLW   0x04
013A 26E1      02989         ADDWF   FSR1L, F
               02990 ;       .line   72; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       ++pc;
013C 2A00      02991         INCF    r0x08, F
013E B0D8      02992         BTFSC   STATUS, 0
0140 2A00      02993         INCF    r0x09, F
               02994 ;       .line   69; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       for ( ; width > 0; --width)
0142 0EFF      02995         MOVLW   0xff
0144 2600      02996         ADDWF   r0x0e, F
0146 A0D8      02997         BTFSS   STATUS, 0
0148 0600      02998         DECF    r0x0f, F
014A D000      02999         BRA     _00230_DS_
014C 03000 _00256_DS_:
014C C000 F000 03001         MOVFF   r0x08, r0x0a
0150 C000 F000 03002         MOVFF   r0x09, r0x0b
0154 C000 F000 03003         MOVFF   r0x0e, r0x06
0158 C000 F000 03004         MOVFF   r0x0f, r0x07
015C 03005 _00252_DS_:
015C C000 F000 03006         MOVFF   r0x0a, r0x08
0160 C000 F000 03007         MOVFF   r0x0b, r0x09
0164 03008 _00234_DS_:
               03009 ;       .line   75; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       for ( ; *string ; ++string)
0164 C000 FFE9 03010         MOVFF   r0x03, FSR0L
0168 C000 FFF3 03011         MOVFF   r0x04, PRODL
016C 5000      03012         MOVF    r0x05, W
016E EC00 F000 03013         CALL    __gptrget1
0172 6E00      03014         MOVWF   r0x0a
0174 5000      03015         MOVF    r0x0a, W
0176 E000      03016         BZ      _00254_DS_
               03017 ;       .line   77; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       printchar (out, *string);
0178 5000      03018         MOVF    r0x0a, W
017A 6EE5      03019         MOVWF   POSTDEC1
017C 5000      03020         MOVF    r0x02, W
017E 6EE5      03021         MOVWF   POSTDEC1
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0180 5000      03022         MOVF    r0x01, W
0182 6EE5      03023         MOVWF   POSTDEC1
0184 5000      03024         MOVF    r0x00, W
0186 6EE5      03025         MOVWF   POSTDEC1
0188 EC00 F000 03026         CALL    _printchar
018C 0E04      03027         MOVLW   0x04
018E 26E1      03028         ADDWF   FSR1L, F
               03029 ;       .line   78; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       ++pc;
0190 2A00      03030         INCF    r0x08, F
0192 B0D8      03031         BTFSC   STATUS, 0
0194 2A00      03032         INCF    r0x09, F
               03033 ;       .line   75; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       for ( ; *string ; ++string)
0196 2A00      03034         INCF    r0x03, F
0198 B0D8      03035         BTFSC   STATUS, 0
019A 2A00      03036         INCF    r0x04, F
019C B0D8      03037         BTFSC   STATUS, 0
019E 2A00      03038         INCF    r0x05, F
01A0 D000      03039         BRA     _00234_DS_
01A2 03040 _00254_DS_:
01A2 C000 F000 03041         MOVFF   r0x08, r0x03
01A6 C000 F000 03042         MOVFF   r0x09, r0x04
01AA C000 F000 03043         MOVFF   r0x06, r0x05
01AE C000 F000 03044         MOVFF   r0x07, r0x06
01B2 03045 _00238_DS_:
               03046 ;       .line   80; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       for ( ; width > 0; --width)
01B2 5000      03047         MOVF    r0x06, W
01B4 0F80      03048         ADDLW   0x80
01B6 0F80      03049         ADDLW   0x80
01B8 E100      03050         BNZ     _00264_DS_
01BA 0E01      03051         MOVLW   0x01
01BC 5C00      03052         SUBWF   r0x05, W
01BE 03053 _00264_DS_:
01BE E300      03054         BNC     _00241_DS_
               03055 ; #     MOVF    r0x0c, W
               03056 ; #     MOVWF   r0x07
               03057 ; #     MOVF    r0x07, W
               03058 ;       .line   82; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       printchar (out, padchar);
01C0 5000      03059         MOVF    r0x0c, W
01C2 6EE5      03060         MOVWF   POSTDEC1
01C4 5000      03061         MOVF    r0x02, W
01C6 6EE5      03062         MOVWF   POSTDEC1
01C8 5000      03063         MOVF    r0x01, W
01CA 6EE5      03064         MOVWF   POSTDEC1
01CC 5000      03065         MOVF    r0x00, W
01CE 6EE5      03066         MOVWF   POSTDEC1
01D0 EC00 F000 03067         CALL    _printchar
01D4 0E04      03068         MOVLW   0x04
01D6 26E1      03069         ADDWF   FSR1L, F
               03070 ;       .line   83; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       ++pc;
01D8 2A00      03071         INCF    r0x03, F
01DA B0D8      03072         BTFSC   STATUS, 0
01DC 2A00      03073         INCF    r0x04, F
               03074 ;       .line   80; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       for ( ; width > 0; --width)
01DE 0EFF      03075         MOVLW   0xff
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01E0 2600      03076         ADDWF   r0x05, F
01E2 A0D8      03077         BTFSS   STATUS, 0
01E4 0600      03078         DECF    r0x06, F
01E6 D000      03079         BRA     _00238_DS_
01E8 03080 _00241_DS_:
               03081 ;       .line   86; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       return pc;
01E8 C000 FFF3 03082         MOVFF   r0x04, PRODL
01EC 5000      03083         MOVF    r0x03, W
01EE CFE4 F000 03084         MOVFF   PREINC1, r0x13
01F2 CFE4 F000 03085         MOVFF   PREINC1, r0x12
01F6 CFE4 F000 03086         MOVFF   PREINC1, r0x11
01FA CFE4 F000 03087         MOVFF   PREINC1, r0x10
01FE CFE4 F000 03088         MOVFF   PREINC1, r0x0f
0202 CFE4 F000 03089         MOVFF   PREINC1, r0x0e
0206 CFE4 F000 03090         MOVFF   PREINC1, r0x0c
020A CFE4 F000 03091         MOVFF   PREINC1, r0x0b
020E CFE4 F000 03092         MOVFF   PREINC1, r0x0a
0212 CFE4 F000 03093         MOVFF   PREINC1, r0x09
0216 CFE4 F000 03094         MOVFF   PREINC1, r0x08
021A CFE4 F000 03095         MOVFF   PREINC1, r0x07
021E CFE4 F000 03096         MOVFF   PREINC1, r0x06
0222 CFE4 F000 03097         MOVFF   PREINC1, r0x05
0226 CFE4 F000 03098         MOVFF   PREINC1, r0x04
022A CFE4 F000 03099         MOVFF   PREINC1, r0x03
022E CFE4 F000 03100         MOVFF   PREINC1, r0x02
0232 CFE4 F000 03101         MOVFF   PREINC1, r0x01
0236 CFE4 F000 03102         MOVFF   PREINC1, r0x00
023A CFE4 FFD9 03103         MOVFF   PREINC1, FSR2L
023E 0012      03104         RETURN  
               03105 
               03106 ; ; Starting pCode block
               03107 S_main__printchar       code
0000 03108 _printchar:
               03109 ;       .line   34; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       static void printchar(char **str, char c)
0000 CFD9 FFE5 03110         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03111         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03112         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03113         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03114         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03115         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03116         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03117         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03118         MOVFF   r0x06, POSTDEC1
0024 0E02      03119         MOVLW   0x02
0026 CFDB F000 03120         MOVFF   PLUSW2, r0x00
002A 0E03      03121         MOVLW   0x03
002C CFDB F000 03122         MOVFF   PLUSW2, r0x01
0030 0E04      03123         MOVLW   0x04
0032 CFDB F000 03124         MOVFF   PLUSW2, r0x02
0036 0E05      03125         MOVLW   0x05
0038 CFDB F000 03126         MOVFF   PLUSW2, r0x03
               03127 ;       .line   38; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       if (str)
003C 5000      03128         MOVF    r0x00, W
003E 1000      03129         IORWF   r0x01, W
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0040 1000      03130         IORWF   r0x02, W
0042 E000      03131         BZ      _00207_DS_
               03132 ;       .line   40; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       **str = c;
0044 C000 FFE9 03133         MOVFF   r0x00, FSR0L
0048 C000 FFF3 03134         MOVFF   r0x01, PRODL
004C 5000      03135         MOVF    r0x02, W
004E EC00 F000 03136         CALL    __gptrget3
0052 6E00      03137         MOVWF   r0x04
0054 CFF3 F000 03138         MOVFF   PRODL, r0x05
0058 CFF4 F000 03139         MOVFF   PRODH, r0x06
005C C000 FFE5 03140         MOVFF   r0x03, POSTDEC1
0060 C000 FFE9 03141         MOVFF   r0x04, FSR0L
0064 C000 FFF3 03142         MOVFF   r0x05, PRODL
0068 5000      03143         MOVF    r0x06, W
006A EC00 F000 03144         CALL    __gptrput1
               03145 ;       .line   41; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       ++(*str);
006E 2A00      03146         INCF    r0x04, F
0070 B0D8      03147         BTFSC   STATUS, 0
0072 2A00      03148         INCF    r0x05, F
0074 B0D8      03149         BTFSC   STATUS, 0
0076 2A00      03150         INCF    r0x06, F
0078 C000 FFE5 03151         MOVFF   r0x04, POSTDEC1
007C C000 FFF4 03152         MOVFF   r0x05, PRODH
0080 C000 FFF6 03153         MOVFF   r0x06, TBLPTRL
0084 C000 FFE9 03154         MOVFF   r0x00, FSR0L
0088 C000 FFF3 03155         MOVFF   r0x01, PRODL
008C 5000      03156         MOVF    r0x02, W
008E EC00 F000 03157         CALL    __gptrput3
0092 D000      03158         BRA     _00209_DS_
0094 03159 _00207_DS_:
               03160 ;       .line   46; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/stdlib.c       putchar(c);
0094 5000      03161         MOVF    r0x03, W
0096 6EE5      03162         MOVWF   POSTDEC1
0098 CFF2 FFE5 03163         MOVFF   INTCON, POSTDEC1
009C 9EF2      03164         BCF     INTCON, 7
009E 0005      03165         PUSH    
00A0 0E00      03166         MOVLW   LOW(_00212_DS_)
00A2 6EFD      03167         MOVWF   TOSL
00A4 0E00      03168         MOVLW   HIGH(_00212_DS_)
00A6 6EFE      03169         MOVWF   TOSH
00A8 0E00      03170         MOVLW   UPPER(_00212_DS_)
00AA 6EFF      03171         MOVWF   TOSU
00AC 50E4      03172         MOVF    PREINC1, W
00AE 6EF2      03173         MOVWF   INTCON
00B0 C000 FFFB 03174         MOVFF   (_putchar + 2), PCLATU
00B4 C000 FFFA 03175         MOVFF   (_putchar + 1), PCLATH
00B8 0000      03176         BANKSEL _putchar
00BA 5100      03177         MOVF    _putchar, W, B
00BC 6EF9      03178         MOVWF   PCL
00BE 03179 _00212_DS_:
00BE 0E01      03180         MOVLW   0x01
00C0 26E1      03181         ADDWF   FSR1L, F
00C2 03182 _00209_DS_:
00C2 CFE4 F000 03183         MOVFF   PREINC1, r0x06
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C6 CFE4 F000 03184         MOVFF   PREINC1, r0x05
00CA CFE4 F000 03185         MOVFF   PREINC1, r0x04
00CE CFE4 F000 03186         MOVFF   PREINC1, r0x03
00D2 CFE4 F000 03187         MOVFF   PREINC1, r0x02
00D6 CFE4 F000 03188         MOVFF   PREINC1, r0x01
00DA CFE4 F000 03189         MOVFF   PREINC1, r0x00
00DE CFE4 FFD9 03190         MOVFF   PREINC1, FSR2L
00E2 0012      03191         RETURN  
               03192 
               03193 ; ; Starting pCode block
               03194 S_main__Millis  code
0000 03195 _Millis:
               03196 ;       .line   24; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/millis.c       return(_millis);
0000 C000 FFE9 03197         MOVFF   (__millis + 3), FSR0L
0004 C000 FFF4 03198         MOVFF   (__millis + 2), PRODH
0008 C000 FFF3 03199         MOVFF   (__millis + 1), PRODL
000C 0000      03200         BANKSEL __millis
000E 5100      03201         MOVF    __millis, W, B
0010 0012      03202         RETURN  
               03203 
               03204 ; ; Starting pCode block
               03205 S_main__millis_init     code
0000 03206 _millis_init:
               03207 ;       .line   16; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/millis.c       intUsed[INT_TMR0] = INT_USED;
0000 0E01      03208         MOVLW   0x01
0002 0000      03209         BANKSEL _intUsed
0004 6F00      03210         MOVWF   _intUsed, B
               03211 ;       .line   17; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/millis.c       T0CON = 0x80;           // TMR0 on, 16 bits counter, prescaler=2
0006 0E80      03212         MOVLW   0x80
0008 6E00      03213         MOVWF   _T0CON
               03214 ;       .line   18; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/millis.c       INTCON |= 0xA0;         // set GIE and TMR0IE
000A 0EA0      03215         MOVLW   0xa0
000C 1200      03216         IORWF   _INTCON, F
000E 0000      03217         BANKSEL __millis
               03218 ;       .line   19; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/millis.c       _millis = 0;
0010 6B00      03219         CLRF    __millis, B
               03220 ; removed redundant BANKSEL
0012 6B00      03221         CLRF    (__millis + 1), B
               03222 ; removed redundant BANKSEL
0014 6B00      03223         CLRF    (__millis + 2), B
               03224 ; removed redundant BANKSEL
0016 6B00      03225         CLRF    (__millis + 3), B
0018 0012      03226         RETURN  
               03227 
               03228 ; ; Starting pCode block
               03229 S_main__userinterrupt   code
0000 03230 _userinterrupt:
               03231 ;       .line   1130; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c  int_start();
0000 EC00 F000 03232         CALL    _int_start
0004 0012      03233         RETURN  
               03234 
               03235 ; ; Starting pCode block
               03236 S_main__userhighinterrupt       code
0000 03237 _userhighinterrupt:
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               03238 ;       .line   956; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   }
0000 0012      03239         RETURN  
               03240 
               03241 ; ; Starting pCode block
               03242 S_main__int_stop        code
0000 03243 _int_stop:
               03244 ;       .line   346; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   }
0000 0012      03245         RETURN  
               03246 
               03247 ; ; Starting pCode block
               03248 S_main__int_start       code
0000 03249 _int_start:
               03250 ;       .line   320; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   }
0000 0012      03251         RETURN  
               03252 
               03253 ; ; Starting pCode block
               03254 S_main__int_init        code
0000 03255 _int_init:
               03256 ;       .line   284; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   void int_init()
0000 C000 FFE5 03257         MOVFF   r0x00, POSTDEC1
               03258 ;       .line   288; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   RCONbits.IPEN = 1;                                      // Enable HP/LP interrupts
0004 8E00      03259         BSF     _RCONbits, 7
               03260 ;       .line   289; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   INTCONbits.GIEH = 1;                            // Enable HP interrupts
0006 8E00      03261         BSF     _INTCONbits, 7
               03262 ;       .line   290; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   INTCONbits.GIEL = 1;                            // Enable LP interrupts
0008 8C00      03263         BSF     _INTCONbits, 6
               03264 ;       .line   292; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   for (i = 0; i < INT_NUM; i++)           // Disable all interrupts
000A 6A00      03265         CLRF    r0x00
000C 03266 _00162_DS_:
000C 0E14      03267         MOVLW   0x14
000E 5C00      03268         SUBWF   r0x00, W
0010 E200      03269         BC      _00166_DS_
               03270 ;       .line   293; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   detachInterrupt(i);
0012 5000      03271         MOVF    r0x00, W
0014 6EE5      03272         MOVWF   POSTDEC1
0016 EC00 F000 03273         CALL    _detachInterrupt
001A 2AE1      03274         INCF    FSR1L, F
               03275 ;       .line   292; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   for (i = 0; i < INT_NUM; i++)           // Disable all interrupts
001C 2A00      03276         INCF    r0x00, F
001E D000      03277         BRA     _00162_DS_
0020 03278 _00166_DS_:
0020 CFE4 F000 03279         MOVFF   PREINC1, r0x00
0024 0012      03280         RETURN  
               03281 
               03282 ; ; Starting pCode block
               03283 S_main__detachInterrupt code
0000 03284 _detachInterrupt:
               03285 ;       .line   206; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   void detachInterrupt(u8 inter)
0000 CFD9 FFE5 03286         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03287         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03288         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03289         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03290         MOVFF   r0x02, POSTDEC1
0014 0E02      03291         MOVLW   0x02
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0016 CFDB F000 03292         MOVFF   PLUSW2, r0x00
               03293 ;       .line   208; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   intUsed[inter] = INT_NOT_USED;  // This interrupt is no longer used
001A 0E00      03294         MOVLW   LOW(_intUsed)
001C 2400      03295         ADDWF   r0x00, W
001E 6E00      03296         MOVWF   r0x01
0020 6A00      03297         CLRF    r0x02
0022 0E00      03298         MOVLW   HIGH(_intUsed)
0024 2200      03299         ADDWFC  r0x02, F
0026 C000 FFE9 03300         MOVFF   r0x01, FSR0L
002A C000 FFEA 03301         MOVFF   r0x02, FSR0H
002E 6AEF      03302         CLRF    INDF0
               03303 ;       .line   210; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   switch(inter)
0030 0E13      03304         MOVLW   0x13
0032 5C00      03305         SUBWF   r0x00, W
0034 B0D8      03306         BTFSC   STATUS, 0
0036 D000      03307         BRA     _00153_DS_
0038 C000 FFE5 03308         MOVFF   r0x03, POSTDEC1
003C C000 FFE5 03309         MOVFF   r0x04, POSTDEC1
0040 6A00      03310         CLRF    r0x04
0042 3400      03311         RLCF    r0x00, W
0044 3600      03312         RLCF    r0x04, F
0046 34E8      03313         RLCF    WREG, W
0048 3600      03314         RLCF    r0x04, F
004A 0BFC      03315         ANDLW   0xfc
004C 6E00      03316         MOVWF   r0x03
004E 0E00      03317         MOVLW   UPPER(_00157_DS_)
0050 6EFB      03318         MOVWF   PCLATU
0052 0E00      03319         MOVLW   HIGH(_00157_DS_)
0054 6EFA      03320         MOVWF   PCLATH
0056 0E00      03321         MOVLW   LOW(_00157_DS_)
0058 2600      03322         ADDWF   r0x03, F
005A 5000      03323         MOVF    r0x04, W
005C 22FA      03324         ADDWFC  PCLATH, F
005E B0D8      03325         BTFSC   STATUS, 0
0060 2AFB      03326         INCF    PCLATU, F
0062 5000      03327         MOVF    r0x03, W
0064 CFE4 F000 03328         MOVFF   PREINC1, r0x04
0068 CFE4 F000 03329         MOVFF   PREINC1, r0x03
006C 6EF9      03330         MOVWF   PCL
006E 03331 _00157_DS_:
006E EF00 F000 03332         GOTO    _00136_DS_
0072 EF00 F000 03333         GOTO    _00137_DS_
0076 EF00 F000 03334         GOTO    _00138_DS_
007A EF00 F000 03335         GOTO    _00139_DS_
007E EF00 F000 03336         GOTO    _00133_DS_
0082 EF00 F000 03337         GOTO    _00134_DS_
0086 EF00 F000 03338         GOTO    _00135_DS_
008A EF00 F000 03339         GOTO    _00140_DS_
008E EF00 F000 03340         GOTO    _00145_DS_
0092 EF00 F000 03341         GOTO    _00146_DS_
0096 EF00 F000 03342         GOTO    _00148_DS_
009A EF00 F000 03343         GOTO    _00143_DS_
009E EF00 F000 03344         GOTO    _00144_DS_
00A2 EF00 F000 03345         GOTO    _00142_DS_
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A6 EF00 F000 03346         GOTO    _00147_DS_
00AA EF00 F000 03347         GOTO    _00149_DS_
00AE EF00 F000 03348         GOTO    _00151_DS_
00B2 EF00 F000 03349         GOTO    _00150_DS_
00B6 EF00 F000 03350         GOTO    _00141_DS_
00BA 03351 _00133_DS_:
               03352 ;       .line   213; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   INTCONbits.INT0IE = INT_DISABLE;
00BA 9800      03353         BCF     _INTCONbits, 4
               03354 ;       .line   214; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00BC D000      03355         BRA     _00153_DS_
00BE 03356 _00134_DS_:
               03357 ;       .line   216; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   INTCON3bits.INT1IE = INT_DISABLE;
00BE 9600      03358         BCF     _INTCON3bits, 3
               03359 ;       .line   217; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00C0 D000      03360         BRA     _00153_DS_
00C2 03361 _00135_DS_:
               03362 ;       .line   219; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   INTCON3bits.INT2IE = INT_DISABLE;
00C2 9800      03363         BCF     _INTCON3bits, 4
               03364 ;       .line   220; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00C4 D000      03365         BRA     _00153_DS_
00C6 03366 _00136_DS_:
               03367 ;       .line   222; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   INTCONbits.TMR0IE = INT_DISABLE;
00C6 9A00      03368         BCF     _INTCONbits, 5
               03369 ;       .line   223; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00C8 D000      03370         BRA     _00153_DS_
00CA 03371 _00137_DS_:
               03372 ;       .line   225; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE1bits.TMR1IE = INT_DISABLE;
00CA 9000      03373         BCF     _PIE1bits, 0
               03374 ;       .line   226; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00CC D000      03375         BRA     _00153_DS_
00CE 03376 _00138_DS_:
               03377 ;       .line   228; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE1bits.TMR2IE = INT_DISABLE;
00CE 9200      03378         BCF     _PIE1bits, 1
               03379 ;       .line   229; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00D0 D000      03380         BRA     _00153_DS_
00D2 03381 _00139_DS_:
               03382 ;       .line   231; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.TMR3IE = INT_DISABLE;
00D2 9200      03383         BCF     _PIE2bits, 1
               03384 ;       .line   232; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00D4 D000      03385         BRA     _00153_DS_
00D6 03386 _00140_DS_:
               03387 ;       .line   234; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   INTCONbits.RBIE = INT_DISABLE;
00D6 9600      03388         BCF     _INTCONbits, 3
               03389 ;       .line   235; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00D8 D000      03390         BRA     _00153_DS_
00DA 03391 _00141_DS_:
               03392 ;       .line   237; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.USBIE = INT_DISABLE;
00DA 9A00      03393         BCF     _PIE2bits, 5
               03394 ;       .line   238; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00DC D000      03395         BRA     _00153_DS_
00DE 03396 _00142_DS_:
               03397 ;       .line   240; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE1bits.ADIE = INT_DISABLE;
00DE 9C00      03398         BCF     _PIE1bits, 6
               03399 ;       .line   241; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00E0 D000      03400         BRA     _00153_DS_
00E2 03401 _00143_DS_:
               03402 ;       .line   243; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE1bits.RCIE = INT_DISABLE;
00E2 9A00      03403         BCF     _PIE1bits, 5
               03404 ;       .line   244; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00E4 D000      03405         BRA     _00153_DS_
00E6 03406 _00144_DS_:
               03407 ;       .line   246; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE1bits.TXIE = INT_DISABLE;
00E6 9800      03408         BCF     _PIE1bits, 4
               03409 ;       .line   247; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00E8 D000      03410         BRA     _00153_DS_
00EA 03411 _00145_DS_:
               03412 ;       .line   249; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE1bits.CCP1IE = INT_DISABLE;
00EA 9400      03413         BCF     _PIE1bits, 2
               03414 ;       .line   250; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00EC D000      03415         BRA     _00153_DS_
00EE 03416 _00146_DS_:
               03417 ;       .line   252; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.CCP2IE = INT_DISABLE;
00EE 9000      03418         BCF     _PIE2bits, 0
               03419 ;       .line   253; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00F0 D000      03420         BRA     _00153_DS_
00F2 03421 _00147_DS_:
               03422 ;       .line   255; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.OSCFIE = INT_DISABLE;
00F2 9E00      03423         BCF     _PIE2bits, 7
               03424 ;       .line   256; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00F4 D000      03425         BRA     _00153_DS_
00F6 03426 _00148_DS_:
               03427 ;       .line   258; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.CMIE = INT_DISABLE;
00F6 9C00      03428         BCF     _PIE2bits, 6
               03429 ;       .line   259; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00F8 D000      03430         BRA     _00153_DS_
00FA 03431 _00149_DS_:
               03432 ;       .line   261; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.EEIE = INT_DISABLE;
00FA 9800      03433         BCF     _PIE2bits, 4
               03434 ;       .line   262; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
00FC D000      03435         BRA     _00153_DS_
00FE 03436 _00150_DS_:
               03437 ;       .line   264; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.BCLIE = INT_DISABLE;
00FE 9600      03438         BCF     _PIE2bits, 3
               03439 ;       .line   265; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   break;
0100 D000      03440         BRA     _00153_DS_
0102 03441 _00151_DS_:
               03442 ;       .line   267; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   PIE2bits.HLVDIE = INT_DISABLE;
0102 9400      03443         BCF     _PIE2bits, 2
0104 03444 _00153_DS_:
               03445 ;       .line   274; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/interrupt.c   }
0104 CFE4 F000 03446         MOVFF   PREINC1, r0x02
0108 CFE4 F000 03447         MOVFF   PREINC1, r0x01
010C CFE4 F000 03448         MOVFF   PREINC1, r0x00
0110 CFE4 FFD9 03449         MOVFF   PREINC1, FSR2L
0114 0012      03450         RETURN  
               03451 
               03452 ; ; Starting pCode block
               03453 S_main__Delayus code
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 03454 _Delayus:
               03455 ;       .line   16; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/arduinodelay.c void Delayus(int microsecondes)
0000 CFD9 FFE5 03456         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03457         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03458         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03459         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03460         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03461         MOVFF   r0x03, POSTDEC1
0018 0E02      03462         MOVLW   0x02
001A CFDB F000 03463         MOVFF   PLUSW2, r0x00
001E 0E03      03464         MOVLW   0x03
0020 CFDB F000 03465         MOVFF   PLUSW2, r0x01
               03466 ;       .line   20; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/arduinodelay.c for (i=0;i<microsecondes;i++);
0024 6A00      03467         CLRF    r0x02
0026 6A00      03468         CLRF    r0x03
0028 03469 _00119_DS_:
0028 5000      03470         MOVF    r0x01, W
002A 5C00      03471         SUBWF   r0x03, W
002C E100      03472         BNZ     _00128_DS_
002E 5000      03473         MOVF    r0x00, W
0030 5C00      03474         SUBWF   r0x02, W
0032 03475 _00128_DS_:
0032 E200      03476         BC      _00123_DS_
0034 2A00      03477         INCF    r0x02, F
0036 B0D8      03478         BTFSC   STATUS, 0
0038 2A00      03479         INCF    r0x03, F
003A D000      03480         BRA     _00119_DS_
003C 03481 _00123_DS_:
003C CFE4 F000 03482         MOVFF   PREINC1, r0x03
0040 CFE4 F000 03483         MOVFF   PREINC1, r0x02
0044 CFE4 F000 03484         MOVFF   PREINC1, r0x01
0048 CFE4 F000 03485         MOVFF   PREINC1, r0x00
004C CFE4 FFD9 03486         MOVFF   PREINC1, FSR2L
0050 0012      03487         RETURN  
               03488 
               03489 ; ; Starting pCode block
               03490 S_main__Delayms code
0000 03491 _Delayms:
               03492 ;       .line   9; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/arduinodelay.c  void Delayms(unsigned long milliseconde)
0000 CFD9 FFE5 03493         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 03494         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 03495         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 03496         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 03497         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 03498         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 03499         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 03500         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 03501         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 03502         MOVFF   r0x07, POSTDEC1
0028 0E02      03503         MOVLW   0x02
002A CFDB F000 03504         MOVFF   PLUSW2, r0x00
002E 0E03      03505         MOVLW   0x03
0030 CFDB F000 03506         MOVFF   PLUSW2, r0x01
0034 0E04      03507         MOVLW   0x04
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0036 CFDB F000 03508         MOVFF   PLUSW2, r0x02
003A 0E05      03509         MOVLW   0x05
003C CFDB F000 03510         MOVFF   PLUSW2, r0x03
               03511 ;       .line   13; /home/mandon/c32 linux/tools/bin/../share/sdcc/include/pic16/arduinodelay.c for (i=0;i<milliseconde;i++) delay10ktcy(1);
0040 6A00      03512         CLRF    r0x04
0042 6A00      03513         CLRF    r0x05
0044 6A00      03514         CLRF    r0x06
0046 6A00      03515         CLRF    r0x07
0048 03516 _00105_DS_:
0048 5000      03517         MOVF    r0x03, W
004A 5C00      03518         SUBWF   r0x07, W
004C E100      03519         BNZ     _00114_DS_
004E 5000      03520         MOVF    r0x02, W
0050 5C00      03521         SUBWF   r0x06, W
0052 E100      03522         BNZ     _00114_DS_
0054 5000      03523         MOVF    r0x01, W
0056 5C00      03524         SUBWF   r0x05, W
0058 E100      03525         BNZ     _00114_DS_
005A 5000      03526         MOVF    r0x00, W
005C 5C00      03527         SUBWF   r0x04, W
005E 03528 _00114_DS_:
005E E200      03529         BC      _00109_DS_
0060 0E01      03530         MOVLW   0x01
0062 EC00 F000 03531         CALL    _delay10ktcy
0066 2A00      03532         INCF    r0x04, F
0068 B0D8      03533         BTFSC   STATUS, 0
006A 2A00      03534         INCF    r0x05, F
006C B0D8      03535         BTFSC   STATUS, 0
006E 2A00      03536         INCF    r0x06, F
0070 B0D8      03537         BTFSC   STATUS, 0
0072 2A00      03538         INCF    r0x07, F
0074 D000      03539         BRA     _00105_DS_
0076 03540 _00109_DS_:
0076 CFE4 F000 03541         MOVFF   PREINC1, r0x07
007A CFE4 F000 03542         MOVFF   PREINC1, r0x06
007E CFE4 F000 03543         MOVFF   PREINC1, r0x05
0082 CFE4 F000 03544         MOVFF   PREINC1, r0x04
0086 CFE4 F000 03545         MOVFF   PREINC1, r0x03
008A CFE4 F000 03546         MOVFF   PREINC1, r0x02
008E CFE4 F000 03547         MOVFF   PREINC1, r0x01
0092 CFE4 F000 03548         MOVFF   PREINC1, r0x00
0096 CFE4 FFD9 03549         MOVFF   PREINC1, FSR2L
009A 0012      03550         RETURN  
               03551 
               03552 ; ; Starting pCode block
009C 03553 __str_0:
009C 6E28 6C75 03554         DB      0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00
     296C 0000 
               03555 ; ; Starting pCode block
00A4 03556 __str_1:
00A4 6F6E 2074 03557         DB      0x6e, 0x6f, 0x74, 0x20, 0x79, 0x65, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c
     6579 2074 
     6D69 6C70 
00B0 6D65 6E65 03558         DB      0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x00, 0x00
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
     6574 0064 
     0000      
               03559 ; ; Starting pCode block
00BA 03560 __str_2:
00BA 6425 0000 03561         DB      0x25, 0x64, 0x00
               03562 ; ; Starting pCode block
00BE 03563 __str_3:
00BE 7825 0000 03564         DB      0x25, 0x78, 0x00
               03565 ; ; Starting pCode block
00C2 03566 __str_4:
00C2 696D 7263 03567         DB      0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x3d, 0x20, 0x25, 0x64, 0x2f, 0x6e
     736F 203D 
     6425 6E2F 
00CE 722F 0000 03568         DB      0x2f, 0x72, 0x00
               03569 ; ; Starting pCode block
00D2 03570 __str_5:
00D2 694D 6C6C 03571         DB      0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x3d, 0x20, 0x25, 0x64, 0x0a, 0x0d
     7369 203D 
     6425 0D0A 
00DE 0000      03572         DB      0x00
               03573 
               03574 
               03575 ; Statistics:
               03576 ; code size:     6708 (0x1a34) bytes ( 5.12%)
               03577 ;                3354 (0x0d1a) words
               03578 ; udata size:     258 (0x0102) bytes (14.40%)
               03579 ; access size:     27 (0x001b) bytes
               03580 
               03581 
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2H                             00000FDA
FSR2L                             00000FD9
INDF0                             00000FEF
INTCON                            00000FF2
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC1                          00000FE6
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
TBLPTRL                           00000FF6
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
WREG                              00000FE8
_00105_DS_                        00000048
_00109_DS_                        00000076
_00114_DS_                        0000005E
_00119_DS_                        00000028
_00123_DS_                        0000003C
_00128_DS_                        00000032
_00133_DS_                        000000BA
_00134_DS_                        000000BE
_00135_DS_                        000000C2
_00136_DS_                        000000C6
_00137_DS_                        000000CA
_00138_DS_                        000000CE
_00139_DS_                        000000D2
_00140_DS_                        000000D6
_00141_DS_                        000000DA
_00142_DS_                        000000DE
_00143_DS_                        000000E2
_00144_DS_                        000000E6
_00145_DS_                        000000EA
_00146_DS_                        000000EE
_00147_DS_                        000000F2
_00148_DS_                        000000F6
_00149_DS_                        000000FA
_00150_DS_                        000000FE
_00151_DS_                        00000102
_00153_DS_                        00000104
_00157_DS_                        0000006E
_00162_DS_                        0000000C
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00166_DS_                        00000020
_00207_DS_                        00000094
_00209_DS_                        000000C2
_00212_DS_                        000000BE
_00218_DS_                        000000F6
_00219_DS_                        000000FE
_00223_DS_                        00000106
_00226_DS_                        000000B6
_00229_DS_                        000000DC
_00230_DS_                        00000116
_00234_DS_                        00000164
_00238_DS_                        000001B2
_00241_DS_                        000001E8
_00252_DS_                        0000015C
_00254_DS_                        000001A2
_00256_DS_                        0000014C
_00259_DS_                        000000A4
_00260_DS_                        000000EE
_00263_DS_                        00000122
_00264_DS_                        000001BE
_00270_DS_                        0000012A
_00272_DS_                        00000156
_00276_DS_                        000001C0
_00277_DS_                        0000018A
_00281_DS_                        00000242
_00285_DS_                        0000025C
_00286_DS_                        000002A0
_00298_DS_                        000001FE
_00299_DS_                        0000013A
_00300_DS_                        0000013C
_00302_DS_                        000001BA
_00314_DS_                        0000010A
_00318_DS_                        0000023C
_00320_DS_                        000002CE
_00322_DS_                        0000035E
_00324_DS_                        000003EE
_00326_DS_                        0000047E
_00328_DS_                        0000050E
_00330_DS_                        0000059E
_00332_DS_                        00000622
_00335_DS_                        00000668
_00339_DS_                        00000092
_00341_DS_                        00000692
_00342_DS_                        000006A0
_00344_DS_                        000006D0
_00346_DS_                        0000012A
_00353_DS_                        000001FA
_00360_DS_                        000000FE
_00377_DS_                        00000186
_00379_DS_                        000000B4
_00381_DS_                        000000E8
_00390_DS_                        000001A8
_00392_DS_                        00000244
_00394_DS_                        000002D6
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00396_DS_                        00000366
_00398_DS_                        000003F6
_00400_DS_                        00000486
_00402_DS_                        00000516
_00404_DS_                        000005A6
_00421_DS_                        0000007C
_00424_DS_                        00000148
_00428_DS_                        000000CA
_00430_DS_                        00000198
_00433_DS_                        00000176
_00434_DS_                        0000017A
_00440_DS_                        000000C6
_00443_DS_                        000000A4
_00444_DS_                        0000013E
_00445_DS_                        0000016E
_00458_DS_                        00000012
_00463_DS_                        00000012
_00472_DS_                        00000022
_00473_DS_                        00000026
_00475_DS_                        0000004C
_00478_DS_                        0000005A
_00484_DS_                        0000001A
_00496_DS_                        00000042
_00512_DS_                        00000004
_00525_DS_                        000000A8
_00526_DS_                        000000F4
_00527_DS_                        00000140
_00528_DS_                        00000184
_00529_DS_                        00000200
_00530_DS_                        0000027C
_00532_DS_                        000002E4
_00538_DS_                        00000094
_00574_DS_                        00000022
_00585_DS_                        0000206C
_10590_DS_                        00002060
_20591_DS_                        00002066
_30592_DS_                        0000206C
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCONbits                      00000000
_BSR                              00000000
_BSRbits                          00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1H                           00000000
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_CCPR1L                           00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_Delayms                          00000000
_Delayus                          00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
_FSR0H                            00000000
_FSR0Hbits                        00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1Hbits                        00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2Hbits                        00000000
_FSR2L                            00000000
_HLVDCON                          00000000
_HLVDCONbits                      00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_Millis                           00000000
_OSCCON                           00000000
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATHbits                       00000000
_PCLATU                           00000000
_PCLATUbits                       00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PRODH                            00000000
_PRODL                            00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRGH                           00000000
_SPPCFG                           00000000
_SPPCFGbits                       00000000
_SPPCON                           00000000
_SPPCONbits                       00000000
_SPPDATA                          00000000
_SPPDATAbits                      00000000
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SPPEPS                           00000000
_SPPEPSbits                       00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TBLPTRUbits                      00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TOSUbits                         00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_UADDR                            00000000
_UADDRbits                        00000000
_UCFG                             00000000
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_UCFGbits                         00000000
_UCON                             00000000
_UCONbits                         00000000
_UEIE                             00000000
_UEIEbits                         00000000
_UEIR                             00000000
_UEIRbits                         00000000
_UEP0                             00000000
_UEP0bits                         00000000
_UEP1                             00000000
_UEP10                            00000000
_UEP10bits                        00000000
_UEP11                            00000000
_UEP11bits                        00000000
_UEP12                            00000000
_UEP12bits                        00000000
_UEP13                            00000000
_UEP13bits                        00000000
_UEP14                            00000000
_UEP14bits                        00000000
_UEP15                            00000000
_UEP15bits                        00000000
_UEP1bits                         00000000
_UEP2                             00000000
_UEP2bits                         00000000
_UEP3                             00000000
_UEP3bits                         00000000
_UEP4                             00000000
_UEP4bits                         00000000
_UEP5                             00000000
_UEP5bits                         00000000
_UEP6                             00000000
_UEP6bits                         00000000
_UEP7                             00000000
_UEP7bits                         00000000
_UEP8                             00000000
_UEP8bits                         00000000
_UEP9                             00000000
_UEP9bits                         00000000
_UFRMH                            00000000
_UFRMHbits                        00000000
_UFRML                            00000000
_UFRMLbits                        00000000
_UIE                              00000000
_UIEbits                          00000000
_UIR                              00000000
_UIRbits                          00000000
_USTAT                            00000000
_USTATbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F2550                         00000001
__divuint                         00000000
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
__divulong                        00000000
__gptrget1                        00000000
__gptrget2                        00000000
__gptrget3                        00000000
__gptrput1                        00000000
__gptrput3                        00000000
__millis                          00000000
__moduint                         00000000
__mulint                          00000000
__mullong                         00000000
__str_0                           0000009C
__str_1                           000000A4
__str_2                           000000BA
__str_3                           000000BE
__str_4                           000000C2
__str_5                           000000D2
_delay10ktcy                      00000000
_detachInterrupt                  00000000
_epap_in                          00000000
_epap_out                         00000000
_epapin_init                      00000000
_epapout_init                     00000000
_high_priority_isr                00002020
_intCount                         00000000
_intCountLimit                    00000000
_intFunction                      00000000
_intUsed                          00000000
_int_init                         00000000
_int_start                        00000000
_int_stop                         00000000
_loop                             00000000
_low_priority_isr                 00004000
_millis_init                      00000000
_pinguino_main                    00000000
_preloadH                         00000000
_preloadL                         00000000
_print                            00000000
_print_scr_1_1                    00000000
_printchar                        00000000
_printf                           00000000
_printi                           00000000
_printi_print_buf_1_1             00000000
_prints                           00000000
_putchar                          00000000
_rpointer                         00000000
_rx                               00000000
_serial_available                 00000000
_serial_begin                     00000000
_serial_flush                     00000000
_serial_getkey                    00000000
_serial_interrupt                 00000000
_serial_printf                    00000000
_serial_putchar                   00000000
_serial_read                      00000000
gpasm-0.13.7 beta               /home/mandon/c32 linux/source/main.asm2-20-2011  17:09:35          PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_serial_write                     00000000
_setup                            00000000
_sprintf                          00000000
_sprintf_out_1_1                  00000000
_uitoa                            00000000
_usb_active_alt_setting           00000000
_usb_active_cfg                   00000000
_usb_device_state                 00000000
_userhighinterrupt                00000000
_userinterrupt                    00000000
_wpointer                         00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015
r0x16                             00000016
r0x17                             00000017
r0x18                             00000018
r0x19                             00000019
r0x1a                             0000001A


Errors   :       3
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

