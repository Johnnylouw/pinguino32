gpasm-0.14.2 #725 (Jul  4 2012) crt0i18f26j50   7-4-2012  21:30:28          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.0 #8004 (Jul  4 2012) (Linux)
                      00004 ; This file was generated Wed Jul  4 21:30:28 2012
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f26j50
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  ___uflags
                      00016         global  __entry
                      00017         global  __startup
                      00018         global  __do_cinit
                      00019 
                      00020 ;--------------------------------------------------------
                      00021 ; extern variables in this module
                      00022 ;--------------------------------------------------------
                      00023         extern  _stack_end
                      00024         extern  _TBLPTRU
                      00025         extern  _TBLPTRH
                      00026         extern  _TBLPTRL
                      00027         extern  _FSR0L
                      00028         extern  _FSR0H
                      00029         extern  _TABLAT
                      00030         extern  _POSTINC0
                      00031         extern  _pinguino_main
                      00032         extern  _cinit
                      00033 
                      00034 
                      00035         idata
000000 00             00036 ___uflags       db      0x00
                      00037 
                      00038 ;--------------------------------------------------------
                      00039 ; global & static initialisations
                      00040 ;--------------------------------------------------------
                      00041 ; ; Starting pCode block
                      00042 S_crt0iPinguino___entry code    0X000C00
000C00                00043 __entry:
000C00 EF00 F000      00044         goto __startup
                      00045         
                      00046 ; I code from now on!
                      00047 ; ; Starting pCode block
                      00048 S_crt0iPinguino___do_cinit      code
000000                00049 __do_cinit:
                      00050         ; TBLPTR = &cinit
000000 0E00           00051         movlw low(_cinit)
000002 6E00           00052         movwf _TBLPTRL, 0
000004 0E00           00053         movlw high(_cinit)
gpasm-0.14.2 #725 (Jul  4 2012) crt0i18f26j50   7-4-2012  21:30:28          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000006 6E00           00054         movwf _TBLPTRH, 0
000008 0E00           00055         movlw upper(_cinit)
00000A 6E00           00056         movwf _TBLPTRU, 0
                      00057         ; 0x05 = cinit.num_init
00000C 0009           00058         tblrd*+
00000E 5000           00059         movf _TABLAT, w, 0
000010 6E05           00060         movwf 0x05, 0
000012 0009           00061         tblrd*+
000014 5000           00062         movf _TABLAT, w, 0
000016 6E06           00063         movwf 0x05 + 1, 0
                      00064         ; while (0x05)
000018 5005           00065         movf 0x05, w, 0
00001A                00066 test:
00001A E100           00067         bnz cont1
00001C 5006           00068         movf 0x05 + 1, w, 0
00001E E000           00069         bz done
000020                00070 cont1:
                      00071         ; Count down so we only have to look up the data in _cinit once.
                      00072         ; At this point we know that TBLPTR points to the top of the current
                      00073         ; entry in _cinit, so we can just start reading the from, to, and
                      00074         ; size values.
                      00075         ; read the source address low
000020 0009           00076         tblrd*+
000022 5000           00077         movf _TABLAT, w, 0
000024 6E00           00078         movwf 0x00, 0
                      00079         ; source address high
000026 0009           00080         tblrd*+
000028 5000           00081         movf _TABLAT, w, 0
00002A 6E01           00082         movwf 0x00 + 1, 0
                      00083         ; source address upper
00002C 0009           00084         tblrd*+
00002E 5000           00085         movf _TABLAT, w, 0
000030 6E02           00086         movwf 0x00 + 2, 0
                      00087         ; skip 0 byte since it is stored as 0 32bit int
000032 0009           00088         tblrd*+
                      00089         ; read the destination address directly into FSR0
                      00090         ; destination address low
000034 0009           00091         tblrd*+
000036 5000           00092         movf _TABLAT, w, 0
000038 6E00           00093         movwf _FSR0L, 0
                      00094         ; destination address high
00003A 0009           00095         tblrd*+
00003C 5000           00096         movf _TABLAT, w, 0
00003E 6E00           00097         movwf _FSR0H, 0
                      00098         ; skip two bytes since it is stored as 0 32bit int
000040 0009           00099         tblrd*+
000042 0009           00100         tblrd*+
                      00101         ; read the size of data to transfer to destination address
000044 0009           00102         tblrd*+
000046 5000           00103         movf _TABLAT, w, 0
000048 6E03           00104         movwf 0x03, 0
00004A 0009           00105         tblrd*+
00004C 5000           00106         movf _TABLAT, w, 0
gpasm-0.14.2 #725 (Jul  4 2012) crt0i18f26j50   7-4-2012  21:30:28          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004E 6E04           00107         movwf 0x03 + 1, 0
                      00108         ; skip two bytes since it is stored as 0 32bit int
000050 0009           00109         tblrd*+
000052 0009           00110         tblrd*+
                      00111         ; 0x00 = 0x07 ->from;
                      00112         ; FSR0 = 0x07 ->to;
                      00113         ; 0x03 = (unsigned short) 0x07 ->size;
                      00114         ; the table pointer now points to the next entry. Save it
                      00115         ; off since we will be using the table pointer to do the copying
                      00116         ; for the entry
                      00117         ; 0x07 = TBLPTR
000054 C000 F007      00118         movff _TBLPTRL, 0x07
000058 C000 F008      00119         movff _TBLPTRH, 0x07 + 1
00005C C000 F009      00120         movff _TBLPTRU, 0x07 + 2
                      00121         ; now assign the source address to the table pointer
                      00122         ; TBLPTR = 0x00
000060 C000 F000      00123         movff 0x00, _TBLPTRL
000064 C001 F000      00124         movff 0x00 + 1, _TBLPTRH
000068 C002 F000      00125         movff 0x00 + 2, _TBLPTRU
                      00126         ; while (0x03)
00006C 5003           00127         movf 0x03, w, 0
00006E                00128 copy_loop:
00006E E100           00129         bnz copy_one_byte
000070 5004           00130         movf 0x03 + 1, w, 0
000072 E000           00131         bz done_copying
000074                00132 copy_one_byte:
000074 0009           00133         tblrd*+
000076 5000           00134         movf _TABLAT, w, 0
000078 6E00           00135         movwf _POSTINC0, 0
                      00136         ; decrement byte counter
00007A 0603           00137         decf 0x03, f, 0
00007C E200           00138         bc copy_loop
00007E 0604           00139         decf 0x03 + 1, f, 0
000080 D000           00140         bra copy_one_byte
000082                00141 done_copying:
                      00142         ; restore the table pointer for the next entry
                      00143         ; TBLPTR = 0x07
000082 C007 F000      00144         movff 0x07, _TBLPTRL
000086 C008 F000      00145         movff 0x07 + 1, _TBLPTRH
00008A C009 F000      00146         movff 0x07 + 2, _TBLPTRU
                      00147         ; decrement entry counter
00008E 0605           00148         decf 0x05, f, 0
000090 E200           00149         bc test
000092 0606           00150         decf 0x05 + 1, f, 0
000094 D000           00151         bra cont1
                      00152         ; emit done label
000096                00153 done:
000096 0012           00154         return
                      00155         
                      00156 ; ; Starting pCode block
                      00157 S_crt0iPinguino___startup       code
000000                00158 __startup:
                      00159         ; Initialize the stack pointer
gpasm-0.14.2 #725 (Jul  4 2012) crt0i18f26j50   7-4-2012  21:30:28          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000 EE10 F000      00160         lfsr 1, _stack_end
000004 EE20 F000      00161         lfsr 2, _stack_end
                      00162         ; 1st silicon does not do this on POR
000008 6A00           00163         clrf _TBLPTRU, 0
                      00164         ; Initialize the flash memory access configuration.
                      00165         ; This is harmless for non-flash devices, so we do it on all parts.
00000A 84A6           00166         bsf 0xa6, 2, 0 ; EECON1.WREN = 1; enable write to memory
00000C 82A6           00167         bsf 0xa6, 1, 0 ; EECON1.WR = 1; Initiates 0 program memory erase cycle or write cycle
                      00168         
                      00169 ;       .line   115; crt0iPinguino.c    _do_cinit ();
00000E EC00 F000      00170         CALL    __do_cinit
                      00171 ;       .line   118; crt0iPinguino.c    pinguino_main ();
000012 EC00 F000      00172         CALL    _pinguino_main
                      00173 
                      00174 
                      00175 ; Statistics:
                      00176 ; code size:      244 (0x00f4) bytes ( 0.19%)
                      00177 ;                 122 (0x007a) words
                      00178 ; udata size:       0 (0x0000) bytes ( 0.00%)
                      00179 ; access size:      0 (0x0000) bytes
                      00180 
                      00181 
                      00182         end
gpasm-0.14.2 #725 (Jul  4 2012) crt0i18f26j50   7-4-2012  21:30:28          PAGE  5


SYMBOL TABLE
  LABEL                             VALUE

_FSR0H                            00000000
_FSR0L                            00000000
_POSTINC0                         00000000
_TABLAT                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
__18F26J50                        00000001
___uflags                         00000000
__do_cinit                        00000000
__entry                           00000C00
__startup                         00000000
_cinit                            00000000
_pinguino_main                    00000000
_stack_end                        00000000
cont1                             00000020
copy_loop                         0000006E
copy_one_byte                     00000074
done                              00000096
done_copying                      00000082
test                              0000001A

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

