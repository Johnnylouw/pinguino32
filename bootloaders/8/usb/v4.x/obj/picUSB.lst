gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.2.1 #8163 (Oct 23 2012) (Linux)
                      00004 ; This file was generated Sat Dec 15 16:08:58 2012
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f4550
                      00009         radix   dec
                      00010 
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global  _bootCmd
                      00016         global  _deviceAddress
                      00017         global  _selfPowered
                      00018         global  _EnableUSBModule
                      00019         global  _ProcessUSBTransactions
                      00020         global  _deviceState
                      00021         global  _currentConfiguration
                      00022         global  _ctrlTransferStage
                      00023         global  _requestHandled
                      00024         global  _outPtr
                      00025         global  _inPtr
                      00026         global  _wCount
                      00027         global  _ep_bdt
                      00028         global  _SetupPacket
                      00029         global  _controlTransferBuffer
                      00030         global  _ProcessStandardRequest
                      00031         global  _InDataStage
                      00032         global  _OutDataStage
                      00033         global  _SetupStage
                      00034         global  _WaitForSetupStage
                      00035         global  _ProcessControlTransfer
                      00036         global  _UnSuspend
                      00037         global  _BusReset
                      00038 
                      00039 ;--------------------------------------------------------
                      00040 ; extern variables in this module
                      00041 ;--------------------------------------------------------
                      00042         extern  __gptrget1
                      00043         extern  __gptrput1
                      00044         extern  _SPPCFGbits
                      00045         extern  _SPPEPSbits
                      00046         extern  _SPPCONbits
                      00047         extern  _UFRMLbits
                      00048         extern  _UFRMHbits
                      00049         extern  _UIRbits
                      00050         extern  _UIEbits
                      00051         extern  _UEIRbits
                      00052         extern  _UEIEbits
                      00053         extern  _USTATbits
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054         extern  _UCONbits
                      00055         extern  _UADDRbits
                      00056         extern  _UCFGbits
                      00057         extern  _UEP0bits
                      00058         extern  _UEP1bits
                      00059         extern  _UEP2bits
                      00060         extern  _UEP3bits
                      00061         extern  _UEP4bits
                      00062         extern  _UEP5bits
                      00063         extern  _UEP6bits
                      00064         extern  _UEP7bits
                      00065         extern  _UEP8bits
                      00066         extern  _UEP9bits
                      00067         extern  _UEP10bits
                      00068         extern  _UEP11bits
                      00069         extern  _UEP12bits
                      00070         extern  _UEP13bits
                      00071         extern  _UEP14bits
                      00072         extern  _UEP15bits
                      00073         extern  _PORTAbits
                      00074         extern  _PORTBbits
                      00075         extern  _PORTCbits
                      00076         extern  _PORTDbits
                      00077         extern  _PORTEbits
                      00078         extern  _LATAbits
                      00079         extern  _LATBbits
                      00080         extern  _LATCbits
                      00081         extern  _LATDbits
                      00082         extern  _LATEbits
                      00083         extern  _DDRAbits
                      00084         extern  _TRISAbits
                      00085         extern  _DDRBbits
                      00086         extern  _TRISBbits
                      00087         extern  _DDRCbits
                      00088         extern  _TRISCbits
                      00089         extern  _DDRDbits
                      00090         extern  _TRISDbits
                      00091         extern  _DDREbits
                      00092         extern  _TRISEbits
                      00093         extern  _OSCTUNEbits
                      00094         extern  _PIE1bits
                      00095         extern  _PIR1bits
                      00096         extern  _IPR1bits
                      00097         extern  _PIE2bits
                      00098         extern  _PIR2bits
                      00099         extern  _IPR2bits
                      00100         extern  _EECON1bits
                      00101         extern  _RCSTAbits
                      00102         extern  _TXSTAbits
                      00103         extern  _T3CONbits
                      00104         extern  _CMCONbits
                      00105         extern  _CVRCONbits
                      00106         extern  _CCP1ASbits
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107         extern  _ECCP1ASbits
                      00108         extern  _CCP1DELbits
                      00109         extern  _ECCP1DELbits
                      00110         extern  _BAUDCONbits
                      00111         extern  _BAUDCTLbits
                      00112         extern  _CCP2CONbits
                      00113         extern  _CCP1CONbits
                      00114         extern  _ECCP1CONbits
                      00115         extern  _ADCON2bits
                      00116         extern  _ADCON1bits
                      00117         extern  _ADCON0bits
                      00118         extern  _SSPCON2bits
                      00119         extern  _SSPCON1bits
                      00120         extern  _SSPSTATbits
                      00121         extern  _T2CONbits
                      00122         extern  _T1CONbits
                      00123         extern  _RCONbits
                      00124         extern  _WDTCONbits
                      00125         extern  _HLVDCONbits
                      00126         extern  _LVDCONbits
                      00127         extern  _OSCCONbits
                      00128         extern  _T0CONbits
                      00129         extern  _STATUSbits
                      00130         extern  _INTCON3bits
                      00131         extern  _INTCON2bits
                      00132         extern  _INTCONbits
                      00133         extern  _STKPTRbits
                      00134         extern  _SPPDATA
                      00135         extern  _SPPCFG
                      00136         extern  _SPPEPS
                      00137         extern  _SPPCON
                      00138         extern  _UFRM
                      00139         extern  _UFRML
                      00140         extern  _UFRMH
                      00141         extern  _UIR
                      00142         extern  _UIE
                      00143         extern  _UEIR
                      00144         extern  _UEIE
                      00145         extern  _USTAT
                      00146         extern  _UCON
                      00147         extern  _UADDR
                      00148         extern  _UCFG
                      00149         extern  _UEP0
                      00150         extern  _UEP1
                      00151         extern  _UEP2
                      00152         extern  _UEP3
                      00153         extern  _UEP4
                      00154         extern  _UEP5
                      00155         extern  _UEP6
                      00156         extern  _UEP7
                      00157         extern  _UEP8
                      00158         extern  _UEP9
                      00159         extern  _UEP10
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00160         extern  _UEP11
                      00161         extern  _UEP12
                      00162         extern  _UEP13
                      00163         extern  _UEP14
                      00164         extern  _UEP15
                      00165         extern  _PORTA
                      00166         extern  _PORTB
                      00167         extern  _PORTC
                      00168         extern  _PORTD
                      00169         extern  _PORTE
                      00170         extern  _LATA
                      00171         extern  _LATB
                      00172         extern  _LATC
                      00173         extern  _LATD
                      00174         extern  _LATE
                      00175         extern  _DDRA
                      00176         extern  _TRISA
                      00177         extern  _DDRB
                      00178         extern  _TRISB
                      00179         extern  _DDRC
                      00180         extern  _TRISC
                      00181         extern  _DDRD
                      00182         extern  _TRISD
                      00183         extern  _DDRE
                      00184         extern  _TRISE
                      00185         extern  _OSCTUNE
                      00186         extern  _PIE1
                      00187         extern  _PIR1
                      00188         extern  _IPR1
                      00189         extern  _PIE2
                      00190         extern  _PIR2
                      00191         extern  _IPR2
                      00192         extern  _EECON1
                      00193         extern  _EECON2
                      00194         extern  _EEDATA
                      00195         extern  _EEADR
                      00196         extern  _RCSTA
                      00197         extern  _TXSTA
                      00198         extern  _TXREG
                      00199         extern  _RCREG
                      00200         extern  _SPBRG
                      00201         extern  _SPBRGH
                      00202         extern  _T3CON
                      00203         extern  _TMR3
                      00204         extern  _TMR3L
                      00205         extern  _TMR3H
                      00206         extern  _CMCON
                      00207         extern  _CVRCON
                      00208         extern  _CCP1AS
                      00209         extern  _ECCP1AS
                      00210         extern  _CCP1DEL
                      00211         extern  _ECCP1DEL
                      00212         extern  _BAUDCON
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00213         extern  _BAUDCTL
                      00214         extern  _CCP2CON
                      00215         extern  _CCPR2
                      00216         extern  _CCPR2L
                      00217         extern  _CCPR2H
                      00218         extern  _CCP1CON
                      00219         extern  _ECCP1CON
                      00220         extern  _CCPR1
                      00221         extern  _CCPR1L
                      00222         extern  _CCPR1H
                      00223         extern  _ADCON2
                      00224         extern  _ADCON1
                      00225         extern  _ADCON0
                      00226         extern  _ADRES
                      00227         extern  _ADRESL
                      00228         extern  _ADRESH
                      00229         extern  _SSPCON2
                      00230         extern  _SSPCON1
                      00231         extern  _SSPSTAT
                      00232         extern  _SSPADD
                      00233         extern  _SSPBUF
                      00234         extern  _T2CON
                      00235         extern  _PR2
                      00236         extern  _TMR2
                      00237         extern  _T1CON
                      00238         extern  _TMR1
                      00239         extern  _TMR1L
                      00240         extern  _TMR1H
                      00241         extern  _RCON
                      00242         extern  _WDTCON
                      00243         extern  _HLVDCON
                      00244         extern  _LVDCON
                      00245         extern  _OSCCON
                      00246         extern  _T0CON
                      00247         extern  _TMR0
                      00248         extern  _TMR0L
                      00249         extern  _TMR0H
                      00250         extern  _STATUS
                      00251         extern  _FSR2L
                      00252         extern  _FSR2H
                      00253         extern  _PLUSW2
                      00254         extern  _PREINC2
                      00255         extern  _POSTDEC2
                      00256         extern  _POSTINC2
                      00257         extern  _INDF2
                      00258         extern  _BSR
                      00259         extern  _FSR1L
                      00260         extern  _FSR1H
                      00261         extern  _PLUSW1
                      00262         extern  _PREINC1
                      00263         extern  _POSTDEC1
                      00264         extern  _POSTINC1
                      00265         extern  _INDF1
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00266         extern  _WREG
                      00267         extern  _FSR0L
                      00268         extern  _FSR0H
                      00269         extern  _PLUSW0
                      00270         extern  _PREINC0
                      00271         extern  _POSTDEC0
                      00272         extern  _POSTINC0
                      00273         extern  _INDF0
                      00274         extern  _INTCON3
                      00275         extern  _INTCON2
                      00276         extern  _INTCON
                      00277         extern  _PROD
                      00278         extern  _PRODL
                      00279         extern  _PRODH
                      00280         extern  _TABLAT
                      00281         extern  _TBLPTR
                      00282         extern  _TBLPTRL
                      00283         extern  _TBLPTRH
                      00284         extern  _TBLPTRU
                      00285         extern  _PC
                      00286         extern  _PCL
                      00287         extern  _PCLATH
                      00288         extern  _PCLATU
                      00289         extern  _STKPTR
                      00290         extern  _TOS
                      00291         extern  _TOSL
                      00292         extern  _TOSH
                      00293         extern  _TOSU
                      00294         extern  _usb_configure_endpoints
                      00295         extern  _usb_ep_data_out_callback
                      00296         extern  _device_descriptor
                      00297         extern  _configuration_descriptor
                      00298         extern  _string_descriptor
                      00299 
                      00300 ;--------------------------------------------------------
                      00301 ;       Equates to used internal registers
                      00302 ;--------------------------------------------------------
  00000FD8            00303 STATUS  equ     0xfd8
  00000FE8            00304 WREG    equ     0xfe8
  00000FF6            00305 TBLPTRL equ     0xff6
  00000FF7            00306 TBLPTRH equ     0xff7
  00000FF8            00307 TBLPTRU equ     0xff8
  00000FF5            00308 TABLAT  equ     0xff5
  00000FE9            00309 FSR0L   equ     0xfe9
  00000FEA            00310 FSR0H   equ     0xfea
  00000FE1            00311 FSR1L   equ     0xfe1
  00000FD9            00312 FSR2L   equ     0xfd9
  00000FEF            00313 INDF0   equ     0xfef
  00000FEE            00314 POSTINC0        equ     0xfee
  00000FE6            00315 POSTINC1        equ     0xfe6
  00000FE5            00316 POSTDEC1        equ     0xfe5
  00000FE4            00317 PREINC1 equ     0xfe4
  00000FDB            00318 PLUSW2  equ     0xfdb
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000FF3            00319 PRODL   equ     0xff3
  00000FF4            00320 PRODH   equ     0xff4
                      00321 
                      00322 
                      00323 ; Internal registers
                      00324 .registers      udata_ovr       0x0000
000000                00325 r0x00   res     1
000001                00326 r0x01   res     1
000002                00327 r0x02   res     1
000003                00328 r0x03   res     1
000004                00329 r0x04   res     1
000005                00330 r0x05   res     1
000006                00331 r0x06   res     1
000007                00332 r0x07   res     1
000008                00333 r0x08   res     1
000009                00334 r0x09   res     1
                      00335 
                      00336 
                      00337 usbram5 udata
000000                00338 _SetupPacket    res     64
000040                00339 _controlTransferBuffer  res     64
                      00340 
                      00341 udata_picUSB_0  udata
000000                00342 _selfPowered    res     1
                      00343 
                      00344 udata_picUSB_1  udata
000000                00345 _deviceAddress  res     1
                      00346 
                      00347 udata_picUSB_2  udata
000000                00348 _bootCmd        res     64
                      00349 
                      00350 udata_picUSB_3  udata
000000                00351 _requestHandled res     1
                      00352 
                      00353 udata_picUSB_4  udata
000000                00354 _outPtr res     3
                      00355 
                      00356 udata_picUSB_5  udata
000000                00357 _wCount res     2
                      00358 
                      00359 udata_picUSB_6  udata
000000                00360 _deviceState    res     1
                      00361 
                      00362 udata_picUSB_7  udata
000000                00363 _currentConfiguration   res     1
                      00364 
                      00365 udata_picUSB_8  udata
000000                00366 _inPtr  res     3
                      00367 
                      00368 udata_picUSB_9  udata
000000                00369 _ctrlTransferStage      res     1
                      00370 
                      00371 
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00372 ustat_picUSB_00 udata   0X0400
000400                00373 _ep_bdt         res     128
                      00374 
                      00375 ;--------------------------------------------------------
                      00376 ; global & static initialisations
                      00377 ;--------------------------------------------------------
                      00378 ; I code from now on!
                      00379 ; ; Starting pCode block
                      00380 S_picUSB__ProcessUSBTransactions        code
000000                00381 _ProcessUSBTransactions:
                      00382 ;       .line   499; src/picUSB.c       void ProcessUSBTransactions()
000000 C??? FFE5      00383         MOVFF   r0x00, POSTDEC1
                      00384 ; #     MOVF    _deviceState, W, B
                      00385 ; #     BTFSS   STATUS, 2
                      00386 ; #     GOTO    _00414_DS_
                      00387 ; #     GOTO    _00431_DS_
                      00388 ; #     BTFSS   _UIRbits, 2
000004 ????           00389         BANKSEL _deviceState
                      00390 ;       .line   502; src/picUSB.c       if(deviceState == DETACHED)
000006 51??           00391         MOVF    _deviceState, W, B
                      00392 ;       .line   503; src/picUSB.c       return;
000008 E0??           00393         BZ      _00431_DS_
                      00394 ;       .line   506; src/picUSB.c       if(UIRbits.ACTVIF && UIEbits.ACTVIE)
00000A A4??           00395         BTFSS   _UIRbits, 2
                      00396 ; #     GOTO    _00416_DS_
                      00397 ; #     BTFSS   _UIEbits, 2
                      00398 ; #     GOTO    _00416_DS_
                      00399 ; #     CALL    _UnSuspend
                      00400 ; #     CLRF    r0x00
                      00401 ;       .line   507; src/picUSB.c       UnSuspend();
00000C D???           00402         BRA     _00416_DS_
                      00403 ;       .line   510; src/picUSB.c       if(UCONbits.SUSPND == 1)
00000E B4??           00404         BTFSC   _UIEbits, 2
000010 EC?? F???      00405         CALL    _UnSuspend
000014                00406 _00416_DS_:
000014 6A??           00407         CLRF    r0x00
000016 B2??           00408         BTFSC   _UCONbits, 1
000018 2A??           00409         INCF    r0x00, F
00001A 50??           00410         MOVF    r0x00, W
00001C 0A01           00411         XORLW   0x01
                      00412 ;       .line   511; src/picUSB.c       return;
00001E E0??           00413         BZ      _00431_DS_
                      00414 ;       .line   514; src/picUSB.c       if (UIRbits.URSTIF && UIEbits.URSTIE)
000020 A0??           00415         BTFSS   _UIRbits, 0
                      00416 ; #     GOTO    _00421_DS_
                      00417 ; #     BTFSS   _UIEbits, 0
                      00418 ; #     GOTO    _00421_DS_
                      00419 ; #     CALL    _BusReset
                      00420 ; #     BTFSS   _UIRbits, 1
                      00421 ;       .line   515; src/picUSB.c       BusReset();
000022 D???           00422         BRA     _00421_DS_
                      00423 ;       .line   531; src/picUSB.c       if (UIRbits.UERRIF && UIEbits.UERRIE)
000024 B0??           00424         BTFSC   _UIEbits, 0
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000026 EC?? F???      00425         CALL    _BusReset
00002A                00426 _00421_DS_:
00002A A2??           00427         BTFSS   _UIRbits, 1
                      00428 ; #     GOTO    _00424_DS_
                      00429 ; #     BTFSS   _UIEbits, 1
                      00430 ; #     GOTO    _00424_DS_
                      00431 ; #     BCF     _UIRbits, 1
                      00432 ; #     MOVLW   0x03
                      00433 ;       .line   532; src/picUSB.c       UIRbits.UERRIF = 0;// Clear errors
00002C D???           00434         BRA     _00424_DS_
                      00435 ;       .line   535; src/picUSB.c       if (deviceState < DEFAULT)  // DETACHED, ATTACHED or POWERED
00002E B2??           00436         BTFSC   _UIEbits, 1
000030 92??           00437         BCF     _UIRbits, 1
000032                00438 _00424_DS_:
000032 0E03           00439         MOVLW   0x03
                      00440 ; #     SUBWF   _deviceState, W, B
                      00441 ; #     BTFSC   STATUS, 0
                      00442 ; #     GOTO    _00427_DS_
                      00443 ; #     GOTO    _00431_DS_
                      00444 ; #     BTFSS   _UIRbits, 3
000034 ????           00445         BANKSEL _deviceState
                      00446 ;       .line   536; src/picUSB.c       return;
000036 5D??           00447         SUBWF   _deviceState, W, B
                      00448 ;       .line   539; src/picUSB.c       if(UIRbits.TRNIF && UIEbits.TRNIE)
000038 E3??           00449         BNC     _00431_DS_
00003A A6??           00450         BTFSS   _UIRbits, 3
00003C D???           00451         BRA     _00431_DS_
00003E A6??           00452         BTFSS   _UIEbits, 3
000040 D???           00453         BRA     _00431_DS_
                      00454 ;       .line   541; src/picUSB.c       ProcessControlTransfer();
000042 EC?? F???      00455         CALL    _ProcessControlTransfer
                      00456 ;       .line   543; src/picUSB.c       UIRbits.TRNIF = 0;
000046 96??           00457         BCF     _UIRbits, 3
000048                00458 _00431_DS_:
000048 CFE4 F???      00459         MOVFF   PREINC1, r0x00
00004C 0012           00460         RETURN  
                      00461 
                      00462 ; ; Starting pCode block
                      00463 S_picUSB__BusReset      code
000000                00464 _BusReset:
                      00465 ;       .line   471; src/picUSB.c       void BusReset()
000000 C??? FFE5      00466         MOVFF   r0x00, POSTDEC1
                      00467 ;       .line   473; src/picUSB.c       UEIR  = 0x00;
000004 6A??           00468         CLRF    _UEIR
                      00469 ;       .line   474; src/picUSB.c       UIR   = 0x00;
000006 6A??           00470         CLRF    _UIR
                      00471 ;       .line   475; src/picUSB.c       UEIE  = 0x9f;
000008 0E9F           00472         MOVLW   0x9f
00000A 6E??           00473         MOVWF   _UEIE
                      00474 ;       .line   476; src/picUSB.c       UIE   = 0x7b;
00000C 0E7B           00475         MOVLW   0x7b
00000E 6E??           00476         MOVWF   _UIE
                      00477 ;       .line   477; src/picUSB.c       UADDR = 0x00;
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000010 6A??           00478         CLRF    _UADDR
                      00479 ;       .line   480; src/picUSB.c       UEP0 = EP_CTRL | HSHK_EN;
000012 0E16           00480         MOVLW   0x16
000014 6E??           00481         MOVWF   _UEP0
000016                00482 _00396_DS_:
                      00483 ;       .line   483; src/picUSB.c       while (UIRbits.TRNIF == 1)
000016 6A??           00484         CLRF    r0x00
000018 B6??           00485         BTFSC   _UIRbits, 3
00001A 2A??           00486         INCF    r0x00, F
00001C 50??           00487         MOVF    r0x00, W
00001E 0A01           00488         XORLW   0x01
000020 E1??           00489         BNZ     _00398_DS_
                      00490 ;       .line   484; src/picUSB.c       UIRbits.TRNIF = 0;
000022 96??           00491         BCF     _UIRbits, 3
000024 D???           00492         BRA     _00396_DS_
000026                00493 _00398_DS_:
                      00494 ;       .line   487; src/picUSB.c       UCONbits.PKTDIS = 0;
000026 98??           00495         BCF     _UCONbits, 4
                      00496 ;       .line   490; src/picUSB.c       WaitForSetupStage();
000028 EC?? F???      00497         CALL    _WaitForSetupStage
00002C ????           00498         BANKSEL _selfPowered
                      00499 ;       .line   493; src/picUSB.c       selfPowered = 0;                      // Self powered is off by default
00002E 6B??           00500         CLRF    _selfPowered, B
000030 ????           00501         BANKSEL _currentConfiguration
                      00502 ;       .line   494; src/picUSB.c       currentConfiguration = 0;             // Clear active configuration
000032 6B??           00503         CLRF    _currentConfiguration, B
                      00504 ;       .line   495; src/picUSB.c       deviceState = DEFAULT;
000034 0E03           00505         MOVLW   0x03
000036 ????           00506         BANKSEL _deviceState
000038 6F??           00507         MOVWF   _deviceState, B
00003A CFE4 F???      00508         MOVFF   PREINC1, r0x00
00003E 0012           00509         RETURN  
                      00510 
                      00511 ; ; Starting pCode block
                      00512 S_picUSB__UnSuspend     code
000000                00513 _UnSuspend:
                      00514 ;       .line   466; src/picUSB.c       UCONbits.SUSPND = 0;
000000 92??           00515         BCF     _UCONbits, 1
                      00516 ;       .line   467; src/picUSB.c       UIEbits.ACTVIE = 0;
000002 94??           00517         BCF     _UIEbits, 2
                      00518 ;       .line   468; src/picUSB.c       UIRbits.ACTVIF = 0;
000004 94??           00519         BCF     _UIRbits, 2
000006 0012           00520         RETURN  
                      00521 
                      00522 ; ; Starting pCode block
                      00523 S_picUSB__EnableUSBModule       code
000000                00524 _EnableUSBModule:
                      00525 ;       .line   444; src/picUSB.c       if(UCONbits.USBEN == 0)
000000 B6??           00526         BTFSC   _UCONbits, 3
000002 D???           00527         BRA     _00370_DS_
                      00528 ;       .line   446; src/picUSB.c       UCON = 0;
000004 6A??           00529         CLRF    _UCON
                      00530 ;       .line   447; src/picUSB.c       UIE = 0;
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000006 6A??           00531         CLRF    _UIE
                      00532 ;       .line   448; src/picUSB.c       UCONbits.USBEN = 1;
000008 86??           00533         BSF     _UCONbits, 3
                      00534 ;       .line   449; src/picUSB.c       deviceState = ATTACHED;
00000A 0E01           00535         MOVLW   0x01
00000C ????           00536         BANKSEL _deviceState
00000E 6F??           00537         MOVWF   _deviceState, B
000010                00538 _00370_DS_:
000010 ????           00539         BANKSEL _deviceState
                      00540 ;       .line   453; src/picUSB.c       if ((deviceState == ATTACHED) && !UCONbits.SE0)
000012 51??           00541         MOVF    _deviceState, W, B
000014 0A01           00542         XORLW   0x01
000016 E1??           00543         BNZ     _00374_DS_
000018 BA??           00544         BTFSC   _UCONbits, 5
00001A D???           00545         BRA     _00374_DS_
                      00546 ;       .line   455; src/picUSB.c       UIR = 0;
00001C 6A??           00547         CLRF    _UIR
                      00548 ;       .line   456; src/picUSB.c       UIE = 0;
00001E 6A??           00549         CLRF    _UIE
                      00550 ;       .line   457; src/picUSB.c       UIEbits.URSTIE = 1;
000020 80??           00551         BSF     _UIEbits, 0
                      00552 ;       .line   458; src/picUSB.c       UIEbits.IDLEIE = 1;
000022 88??           00553         BSF     _UIEbits, 4
                      00554 ;       .line   459; src/picUSB.c       deviceState = POWERED;
000024 0E02           00555         MOVLW   0x02
000026 ????           00556         BANKSEL _deviceState
000028 6F??           00557         MOVWF   _deviceState, B
00002A                00558 _00374_DS_:
00002A 0012           00559         RETURN  
                      00560 
                      00561 ; ; Starting pCode block
                      00562 S_picUSB__ProcessControlTransfer        code
000000                00563 _ProcessControlTransfer:
                      00564 ;       .line   360; src/picUSB.c       void ProcessControlTransfer()
000000 C??? FFE5      00565         MOVFF   r0x00, POSTDEC1
000004 C??? FFE5      00566         MOVFF   r0x01, POSTDEC1
                      00567 ;       .line   363; src/picUSB.c       byte PID, end_point = USTAT >> 3;
000008 38??           00568         SWAPF   _USTAT, W
00000A 44E8           00569         RLNCF   WREG, W
00000C 0B1F           00570         ANDLW   0x1f
00000E 6E??           00571         MOVWF   r0x00
                      00572 ;       .line   365; src/picUSB.c       if (end_point == 0) // Endpoint 0
000010 50??           00573         MOVF    r0x00, W
000012 A4D8           00574         BTFSS   STATUS, 2
000014 D???           00575         BRA     _00319_DS_
                      00576 ;       .line   368; src/picUSB.c       if (USTATbits.DIR == OUT)
000016 B4??           00577         BTFSC   _USTATbits, 2
000018 D???           00578         BRA     _00314_DS_
                      00579 ;       .line   372; src/picUSB.c       PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
00001A 0E3C           00580         MOVLW   0x3c
00001C ????           00581         BANKSEL _ep_bdt
00001E 15??           00582         ANDWF   _ep_bdt, W, B
000020 6E??           00583         MOVWF   r0x01
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000022 40??           00584         RRNCF   r0x01, W
000024 40E8           00585         RRNCF   WREG, W
000026 0B3F           00586         ANDLW   0x3f
                      00587 ; #     MOVWF   r0x01
                      00588 ; #     MOVF    r0x01, W
                      00589 ;       .line   373; src/picUSB.c       if (PID == 0x0D)
000028 0A0D           00590         XORLW   0x0d
00002A E1??           00591         BNZ     _00300_DS_
                      00592 ;       .line   375; src/picUSB.c       SetupStage();
00002C EC?? F???      00593         CALL    _SetupStage
000030 D???           00594         BRA     _00321_DS_
000032                00595 _00300_DS_:
000032 ????           00596         BANKSEL _ctrlTransferStage
                      00597 ;       .line   377; src/picUSB.c       else if (ctrlTransferStage == DATA_OUT_STAGE)
000034 51??           00598         MOVF    _ctrlTransferStage, W, B
000036 0A01           00599         XORLW   0x01
000038 E1??           00600         BNZ     _00297_DS_
                      00601 ;       .line   381; src/picUSB.c       OutDataStage(0);
00003A 0E00           00602         MOVLW   0x00
00003C 6AE5           00603         CLRF    POSTDEC1
00003E EC?? F???      00604         CALL    _OutDataStage
000042 52E6           00605         MOVF    POSTINC1, F
000044 ????           00606         BANKSEL _ep_bdt
                      00607 ;       .line   384; src/picUSB.c       if(EP_OUT_BD(0).Stat.DTS)
000046 AD??           00608         BTFSS   _ep_bdt, 6, B
000048 D???           00609         BRA     _00294_DS_
                      00610 ;       .line   385; src/picUSB.c       EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
00004A 0E88           00611         MOVLW   0x88
                      00612 ; removed redundant BANKSEL
00004C 6F??           00613         MOVWF   _ep_bdt, B
00004E D???           00614         BRA     _00321_DS_
000050                00615 _00294_DS_:
                      00616 ;       .line   387; src/picUSB.c       EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
000050 0EC8           00617         MOVLW   0xc8
000052 ????           00618         BANKSEL _ep_bdt
000054 6F??           00619         MOVWF   _ep_bdt, B
000056 D???           00620         BRA     _00321_DS_
000058                00621 _00297_DS_:
                      00622 ;       .line   393; src/picUSB.c       WaitForSetupStage();
000058 EC?? F???      00623         CALL    _WaitForSetupStage
00005C D???           00624         BRA     _00321_DS_
00005E                00625 _00314_DS_:
                      00626 ;       .line   400; src/picUSB.c       if ((UADDR == 0) && (deviceState == ADDRESS))
00005E 50??           00627         MOVF    _UADDR, W
000060 E1??           00628         BNZ     _00305_DS_
000062 ????           00629         BANKSEL _deviceState
000064 51??           00630         MOVF    _deviceState, W, B
000066 0A04           00631         XORLW   0x04
000068 E1??           00632         BNZ     _00305_DS_
                      00633 ;       .line   404; src/picUSB.c       UADDR = SetupPacket.wValue0;
00006A C??? F???      00634         MOVFF   (_SetupPacket + 2), _UADDR
                      00635 ;       .line   405; src/picUSB.c       if(UADDR == 0)
00006E 50??           00636         MOVF    _UADDR, W
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000070 E1??           00637         BNZ     _00305_DS_
                      00638 ;       .line   408; src/picUSB.c       deviceState = DEFAULT;
000072 0E03           00639         MOVLW   0x03
000074 ????           00640         BANKSEL _deviceState
000076 6F??           00641         MOVWF   _deviceState, B
000078                00642 _00305_DS_:
000078 ????           00643         BANKSEL _ctrlTransferStage
                      00644 ;       .line   411; src/picUSB.c       if (ctrlTransferStage == DATA_IN_STAGE)
00007A 51??           00645         MOVF    _ctrlTransferStage, W, B
00007C 0A02           00646         XORLW   0x02
00007E E1??           00647         BNZ     _00311_DS_
                      00648 ;       .line   414; src/picUSB.c       InDataStage(0);
000080 0E00           00649         MOVLW   0x00
000082 6AE5           00650         CLRF    POSTDEC1
000084 EC?? F???      00651         CALL    _InDataStage
000088 52E6           00652         MOVF    POSTINC1, F
00008A ????           00653         BANKSEL (_ep_bdt + 4)
                      00654 ;       .line   417; src/picUSB.c       if(EP_IN_BD(0).Stat.DTS)
00008C AD??           00655         BTFSS   (_ep_bdt + 4), 6, B
00008E D???           00656         BRA     _00308_DS_
                      00657 ;       .line   418; src/picUSB.c       EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
000090 0E88           00658         MOVLW   0x88
                      00659 ; removed redundant BANKSEL
000092 6F??           00660         MOVWF   (_ep_bdt + 4), B
000094 D???           00661         BRA     _00321_DS_
000096                00662 _00308_DS_:
                      00663 ;       .line   420; src/picUSB.c       EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
000096 0EC8           00664         MOVLW   0xc8
000098 ????           00665         BANKSEL (_ep_bdt + 4)
00009A 6F??           00666         MOVWF   (_ep_bdt + 4), B
00009C D???           00667         BRA     _00321_DS_
00009E                00668 _00311_DS_:
                      00669 ;       .line   426; src/picUSB.c       WaitForSetupStage();
00009E EC?? F???      00670         CALL    _WaitForSetupStage
0000A2 D???           00671         BRA     _00321_DS_
0000A4                00672 _00319_DS_:
                      00673 ;       .line   435; src/picUSB.c       if (!USTATbits.DIR) // If OUT
0000A4 B4??           00674         BTFSC   _USTATbits, 2
0000A6 D???           00675         BRA     _00321_DS_
                      00676 ;       .line   436; src/picUSB.c       usb_ep_data_out_callback(end_point);
0000A8 50??           00677         MOVF    r0x00, W
0000AA 6EE5           00678         MOVWF   POSTDEC1
0000AC EC?? F???      00679         CALL    _usb_ep_data_out_callback
0000B0 52E6           00680         MOVF    POSTINC1, F
0000B2                00681 _00321_DS_:
0000B2 CFE4 F???      00682         MOVFF   PREINC1, r0x01
0000B6 CFE4 F???      00683         MOVFF   PREINC1, r0x00
0000BA 0012           00684         RETURN  
                      00685 
                      00686 ; ; Starting pCode block
                      00687 S_picUSB__WaitForSetupStage     code
000000                00688 _WaitForSetupStage:
000000 ????           00689         BANKSEL _ctrlTransferStage
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00690 ;       .line   348; src/picUSB.c       ctrlTransferStage = SETUP_STAGE;
000002 6B??           00691         CLRF    _ctrlTransferStage, B
                      00692 ;       .line   349; src/picUSB.c       EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
000004 0E40           00693         MOVLW   0x40
000006 ????           00694         BANKSEL (_ep_bdt + 1)
000008 6F??           00695         MOVWF   (_ep_bdt + 1), B
                      00696 ;       .line   350; src/picUSB.c       EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
00000A 0E??           00697         MOVLW   LOW(_SetupPacket)
                      00698 ; removed redundant BANKSEL
00000C 6F??           00699         MOVWF   (_ep_bdt + 2), B
00000E 0E??           00700         MOVLW   HIGH(_SetupPacket)
                      00701 ; removed redundant BANKSEL
000010 6F??           00702         MOVWF   (_ep_bdt + 3), B
                      00703 ;       .line   352; src/picUSB.c       EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
000012 0E88           00704         MOVLW   0x88
                      00705 ; removed redundant BANKSEL
000014 6F??           00706         MOVWF   _ep_bdt, B
                      00707 ; removed redundant BANKSEL
                      00708 ;       .line   353; src/picUSB.c       EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
000016 6B??           00709         CLRF    (_ep_bdt + 4), B
000018 0012           00710         RETURN  
                      00711 
                      00712 ; ; Starting pCode block
                      00713 S_picUSB__SetupStage    code
000000                00714 _SetupStage:
                      00715 ;       .line   279; src/picUSB.c       void SetupStage()
000000 C??? FFE5      00716         MOVFF   r0x00, POSTDEC1
000004 ????           00717         BANKSEL (_ep_bdt + 4)
                      00718 ;       .line   283; src/picUSB.c       EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
000006 51??           00719         MOVF    (_ep_bdt + 4), W, B
000008 6E??           00720         MOVWF   r0x00
00000A 9E??           00721         BCF     r0x00, 7
00000C 50??           00722         MOVF    r0x00, W
                      00723 ; removed redundant BANKSEL
00000E 6F??           00724         MOVWF   (_ep_bdt + 4), B
                      00725 ; removed redundant BANKSEL
                      00726 ;       .line   284; src/picUSB.c       EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
000010 51??           00727         MOVF    _ep_bdt, W, B
000012 6E??           00728         MOVWF   r0x00
000014 9E??           00729         BCF     r0x00, 7
000016 50??           00730         MOVF    r0x00, W
                      00731 ; removed redundant BANKSEL
000018 6F??           00732         MOVWF   _ep_bdt, B
00001A ????           00733         BANKSEL _ctrlTransferStage
                      00734 ;       .line   287; src/picUSB.c       ctrlTransferStage = SETUP_STAGE;
00001C 6B??           00735         CLRF    _ctrlTransferStage, B
00001E ????           00736         BANKSEL _requestHandled
                      00737 ;       .line   288; src/picUSB.c       requestHandled = 0;                   // Default is that request hasn't been handled
000020 6B??           00738         CLRF    _requestHandled, B
000022 ????           00739         BANKSEL _wCount
                      00740 ;       .line   289; src/picUSB.c       wCount = 0;                           // No bytes transferred
000024 6B??           00741         CLRF    _wCount, B
                      00742 ; removed redundant BANKSEL
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000026 6B??           00743         CLRF    (_wCount + 1), B
                      00744 ;       .line   292; src/picUSB.c       ProcessStandardRequest();
000028 EC?? F???      00745         CALL    _ProcessStandardRequest
00002C ????           00746         BANKSEL _requestHandled
                      00747 ;       .line   295; src/picUSB.c       if (!requestHandled)
00002E 51??           00748         MOVF    _requestHandled, W, B
000030 E1??           00749         BNZ     _00266_DS_
                      00750 ;       .line   298; src/picUSB.c       EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
000032 0E40           00751         MOVLW   0x40
000034 ????           00752         BANKSEL (_ep_bdt + 1)
000036 6F??           00753         MOVWF   (_ep_bdt + 1), B
                      00754 ;       .line   299; src/picUSB.c       EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
000038 0E??           00755         MOVLW   LOW(_SetupPacket)
                      00756 ; removed redundant BANKSEL
00003A 6F??           00757         MOVWF   (_ep_bdt + 2), B
00003C 0E??           00758         MOVLW   HIGH(_SetupPacket)
                      00759 ; removed redundant BANKSEL
00003E 6F??           00760         MOVWF   (_ep_bdt + 3), B
                      00761 ; #     MOVLW   0x84
                      00762 ; #     MOVWF   _ep_bdt, B
                      00763 ; #     MOVLW   0x84
                      00764 ;       .line   300; src/picUSB.c       EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
000040 0E84           00765         MOVLW   0x84
                      00766 ; removed redundant BANKSEL
                      00767 ;       .line   301; src/picUSB.c       EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
000042 6F??           00768         MOVWF   _ep_bdt, B
                      00769 ; removed redundant BANKSEL
000044 6F??           00770         MOVWF   (_ep_bdt + 4), B
000046 D???           00771         BRA     _00267_DS_
000048                00772 _00266_DS_:
000048 ????           00773         BANKSEL _SetupPacket
                      00774 ;       .line   304; src/picUSB.c       else if (SetupPacket.bmRequestType & 0x80)
00004A AF??           00775         BTFSS   _SetupPacket, 7, B
00004C D???           00776         BRA     _00263_DS_
00004E ????           00777         BANKSEL (_wCount + 1)
                      00778 ;       .line   307; src/picUSB.c       if(SetupPacket.wLength < wCount)
000050 51??           00779         MOVF    (_wCount + 1), W, B
000052 ????           00780         BANKSEL (_SetupPacket + 7)
000054 5D??           00781         SUBWF   (_SetupPacket + 7), W, B
000056 E1??           00782         BNZ     _00283_DS_
000058 ????           00783         BANKSEL _wCount
00005A 51??           00784         MOVF    _wCount, W, B
00005C ????           00785         BANKSEL (_SetupPacket + 6)
00005E 5D??           00786         SUBWF   (_SetupPacket + 6), W, B
000060                00787 _00283_DS_:
000060 E2??           00788         BC      _00261_DS_
                      00789 ;       .line   308; src/picUSB.c       wCount = SetupPacket.wLength;
000062 C??? F???      00790         MOVFF   (_SetupPacket + 6), _wCount
000066 C??? F???      00791         MOVFF   (_SetupPacket + 7), (_wCount + 1)
00006A                00792 _00261_DS_:
                      00793 ;       .line   310; src/picUSB.c       InDataStage(0);
00006A 0E00           00794         MOVLW   0x00
00006C 6AE5           00795         CLRF    POSTDEC1
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00006E EC?? F???      00796         CALL    _InDataStage
000072 52E6           00797         MOVF    POSTINC1, F
                      00798 ;       .line   311; src/picUSB.c       ctrlTransferStage = DATA_IN_STAGE;
000074 0E02           00799         MOVLW   0x02
000076 ????           00800         BANKSEL _ctrlTransferStage
000078 6F??           00801         MOVWF   _ctrlTransferStage, B
                      00802 ;       .line   313; src/picUSB.c       EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
00007A 0E40           00803         MOVLW   0x40
00007C ????           00804         BANKSEL (_ep_bdt + 1)
00007E 6F??           00805         MOVWF   (_ep_bdt + 1), B
                      00806 ;       .line   314; src/picUSB.c       EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
000080 0E??           00807         MOVLW   LOW(_SetupPacket)
                      00808 ; removed redundant BANKSEL
000082 6F??           00809         MOVWF   (_ep_bdt + 2), B
000084 0E??           00810         MOVLW   HIGH(_SetupPacket)
                      00811 ; removed redundant BANKSEL
000086 6F??           00812         MOVWF   (_ep_bdt + 3), B
                      00813 ;       .line   315; src/picUSB.c       EP_OUT_BD(0).Stat.uc = BDS_UOWN;
000088 0E80           00814         MOVLW   0x80
                      00815 ; removed redundant BANKSEL
00008A 6F??           00816         MOVWF   _ep_bdt, B
                      00817 ;       .line   318; src/picUSB.c       EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
00008C 0E??           00818         MOVLW   LOW(_controlTransferBuffer)
                      00819 ; removed redundant BANKSEL
00008E 6F??           00820         MOVWF   (_ep_bdt + 6), B
000090 0E??           00821         MOVLW   HIGH(_controlTransferBuffer)
                      00822 ; removed redundant BANKSEL
000092 6F??           00823         MOVWF   (_ep_bdt + 7), B
                      00824 ;       .line   320; src/picUSB.c       EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
000094 0EC8           00825         MOVLW   0xc8
                      00826 ; removed redundant BANKSEL
000096 6F??           00827         MOVWF   (_ep_bdt + 4), B
000098 D???           00828         BRA     _00267_DS_
00009A                00829 _00263_DS_:
                      00830 ;       .line   326; src/picUSB.c       ctrlTransferStage = DATA_OUT_STAGE;
00009A 0E01           00831         MOVLW   0x01
00009C ????           00832         BANKSEL _ctrlTransferStage
00009E 6F??           00833         MOVWF   _ctrlTransferStage, B
0000A0 ????           00834         BANKSEL (_ep_bdt + 5)
                      00835 ;       .line   329; src/picUSB.c       EP_IN_BD(0).Cnt = 0;
0000A2 6B??           00836         CLRF    (_ep_bdt + 5), B
                      00837 ;       .line   330; src/picUSB.c       EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0000A4 0EC8           00838         MOVLW   0xc8
                      00839 ; removed redundant BANKSEL
0000A6 6F??           00840         MOVWF   (_ep_bdt + 4), B
                      00841 ;       .line   333; src/picUSB.c       EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0000A8 0E40           00842         MOVLW   0x40
                      00843 ; removed redundant BANKSEL
0000AA 6F??           00844         MOVWF   (_ep_bdt + 1), B
                      00845 ;       .line   334; src/picUSB.c       EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
0000AC 0E??           00846         MOVLW   LOW(_controlTransferBuffer)
                      00847 ; removed redundant BANKSEL
0000AE 6F??           00848         MOVWF   (_ep_bdt + 2), B
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000B0 0E??           00849         MOVLW   HIGH(_controlTransferBuffer)
                      00850 ; removed redundant BANKSEL
0000B2 6F??           00851         MOVWF   (_ep_bdt + 3), B
                      00852 ;       .line   336; src/picUSB.c       EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0000B4 0EC8           00853         MOVLW   0xc8
                      00854 ; removed redundant BANKSEL
0000B6 6F??           00855         MOVWF   _ep_bdt, B
0000B8                00856 _00267_DS_:
                      00857 ;       .line   340; src/picUSB.c       UCONbits.PKTDIS = 0;
0000B8 98??           00858         BCF     _UCONbits, 4
0000BA CFE4 F???      00859         MOVFF   PREINC1, r0x00
0000BE 0012           00860         RETURN  
                      00861 
                      00862 ; ; Starting pCode block
                      00863 S_picUSB__OutDataStage  code
000000                00864 _OutDataStage:
                      00865 ;       .line   256; src/picUSB.c       void OutDataStage(unsigned char ep)
000000 CFD9 FFE5      00866         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00867         MOVFF   FSR1L, FSR2L
000008 C??? FFE5      00868         MOVFF   r0x00, POSTDEC1
00000C C??? FFE5      00869         MOVFF   r0x01, POSTDEC1
000010 C??? FFE5      00870         MOVFF   r0x02, POSTDEC1
000014 C??? FFE5      00871         MOVFF   r0x03, POSTDEC1
000018 C??? FFE5      00872         MOVFF   r0x04, POSTDEC1
00001C C??? FFE5      00873         MOVFF   r0x05, POSTDEC1
000020 C??? FFE5      00874         MOVFF   r0x06, POSTDEC1
000024 C??? FFE5      00875         MOVFF   r0x07, POSTDEC1
000028 C??? FFE5      00876         MOVFF   r0x08, POSTDEC1
00002C C??? FFE5      00877         MOVFF   r0x09, POSTDEC1
000030 0E02           00878         MOVLW   0x02
000032 CFDB F???      00879         MOVFF   PLUSW2, r0x00
                      00880 ;       .line   260; src/picUSB.c       bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
000036 44??           00881         RLNCF   r0x00, W
000038 0BFE           00882         ANDLW   0xfe
                      00883 ; #     MOVWF   r0x01
                      00884 ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                      00885 ; #     MOVF    r0x01, W
00003A 0D04           00886         MULLW   0x04
00003C 50F4           00887         MOVF    PRODH, W
00003E 6E??           00888         MOVWF   r0x02
000040 CFF3 F???      00889         MOVFF   PRODL, r0x00
000044 0E??           00890         MOVLW   LOW(_ep_bdt)
000046 24??           00891         ADDWF   r0x00, W
000048 6E??           00892         MOVWF   r0x01
00004A 0E??           00893         MOVLW   HIGH(_ep_bdt)
00004C 20??           00894         ADDWFC  r0x02, W
00004E 6E??           00895         MOVWF   r0x03
000050 C??? FFE9      00896         MOVFF   r0x01, FSR0L
000054 C??? FFEA      00897         MOVFF   r0x03, FSR0H
000058 CFEF F???      00898         MOVFF   INDF0, r0x01
00005C 0E03           00899         MOVLW   0x03
00005E 16??           00900         ANDWF   r0x01, F
000060 50??           00901         MOVF    r0x01, W
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000062 6E??           00902         MOVWF   r0x05
000064 6A??           00903         CLRF    r0x04
000066 0E??           00904         MOVLW   LOW(_ep_bdt)
000068 26??           00905         ADDWF   r0x00, F
00006A 0E??           00906         MOVLW   HIGH(_ep_bdt)
00006C 22??           00907         ADDWFC  r0x02, F
00006E 4A??           00908         INFSNZ  r0x00, F
000070 2A??           00909         INCF    r0x02, F
000072 C??? FFE9      00910         MOVFF   r0x00, FSR0L
000076 C??? FFEA      00911         MOVFF   r0x02, FSR0H
00007A CFEF F???      00912         MOVFF   INDF0, r0x00
00007E 6A??           00913         CLRF    r0x01
000080 50??           00914         MOVF    r0x04, W
000082 12??           00915         IORWF   r0x00, F
000084 50??           00916         MOVF    r0x05, W
000086 12??           00917         IORWF   r0x01, F
                      00918 ;       .line   263; src/picUSB.c       wCount = wCount + bufferSize;
000088 50??           00919         MOVF    r0x00, W
00008A ????           00920         BANKSEL _wCount
00008C 27??           00921         ADDWF   _wCount, F, B
00008E 50??           00922         MOVF    r0x01, W
                      00923 ; removed redundant BANKSEL
000090 23??           00924         ADDWFC  (_wCount + 1), F, B
                      00925 ;       .line   265; src/picUSB.c       outPtr = (byte*)&controlTransferBuffer;
000092 0E??           00926         MOVLW   HIGH(_controlTransferBuffer)
000094 ????           00927         BANKSEL (_outPtr + 1)
000096 6F??           00928         MOVWF   (_outPtr + 1), B
000098 0E??           00929         MOVLW   LOW(_controlTransferBuffer)
                      00930 ; removed redundant BANKSEL
00009A 6F??           00931         MOVWF   _outPtr, B
00009C 0E80           00932         MOVLW   0x80
                      00933 ; removed redundant BANKSEL
00009E 6F??           00934         MOVWF   (_outPtr + 2), B
                      00935 ;       .line   267; src/picUSB.c       for (i=0;i<bufferSize;i++)
0000A0 6A??           00936         CLRF    r0x02
0000A2 6A??           00937         CLRF    r0x03
0000A4                00938 _00238_DS_:
0000A4 50??           00939         MOVF    r0x01, W
0000A6 5C??           00940         SUBWF   r0x03, W
0000A8 E1??           00941         BNZ     _00253_DS_
0000AA 50??           00942         MOVF    r0x00, W
0000AC 5C??           00943         SUBWF   r0x02, W
0000AE                00944 _00253_DS_:
0000AE E2??           00945         BC      _00242_DS_
                      00946 ;       .line   268; src/picUSB.c       *inPtr++ = *outPtr++;
0000B0 C??? F???      00947         MOVFF   _inPtr, r0x04
0000B4 C??? F???      00948         MOVFF   (_inPtr + 1), r0x05
0000B8 C??? F???      00949         MOVFF   (_inPtr + 2), r0x06
0000BC C??? F???      00950         MOVFF   _outPtr, r0x07
0000C0 C??? F???      00951         MOVFF   (_outPtr + 1), r0x08
0000C4 C??? F???      00952         MOVFF   (_outPtr + 2), r0x09
0000C8 C??? FFE9      00953         MOVFF   r0x07, FSR0L
0000CC C??? FFF3      00954         MOVFF   r0x08, PRODL
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000D0 50??           00955         MOVF    r0x09, W
0000D2 EC?? F???      00956         CALL    __gptrget1
0000D6 6E??           00957         MOVWF   r0x07
0000D8 ????           00958         BANKSEL _outPtr
0000DA 2B??           00959         INCF    _outPtr, F, B
0000DC E3??           00960         BNC     _00254_DS_
                      00961 ; removed redundant BANKSEL
0000DE 3F??           00962         INCFSZ  (_outPtr + 1), F, B
0000E0 D???           00963         BRA     _10413_DS_
                      00964 ; removed redundant BANKSEL
0000E2 2B??           00965         INCF    (_outPtr + 2), F, B
0000E4                00966 _10413_DS_:
0000E4                00967 _00254_DS_:
0000E4 C??? FFE5      00968         MOVFF   r0x07, POSTDEC1
0000E8 C??? FFE9      00969         MOVFF   r0x04, FSR0L
0000EC C??? FFF3      00970         MOVFF   r0x05, PRODL
0000F0 50??           00971         MOVF    r0x06, W
0000F2 EC?? F???      00972         CALL    __gptrput1
0000F6 ????           00973         BANKSEL _inPtr
0000F8 2B??           00974         INCF    _inPtr, F, B
0000FA E3??           00975         BNC     _00255_DS_
                      00976 ; removed redundant BANKSEL
0000FC 3F??           00977         INCFSZ  (_inPtr + 1), F, B
0000FE D???           00978         BRA     _20414_DS_
                      00979 ; removed redundant BANKSEL
000100 2B??           00980         INCF    (_inPtr + 2), F, B
000102                00981 _20414_DS_:
000102                00982 _00255_DS_:
                      00983 ;       .line   267; src/picUSB.c       for (i=0;i<bufferSize;i++)
000102 4A??           00984         INFSNZ  r0x02, F
000104 2A??           00985         INCF    r0x03, F
000106 D???           00986         BRA     _00238_DS_
000108                00987 _00242_DS_:
000108 CFE4 F???      00988         MOVFF   PREINC1, r0x09
00010C CFE4 F???      00989         MOVFF   PREINC1, r0x08
000110 CFE4 F???      00990         MOVFF   PREINC1, r0x07
000114 CFE4 F???      00991         MOVFF   PREINC1, r0x06
000118 CFE4 F???      00992         MOVFF   PREINC1, r0x05
00011C CFE4 F???      00993         MOVFF   PREINC1, r0x04
000120 CFE4 F???      00994         MOVFF   PREINC1, r0x03
000124 CFE4 F???      00995         MOVFF   PREINC1, r0x02
000128 CFE4 F???      00996         MOVFF   PREINC1, r0x01
00012C CFE4 F???      00997         MOVFF   PREINC1, r0x00
000130 CFE4 FFD9      00998         MOVFF   PREINC1, FSR2L
000134 0012           00999         RETURN  
                      01000 
                      01001 ; ; Starting pCode block
                      01002 S_picUSB__InDataStage   code
000000                01003 _InDataStage:
                      01004 ;       .line   222; src/picUSB.c       void InDataStage(unsigned char ep)
000000 CFD9 FFE5      01005         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      01006         MOVFF   FSR1L, FSR2L
000008 C??? FFE5      01007         MOVFF   r0x00, POSTDEC1
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00000C C??? FFE5      01008         MOVFF   r0x01, POSTDEC1
000010 C??? FFE5      01009         MOVFF   r0x02, POSTDEC1
000014 C??? FFE5      01010         MOVFF   r0x03, POSTDEC1
000018 C??? FFE5      01011         MOVFF   r0x04, POSTDEC1
00001C C??? FFE5      01012         MOVFF   r0x05, POSTDEC1
000020 C??? FFE5      01013         MOVFF   r0x06, POSTDEC1
000024 C??? FFE5      01014         MOVFF   r0x07, POSTDEC1
000028 C??? FFE5      01015         MOVFF   r0x08, POSTDEC1
00002C 0E02           01016         MOVLW   0x02
00002E CFDB F???      01017         MOVFF   PLUSW2, r0x00
                      01018 ;       .line   228; src/picUSB.c       if(wCount < EP0_BUFFER_SIZE)
000032 0E00           01019         MOVLW   0x00
000034 ????           01020         BANKSEL (_wCount + 1)
000036 5D??           01021         SUBWF   (_wCount + 1), W, B
000038 E1??           01022         BNZ     _00225_DS_
00003A 0E40           01023         MOVLW   0x40
                      01024 ; removed redundant BANKSEL
00003C 5D??           01025         SUBWF   _wCount, W, B
00003E                01026 _00225_DS_:
00003E E2??           01027         BC      _00207_DS_
                      01028 ;       .line   229; src/picUSB.c       bufferSize = wCount;
000040 C??? F???      01029         MOVFF   _wCount, r0x01
000044 C??? F???      01030         MOVFF   (_wCount + 1), r0x02
000048 D???           01031         BRA     _00208_DS_
00004A                01032 _00207_DS_:
                      01033 ;       .line   231; src/picUSB.c       bufferSize = EP0_BUFFER_SIZE;
00004A 0E40           01034         MOVLW   0x40
00004C 6E??           01035         MOVWF   r0x01
00004E 6A??           01036         CLRF    r0x02
000050                01037 _00208_DS_:
                      01038 ;       .line   235; src/picUSB.c       EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
000050 44??           01039         RLNCF   r0x00, W
000052 0BFE           01040         ANDLW   0xfe
000054 6E??           01041         MOVWF   r0x03
000056 28??           01042         INCF    r0x03, W
                      01043 ; #     MOVWF   r0x00
                      01044 ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                      01045 ; #     MOVF    r0x00, W
000058 0D04           01046         MULLW   0x04
00005A 50F4           01047         MOVF    PRODH, W
00005C 6E??           01048         MOVWF   r0x03
00005E CFF3 F???      01049         MOVFF   PRODL, r0x00
000062 0E??           01050         MOVLW   LOW(_ep_bdt)
000064 24??           01051         ADDWF   r0x00, W
000066 6E??           01052         MOVWF   r0x04
000068 0E??           01053         MOVLW   HIGH(_ep_bdt)
00006A 20??           01054         ADDWFC  r0x03, W
00006C 6E??           01055         MOVWF   r0x05
00006E 0E??           01056         MOVLW   LOW(_ep_bdt)
000070 24??           01057         ADDWF   r0x00, W
000072 6E??           01058         MOVWF   r0x06
000074 0E??           01059         MOVLW   HIGH(_ep_bdt)
000076 20??           01060         ADDWFC  r0x03, W
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000078 6E??           01061         MOVWF   r0x07
00007A C??? FFE9      01062         MOVFF   r0x06, FSR0L
00007E C??? FFEA      01063         MOVFF   r0x07, FSR0H
000082 CFEF F???      01064         MOVFF   INDF0, r0x06
000086 0EFC           01065         MOVLW   0xfc
000088 16??           01066         ANDWF   r0x06, F
00008A C??? FFE9      01067         MOVFF   r0x04, FSR0L
00008E C??? FFEA      01068         MOVFF   r0x05, FSR0H
000092 C??? FFEF      01069         MOVFF   r0x06, INDF0
                      01070 ;       .line   236; src/picUSB.c       EP_IN_BD(ep).Stat.uc |= (byte)((bufferSize & 0x0300) >> 8);
000096 0E??           01071         MOVLW   LOW(_ep_bdt)
000098 24??           01072         ADDWF   r0x00, W
00009A 6E??           01073         MOVWF   r0x04
00009C 0E??           01074         MOVLW   HIGH(_ep_bdt)
00009E 20??           01075         ADDWFC  r0x03, W
0000A0 6E??           01076         MOVWF   r0x05
0000A2 0E??           01077         MOVLW   LOW(_ep_bdt)
0000A4 24??           01078         ADDWF   r0x00, W
0000A6 6E??           01079         MOVWF   r0x06
0000A8 0E??           01080         MOVLW   HIGH(_ep_bdt)
0000AA 20??           01081         ADDWFC  r0x03, W
0000AC 6E??           01082         MOVWF   r0x07
0000AE C??? FFE9      01083         MOVFF   r0x06, FSR0L
0000B2 C??? FFEA      01084         MOVFF   r0x07, FSR0H
0000B6 CFEF F???      01085         MOVFF   INDF0, r0x06
0000BA 0E03           01086         MOVLW   0x03
0000BC 14??           01087         ANDWF   r0x02, W
                      01088 ; #     MOVWF   r0x08
                      01089 ; #     MOVF    r0x08, W
0000BE 12??           01090         IORWF   r0x06, F
0000C0 C??? FFE9      01091         MOVFF   r0x04, FSR0L
0000C4 C??? FFEA      01092         MOVFF   r0x05, FSR0H
0000C8 C??? FFEF      01093         MOVFF   r0x06, INDF0
                      01094 ;       .line   237; src/picUSB.c       EP_IN_BD(ep).Cnt = (byte)(bufferSize & 0xFF);
0000CC 0E??           01095         MOVLW   LOW(_ep_bdt)
0000CE 24??           01096         ADDWF   r0x00, W
0000D0 6E??           01097         MOVWF   r0x04
0000D2 0E??           01098         MOVLW   HIGH(_ep_bdt)
0000D4 20??           01099         ADDWFC  r0x03, W
0000D6 6E??           01100         MOVWF   r0x05
0000D8 4A??           01101         INFSNZ  r0x04, F
0000DA 2A??           01102         INCF    r0x05, F
0000DC 50??           01103         MOVF    r0x01, W
0000DE 6E??           01104         MOVWF   r0x06
0000E0 C??? FFE9      01105         MOVFF   r0x04, FSR0L
0000E4 C??? FFEA      01106         MOVFF   r0x05, FSR0H
0000E8 C??? FFEF      01107         MOVFF   r0x06, INDF0
                      01108 ;       .line   238; src/picUSB.c       EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
0000EC 0E??           01109         MOVLW   LOW(_ep_bdt)
0000EE 26??           01110         ADDWF   r0x00, F
0000F0 0E??           01111         MOVLW   HIGH(_ep_bdt)
0000F2 22??           01112         ADDWFC  r0x03, F
0000F4 0E02           01113         MOVLW   0x02
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000F6 26??           01114         ADDWF   r0x00, F
0000F8 B0D8           01115         BTFSC   STATUS, 0
0000FA 2A??           01116         INCF    r0x03, F
0000FC 0E??           01117         MOVLW   LOW(_controlTransferBuffer)
0000FE 6E??           01118         MOVWF   r0x04
000100 0E??           01119         MOVLW   HIGH(_controlTransferBuffer)
000102 6E??           01120         MOVWF   r0x05
000104 C??? FFE9      01121         MOVFF   r0x00, FSR0L
000108 C??? FFEA      01122         MOVFF   r0x03, FSR0H
00010C C??? FFEE      01123         MOVFF   r0x04, POSTINC0
000110 C??? FFEF      01124         MOVFF   r0x05, INDF0
                      01125 ;       .line   243; src/picUSB.c       wCount = wCount - bufferSize;
000114 50??           01126         MOVF    r0x01, W
000116 ????           01127         BANKSEL _wCount
000118 5F??           01128         SUBWF   _wCount, F, B
00011A 50??           01129         MOVF    r0x02, W
                      01130 ; removed redundant BANKSEL
00011C 5B??           01131         SUBWFB  (_wCount + 1), F, B
                      01132 ;       .line   246; src/picUSB.c       inPtr = (byte *)&controlTransferBuffer;
00011E 0E??           01133         MOVLW   HIGH(_controlTransferBuffer)
000120 ????           01134         BANKSEL (_inPtr + 1)
000122 6F??           01135         MOVWF   (_inPtr + 1), B
000124 0E??           01136         MOVLW   LOW(_controlTransferBuffer)
                      01137 ; removed redundant BANKSEL
000126 6F??           01138         MOVWF   _inPtr, B
000128 0E80           01139         MOVLW   0x80
                      01140 ; removed redundant BANKSEL
00012A 6F??           01141         MOVWF   (_inPtr + 2), B
                      01142 ;       .line   248; src/picUSB.c       for (i=0;i<bufferSize;i++)
00012C 6A??           01143         CLRF    r0x00
00012E                01144 _00209_DS_:
00012E C??? F???      01145         MOVFF   r0x00, r0x03
000132 6A??           01146         CLRF    r0x04
000134 50??           01147         MOVF    r0x02, W
000136 5C??           01148         SUBWF   r0x04, W
000138 E1??           01149         BNZ     _00231_DS_
00013A 50??           01150         MOVF    r0x01, W
00013C 5C??           01151         SUBWF   r0x03, W
00013E                01152 _00231_DS_:
00013E E2??           01153         BC      _00213_DS_
                      01154 ;       .line   249; src/picUSB.c       *inPtr++ = *outPtr++;
000140 C??? F???      01155         MOVFF   _inPtr, r0x03
000144 C??? F???      01156         MOVFF   (_inPtr + 1), r0x04
000148 C??? F???      01157         MOVFF   (_inPtr + 2), r0x05
00014C C??? F???      01158         MOVFF   _outPtr, r0x06
000150 C??? F???      01159         MOVFF   (_outPtr + 1), r0x07
000154 C??? F???      01160         MOVFF   (_outPtr + 2), r0x08
000158 C??? FFE9      01161         MOVFF   r0x06, FSR0L
00015C C??? FFF3      01162         MOVFF   r0x07, PRODL
000160 50??           01163         MOVF    r0x08, W
000162 EC?? F???      01164         CALL    __gptrget1
000166 6E??           01165         MOVWF   r0x06
000168 ????           01166         BANKSEL _outPtr
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00016A 2B??           01167         INCF    _outPtr, F, B
00016C E3??           01168         BNC     _00232_DS_
                      01169 ; removed redundant BANKSEL
00016E 3F??           01170         INCFSZ  (_outPtr + 1), F, B
000170 D???           01171         BRA     _30415_DS_
                      01172 ; removed redundant BANKSEL
000172 2B??           01173         INCF    (_outPtr + 2), F, B
000174                01174 _30415_DS_:
000174                01175 _00232_DS_:
000174 C??? FFE5      01176         MOVFF   r0x06, POSTDEC1
000178 C??? FFE9      01177         MOVFF   r0x03, FSR0L
00017C C??? FFF3      01178         MOVFF   r0x04, PRODL
000180 50??           01179         MOVF    r0x05, W
000182 EC?? F???      01180         CALL    __gptrput1
000186 ????           01181         BANKSEL _inPtr
000188 2B??           01182         INCF    _inPtr, F, B
00018A E3??           01183         BNC     _00233_DS_
                      01184 ; removed redundant BANKSEL
00018C 3F??           01185         INCFSZ  (_inPtr + 1), F, B
00018E D???           01186         BRA     _40416_DS_
                      01187 ; removed redundant BANKSEL
000190 2B??           01188         INCF    (_inPtr + 2), F, B
000192                01189 _40416_DS_:
000192                01190 _00233_DS_:
                      01191 ;       .line   248; src/picUSB.c       for (i=0;i<bufferSize;i++)
000192 2A??           01192         INCF    r0x00, F
000194 D???           01193         BRA     _00209_DS_
000196                01194 _00213_DS_:
000196 CFE4 F???      01195         MOVFF   PREINC1, r0x08
00019A CFE4 F???      01196         MOVFF   PREINC1, r0x07
00019E CFE4 F???      01197         MOVFF   PREINC1, r0x06
0001A2 CFE4 F???      01198         MOVFF   PREINC1, r0x05
0001A6 CFE4 F???      01199         MOVFF   PREINC1, r0x04
0001AA CFE4 F???      01200         MOVFF   PREINC1, r0x03
0001AE CFE4 F???      01201         MOVFF   PREINC1, r0x02
0001B2 CFE4 F???      01202         MOVFF   PREINC1, r0x01
0001B6 CFE4 F???      01203         MOVFF   PREINC1, r0x00
0001BA CFE4 FFD9      01204         MOVFF   PREINC1, FSR2L
0001BE 0012           01205         RETURN  
                      01206 
                      01207 ; ; Starting pCode block
                      01208 S_picUSB__ProcessStandardRequest        code
000000                01209 _ProcessStandardRequest:
000000 ????           01210         BANKSEL _SetupPacket
                      01211 ;       .line   131; src/picUSB.c       if((SetupPacket.bmRequestType & 0x60) != 0x00)
000002 51??           01212         MOVF    _SetupPacket, W, B
                      01213 ; #     ANDLW   0x60
                      01214 ; #     BTFSC   STATUS, 2
                      01215 ; #     GOTO    _00142_DS_
                      01216 ; #     GOTO    _00163_DS_
                      01217 ; #     MOVF    (_SetupPacket + 1), W, B
                      01218 ;       .line   134; src/picUSB.c       return;
000004 0B60           01219         ANDLW   0x60
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01220 ;       .line   136; src/picUSB.c       if (SetupPacket.bRequest == SET_ADDRESS)
000006 A4D8           01221         BTFSS   STATUS, 2
000008 D???           01222         BRA     _00163_DS_
                      01223 ; removed redundant BANKSEL
00000A 51??           01224         MOVF    (_SetupPacket + 1), W, B
00000C 0A05           01225         XORLW   0x05
00000E E1??           01226         BNZ     _00161_DS_
                      01227 ;       .line   142; src/picUSB.c       requestHandled = 1;
000010 0E01           01228         MOVLW   0x01
000012 ????           01229         BANKSEL _requestHandled
000014 6F??           01230         MOVWF   _requestHandled, B
                      01231 ;       .line   143; src/picUSB.c       deviceState = ADDRESS;
000016 0E04           01232         MOVLW   0x04
000018 ????           01233         BANKSEL _deviceState
00001A 6F??           01234         MOVWF   _deviceState, B
                      01235 ;       .line   144; src/picUSB.c       deviceAddress = SetupPacket.wValue0;
00001C C??? F???      01236         MOVFF   (_SetupPacket + 2), _deviceAddress
000020 D???           01237         BRA     _00163_DS_
000022                01238 _00161_DS_:
000022 ????           01239         BANKSEL (_SetupPacket + 1)
                      01240 ;       .line   147; src/picUSB.c       else if (SetupPacket.bRequest == GET_DESCRIPTOR)
000024 51??           01241         MOVF    (_SetupPacket + 1), W, B
000026 0A06           01242         XORLW   0x06
000028 E1??           01243         BNZ     _00158_DS_
                      01244 ;       .line   149; src/picUSB.c       GetDescriptor();
00002A EC?? F???      01245         CALL    _GetDescriptor
00002E D???           01246         BRA     _00163_DS_
000030                01247 _00158_DS_:
000030 ????           01248         BANKSEL (_SetupPacket + 1)
                      01249 ;       .line   152; src/picUSB.c       else if (SetupPacket.bRequest == SET_CONFIGURATION)
000032 51??           01250         MOVF    (_SetupPacket + 1), W, B
000034 0A09           01251         XORLW   0x09
000036 E1??           01252         BNZ     _00155_DS_
                      01253 ;       .line   154; src/picUSB.c       requestHandled = 1;
000038 0E01           01254         MOVLW   0x01
00003A ????           01255         BANKSEL _requestHandled
00003C 6F??           01256         MOVWF   _requestHandled, B
                      01257 ;       .line   155; src/picUSB.c       usb_configure_endpoints();
00003E EC?? F???      01258         CALL    _usb_configure_endpoints
                      01259 ;       .line   156; src/picUSB.c       currentConfiguration = SetupPacket.wValue0;
000042 C??? F???      01260         MOVFF   (_SetupPacket + 2), _currentConfiguration
000046 ????           01261         BANKSEL _currentConfiguration
                      01262 ;       .line   159; src/picUSB.c       if (currentConfiguration == 0)
000048 51??           01263         MOVF    _currentConfiguration, W, B
00004A E1??           01264         BNZ     _00144_DS_
                      01265 ;       .line   162; src/picUSB.c       deviceState = ADDRESS;
00004C 0E04           01266         MOVLW   0x04
00004E ????           01267         BANKSEL _deviceState
000050 6F??           01268         MOVWF   _deviceState, B
000052 D???           01269         BRA     _00163_DS_
000054                01270 _00144_DS_:
                      01271 ;       .line   165; src/picUSB.c       deviceState = CONFIGURED;
000054 0E05           01272         MOVLW   0x05
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000056 ????           01273         BANKSEL _deviceState
000058 6F??           01274         MOVWF   _deviceState, B
00005A D???           01275         BRA     _00163_DS_
00005C                01276 _00155_DS_:
00005C ????           01277         BANKSEL (_SetupPacket + 1)
                      01278 ;       .line   172; src/picUSB.c       else if (SetupPacket.bRequest == GET_CONFIGURATION)
00005E 51??           01279         MOVF    (_SetupPacket + 1), W, B
000060 0A08           01280         XORLW   0x08
000062 E1??           01281         BNZ     _00152_DS_
                      01282 ;       .line   174; src/picUSB.c       requestHandled = 1;
000064 0E01           01283         MOVLW   0x01
000066 ????           01284         BANKSEL _requestHandled
000068 6F??           01285         MOVWF   _requestHandled, B
                      01286 ;       .line   175; src/picUSB.c       outPtr = (byte*)&currentConfiguration;
00006A 0E??           01287         MOVLW   HIGH(_currentConfiguration)
00006C ????           01288         BANKSEL (_outPtr + 1)
00006E 6F??           01289         MOVWF   (_outPtr + 1), B
000070 0E??           01290         MOVLW   LOW(_currentConfiguration)
                      01291 ; removed redundant BANKSEL
000072 6F??           01292         MOVWF   _outPtr, B
000074 0E80           01293         MOVLW   0x80
                      01294 ; removed redundant BANKSEL
000076 6F??           01295         MOVWF   (_outPtr + 2), B
                      01296 ;       .line   176; src/picUSB.c       wCount = 1;
000078 0E01           01297         MOVLW   0x01
00007A ????           01298         BANKSEL _wCount
00007C 6F??           01299         MOVWF   _wCount, B
                      01300 ; removed redundant BANKSEL
00007E 6B??           01301         CLRF    (_wCount + 1), B
000080 D???           01302         BRA     _00163_DS_
000082                01303 _00152_DS_:
000082 ????           01304         BANKSEL (_SetupPacket + 1)
                      01305 ;       .line   191; src/picUSB.c       else if (SetupPacket.bRequest == GET_INTERFACE)
000084 51??           01306         MOVF    (_SetupPacket + 1), W, B
000086 0A0A           01307         XORLW   0x0a
000088 E1??           01308         BNZ     _00149_DS_
                      01309 ;       .line   195; src/picUSB.c       requestHandled = 1;
00008A 0E01           01310         MOVLW   0x01
00008C ????           01311         BANKSEL _requestHandled
00008E 6F??           01312         MOVWF   _requestHandled, B
000090 ????           01313         BANKSEL _controlTransferBuffer
                      01314 ;       .line   196; src/picUSB.c       controlTransferBuffer[0] = 0;
000092 6B??           01315         CLRF    _controlTransferBuffer, B
                      01316 ;       .line   197; src/picUSB.c       outPtr = (byte *)&controlTransferBuffer;
000094 0E??           01317         MOVLW   HIGH(_controlTransferBuffer)
000096 ????           01318         BANKSEL (_outPtr + 1)
000098 6F??           01319         MOVWF   (_outPtr + 1), B
00009A 0E??           01320         MOVLW   LOW(_controlTransferBuffer)
                      01321 ; removed redundant BANKSEL
00009C 6F??           01322         MOVWF   _outPtr, B
00009E 0E80           01323         MOVLW   0x80
                      01324 ; removed redundant BANKSEL
0000A0 6F??           01325         MOVWF   (_outPtr + 2), B
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01326 ;       .line   198; src/picUSB.c       wCount = 1;
0000A2 0E01           01327         MOVLW   0x01
0000A4 ????           01328         BANKSEL _wCount
0000A6 6F??           01329         MOVWF   _wCount, B
                      01330 ; removed redundant BANKSEL
0000A8 6B??           01331         CLRF    (_wCount + 1), B
0000AA D???           01332         BRA     _00163_DS_
0000AC                01333 _00149_DS_:
0000AC ????           01334         BANKSEL (_SetupPacket + 1)
                      01335 ;       .line   201; src/picUSB.c       else if (SetupPacket.bRequest == SET_INTERFACE)
0000AE 51??           01336         MOVF    (_SetupPacket + 1), W, B
0000B0 0A0B           01337         XORLW   0x0b
0000B2 E1??           01338         BNZ     _00163_DS_
                      01339 ;       .line   204; src/picUSB.c       requestHandled = 1;
0000B4 0E01           01340         MOVLW   0x01
0000B6 ????           01341         BANKSEL _requestHandled
0000B8 6F??           01342         MOVWF   _requestHandled, B
0000BA                01343 _00163_DS_:
0000BA 0012           01344         RETURN  
                      01345 
                      01346 ; ; Starting pCode block
                      01347 S_picUSB__GetDescriptor code
000000                01348 _GetDescriptor:
                      01349 ;       .line   85; src/picUSB.c        static void GetDescriptor()
000000 C??? FFE5      01350         MOVFF   r0x00, POSTDEC1
000004 C??? FFE5      01351         MOVFF   r0x01, POSTDEC1
000008 C??? FFE5      01352         MOVFF   r0x02, POSTDEC1
00000C ????           01353         BANKSEL _SetupPacket
                      01354 ;       .line   87; src/picUSB.c        if(SetupPacket.bmRequestType == 0x80)
00000E 51??           01355         MOVF    _SetupPacket, W, B
000010 0A80           01356         XORLW   0x80
000012 E0??           01357         BZ      _00130_DS_
000014 D???           01358         BRA     _00115_DS_
000016                01359 _00130_DS_:
000016 ????           01360         BANKSEL (_SetupPacket + 3)
                      01361 ;       .line   92; src/picUSB.c        if (SetupPacket.wValue1 == DEVICE_DESCRIPTOR)
000018 51??           01362         MOVF    (_SetupPacket + 3), W, B
00001A 0A01           01363         XORLW   0x01
00001C E1??           01364         BNZ     _00111_DS_
                      01365 ;       .line   94; src/picUSB.c        requestHandled = 1;
00001E 0E01           01366         MOVLW   0x01
000020 ????           01367         BANKSEL _requestHandled
000022 6F??           01368         MOVWF   _requestHandled, B
                      01369 ;       .line   95; src/picUSB.c        outPtr = (byte *)&device_descriptor;
000024 0E??           01370         MOVLW   UPPER(_device_descriptor)
000026 ????           01371         BANKSEL (_outPtr + 2)
000028 6F??           01372         MOVWF   (_outPtr + 2), B
00002A 0E??           01373         MOVLW   HIGH(_device_descriptor)
                      01374 ; removed redundant BANKSEL
00002C 6F??           01375         MOVWF   (_outPtr + 1), B
00002E 0E??           01376         MOVLW   LOW(_device_descriptor)
                      01377 ; removed redundant BANKSEL
000030 6F??           01378         MOVWF   _outPtr, B
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01379 ;       .line   96; src/picUSB.c        wCount = sizeof(USB_Device_Descriptor);
000032 0E12           01380         MOVLW   0x12
000034 ????           01381         BANKSEL _wCount
000036 6F??           01382         MOVWF   _wCount, B
                      01383 ; removed redundant BANKSEL
000038 6B??           01384         CLRF    (_wCount + 1), B
00003A D???           01385         BRA     _00115_DS_
00003C                01386 _00111_DS_:
00003C ????           01387         BANKSEL (_SetupPacket + 3)
                      01388 ;       .line   99; src/picUSB.c        else if (SetupPacket.wValue1 == CONFIGURATION_DESCRIPTOR)
00003E 51??           01389         MOVF    (_SetupPacket + 3), W, B
000040 0A02           01390         XORLW   0x02
000042 E1??           01391         BNZ     _00108_DS_
                      01392 ;       .line   101; src/picUSB.c       requestHandled = 1;
000044 0E01           01393         MOVLW   0x01
000046 ????           01394         BANKSEL _requestHandled
000048 6F??           01395         MOVWF   _requestHandled, B
                      01396 ;       .line   102; src/picUSB.c       outPtr = (byte *)&configuration_descriptor;
00004A 0E??           01397         MOVLW   UPPER(_configuration_descriptor)
00004C ????           01398         BANKSEL (_outPtr + 2)
00004E 6F??           01399         MOVWF   (_outPtr + 2), B
000050 0E??           01400         MOVLW   HIGH(_configuration_descriptor)
                      01401 ; removed redundant BANKSEL
000052 6F??           01402         MOVWF   (_outPtr + 1), B
000054 0E??           01403         MOVLW   LOW(_configuration_descriptor)
                      01404 ; removed redundant BANKSEL
000056 6F??           01405         MOVWF   _outPtr, B
                      01406 ;       .line   103; src/picUSB.c       wCount = configuration_descriptor.Header.wTotalLength;
000058 0E??           01407         MOVLW   LOW(_configuration_descriptor + 2)
00005A 6EF6           01408         MOVWF   TBLPTRL
00005C 0E??           01409         MOVLW   HIGH(_configuration_descriptor + 2)
00005E 6EF7           01410         MOVWF   TBLPTRH
000060 0E??           01411         MOVLW   UPPER(_configuration_descriptor + 2)
000062 6EF8           01412         MOVWF   TBLPTRU
000064 0009           01413         TBLRD*+ 
000066 CFF5 F???      01414         MOVFF   TABLAT, _wCount
00006A 0009           01415         TBLRD*+ 
00006C CFF5 F???      01416         MOVFF   TABLAT, (_wCount + 1)
000070 D???           01417         BRA     _00115_DS_
000072                01418 _00108_DS_:
000072 ????           01419         BANKSEL (_SetupPacket + 3)
                      01420 ;       .line   106; src/picUSB.c       else if (SetupPacket.wValue1 == STRING_DESCRIPTOR)
000074 51??           01421         MOVF    (_SetupPacket + 3), W, B
000076 0A03           01422         XORLW   0x03
000078 E1??           01423         BNZ     _00115_DS_
                      01424 ;       .line   108; src/picUSB.c       requestHandled = 1;
00007A 0E01           01425         MOVLW   0x01
00007C ????           01426         BANKSEL _requestHandled
00007E 6F??           01427         MOVWF   _requestHandled, B
                      01428 ; ;multiply lit val:0x03 by variable (_SetupPacket + 2) and store in r0x00
000080 ????           01429         BANKSEL (_SetupPacket + 2)
                      01430 ;       .line   110; src/picUSB.c       outPtr = string_descriptor[SetupPacket.wValue0];
000082 51??           01431         MOVF    (_SetupPacket + 2), W, B
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000084 0D03           01432         MULLW   0x03
000086 50F4           01433         MOVF    PRODH, W
000088 6E??           01434         MOVWF   r0x01
00008A CFF3 F???      01435         MOVFF   PRODL, r0x00
00008E 6A??           01436         CLRF    r0x02
000090 0E??           01437         MOVLW   LOW(_string_descriptor)
000092 26??           01438         ADDWF   r0x00, F
000094 0E??           01439         MOVLW   HIGH(_string_descriptor)
000096 22??           01440         ADDWFC  r0x01, F
000098 0E??           01441         MOVLW   UPPER(_string_descriptor)
00009A 22??           01442         ADDWFC  r0x02, F
00009C C??? FFF6      01443         MOVFF   r0x00, TBLPTRL
0000A0 C??? FFF7      01444         MOVFF   r0x01, TBLPTRH
0000A4 C??? FFF8      01445         MOVFF   r0x02, TBLPTRU
0000A8 0009           01446         TBLRD*+ 
0000AA CFF5 F???      01447         MOVFF   TABLAT, _outPtr
0000AE 0009           01448         TBLRD*+ 
0000B0 CFF5 F???      01449         MOVFF   TABLAT, (_outPtr + 1)
0000B4 0009           01450         TBLRD*+ 
0000B6 CFF5 F???      01451         MOVFF   TABLAT, (_outPtr + 2)
                      01452 ;       .line   111; src/picUSB.c       wCount = *outPtr;
0000BA C??? F???      01453         MOVFF   _outPtr, r0x00
0000BE C??? F???      01454         MOVFF   (_outPtr + 1), r0x01
0000C2 C??? F???      01455         MOVFF   (_outPtr + 2), r0x02
0000C6 C??? FFE9      01456         MOVFF   r0x00, FSR0L
0000CA C??? FFF3      01457         MOVFF   r0x01, PRODL
0000CE 50??           01458         MOVF    r0x02, W
0000D0 EC?? F???      01459         CALL    __gptrget1
0000D4 6E??           01460         MOVWF   r0x00
0000D6 C??? F???      01461         MOVFF   r0x00, _wCount
0000DA ????           01462         BANKSEL (_wCount + 1)
0000DC 6B??           01463         CLRF    (_wCount + 1), B
0000DE                01464 _00115_DS_:
0000DE CFE4 F???      01465         MOVFF   PREINC1, r0x02
0000E2 CFE4 F???      01466         MOVFF   PREINC1, r0x01
0000E6 CFE4 F???      01467         MOVFF   PREINC1, r0x00
0000EA 0012           01468         RETURN  
                      01469 
                      01470 
                      01471 
                      01472 ; Statistics:
                      01473 ; code size:     1782 (0x06f6) bytes ( 1.36%)
                      01474 ;                 891 (0x037b) words
                      01475 ; udata size:     334 (0x014e) bytes (18.64%)
                      01476 ; access size:     10 (0x000a) bytes
                      01477 
                      01478 
                      01479         end
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 29


SYMBOL TABLE
  LABEL                             VALUE

FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC0                          00000FEE
POSTINC1                          00000FE6
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
TABLAT                            00000FF5
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
WREG                              00000FE8
_00108_DS_                        00000072
_00111_DS_                        0000003C
_00115_DS_                        000000DE
_00130_DS_                        00000016
_00144_DS_                        00000054
_00149_DS_                        000000AC
_00152_DS_                        00000082
_00155_DS_                        0000005C
_00158_DS_                        00000030
_00161_DS_                        00000022
_00163_DS_                        000000BA
_00207_DS_                        0000004A
_00208_DS_                        00000050
_00209_DS_                        0000012E
_00213_DS_                        00000196
_00225_DS_                        0000003E
_00231_DS_                        0000013E
_00232_DS_                        00000174
_00233_DS_                        00000192
_00238_DS_                        000000A4
_00242_DS_                        00000108
_00253_DS_                        000000AE
_00254_DS_                        000000E4
_00255_DS_                        00000102
_00261_DS_                        0000006A
_00263_DS_                        0000009A
_00266_DS_                        00000048
_00267_DS_                        000000B8
_00283_DS_                        00000060
_00294_DS_                        00000050
_00297_DS_                        00000058
_00300_DS_                        00000032
_00305_DS_                        00000078
_00308_DS_                        00000096
_00311_DS_                        0000009E
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

_00314_DS_                        0000005E
_00319_DS_                        000000A4
_00321_DS_                        000000B2
_00370_DS_                        00000010
_00374_DS_                        0000002A
_00396_DS_                        00000016
_00398_DS_                        00000026
_00416_DS_                        00000014
_00421_DS_                        0000002A
_00424_DS_                        00000032
_00431_DS_                        00000048
_10413_DS_                        000000E4
_20414_DS_                        00000102
_30415_DS_                        00000174
_40416_DS_                        00000192
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_BusReset                         00000000
_CCP1AS                           00000000
_CCP1ASbits                       00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP1DEL                          00000000
_CCP1DELbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EEDATA                           00000000
_EnableUSBModule                  00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_GetDescriptor                    00000000
_HLVDCON                          00000000
_HLVDCONbits                      00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_InDataStage                      00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LVDCON                           00000000
_LVDCONbits                       00000000
_OSCCON                           00000000
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_OutDataStage                     00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_ProcessControlTransfer           00000000
_ProcessStandardRequest           00000000
_ProcessUSBTransactions           00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRGH                           00000000
_SPPCFG                           00000000
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

_SPPCFGbits                       00000000
_SPPCON                           00000000
_SPPCONbits                       00000000
_SPPDATA                          00000000
_SPPEPS                           00000000
_SPPEPSbits                       00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_SetupPacket                      00000000
_SetupStage                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0                             00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1                             00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_UADDR                            00000000
_UADDRbits                        00000000
_UCFG                             00000000
_UCFGbits                         00000000
_UCON                             00000000
_UCONbits                         00000000
_UEIE                             00000000
_UEIEbits                         00000000
_UEIR                             00000000
_UEIRbits                         00000000
_UEP0                             00000000
_UEP0bits                         00000000
_UEP1                             00000000
_UEP10                            00000000
_UEP10bits                        00000000
_UEP11                            00000000
_UEP11bits                        00000000
_UEP12                            00000000
_UEP12bits                        00000000
_UEP13                            00000000
_UEP13bits                        00000000
_UEP14                            00000000
_UEP14bits                        00000000
_UEP15                            00000000
_UEP15bits                        00000000
_UEP1bits                         00000000
_UEP2                             00000000
_UEP2bits                         00000000
_UEP3                             00000000
_UEP3bits                         00000000
_UEP4                             00000000
_UEP4bits                         00000000
_UEP5                             00000000
_UEP5bits                         00000000
_UEP6                             00000000
_UEP6bits                         00000000
_UEP7                             00000000
_UEP7bits                         00000000
_UEP8                             00000000
_UEP8bits                         00000000
_UEP9                             00000000
_UEP9bits                         00000000
_UFRM                             00000000
_UFRMH                            00000000
_UFRMHbits                        00000000
_UFRML                            00000000
gpasm-0.14.2 #774 (Oct 23 2012) obj/picUSB.as   12-15-2012  16:08:58        PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

_UFRMLbits                        00000000
_UIE                              00000000
_UIEbits                          00000000
_UIR                              00000000
_UIRbits                          00000000
_USTAT                            00000000
_USTATbits                        00000000
_UnSuspend                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
_WaitForSetupStage                00000000
__18F4550                         00000001
__gptrget1                        00000000
__gptrput1                        00000000
_bootCmd                          00000000
_configuration_descriptor         00000000
_controlTransferBuffer            00000040
_ctrlTransferStage                00000000
_currentConfiguration             00000000
_deviceAddress                    00000000
_deviceState                      00000000
_device_descriptor                00000000
_ep_bdt                           00000400
_inPtr                            00000000
_outPtr                           00000000
_requestHandled                   00000000
_selfPowered                      00000000
_string_descriptor                00000000
_usb_configure_endpoints          00000000
_usb_ep_data_out_callback         00000000
_wCount                           00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

